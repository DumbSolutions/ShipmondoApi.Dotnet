openapi: 3.0.1
info:
  description: A unofficial thirdparty library for shipmondo api for dotnet
  title: Shipmondo API
  version: "3"
servers:
- url: https://app.shipmondo.com/api/public/v3
paths:
  /account/:
    get:
      description: Returns infomation on the currenctly logged in account.
      operationId: account
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_200_response'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
      security:
      - basicAuth: []
      summary: Retrieve account infomation
      tags:
      - Account
  /account/balance:
    get:
      description: Returns the current balance of your account.
      operationId: account_balance_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_balance_get_200_response'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
      security:
      - basicAuth: []
      summary: Retrieve balance
      tags:
      - Account
  /account/payment_requests:
    get:
      description: |-
        Returns a list of your payment requests. If there are unsettled payment requests, they can block you from using the API.

        Unsettled payment requests must settled through the Shipmondo app, unless the account is set to automatic settlement.
      operationId: payment_requests_get
      parameters:
      - description: |
          "From" timestamp for the payment requests to be included in the filter. Examples:
          * 2017-06-19T11:00:03.305+02:00
          * 2017-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the payment requests to be included in the filter. Examples:
          * 2017-06-29T11:00:03.305+02:00
          * 2017-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: |-
          For pagination. Defines which page the results are fetched
          from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentRequest'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
      security:
      - basicAuth: []
      summary: List all payment requests
      tags:
      - Account
  /bookkeeping_integrations:
    get:
      description: "Returns a list of your bookkeeping integrations.\n\n      \n Bookkeeping\
        \ integrations are used to automatically create invoices from your orders\
        \ and transfer them to your external bookkeeping system."
      operationId: bookkeeping_integrations_get
      parameters:
      - description: ID for the bookkeeping integrations to be included in the filtered
          results.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BookkeepingIntegration'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all bookkeeping integrations
      tags:
      - Bookkeeping integrations
  /bookkeeping_integrations/{id}:
    get:
      description: "Returns the details of a bookkeeping integration.\n\n\n      \n\
        \ Bookkeeping integrations are used to automatically create invoices from\
        \ your orders and transfer them to your external bookkeeping system."
      operationId: bookkeeping_integration_get
      parameters:
      - description: ID for the bookkeeping integration to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookkeepingIntegration'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a bookkeeping integration
      tags:
      - Bookkeeping integrations
  /carriers:
    get:
      description: |-
        Returns a list of available carriers for your account.

        Carriers are retrieved based on own agreements and Shipmondo's agreements.
      operationId: carriers_get
      parameters:
      - description: Sender country code to be included in the filter.
        explode: true
        in: query
        name: sender_country_code
        required: false
        schema:
          example: DK
          type: string
        style: form
      - description: Receiver country code to be included in the filter.
        explode: true
        in: query
        name: receiver_country_code
        required: true
        schema:
          example: DK
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carriers'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: List available carriers
      tags:
      - "Carriers, products & services"
  /products:
    get:
      description: "\n         Returns a list of shipping products and services.\n\
        \n\n         Only products available for the user are returned.\n\n\n    \
        \     The codes of the products and services are required when creating a\
        \ shipment.\n      "
      operationId: products_get
      parameters:
      - description: ID for the product to be included in the filter.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: Code for the product to be included in the filter.
        explode: true
        in: query
        name: product_code
        required: false
        schema:
          example: GLSDK_SD
          type: string
        style: form
      - description: Country code (ISO Alpha-2) of the sender country to be included
          in the filter.
        explode: true
        in: query
        name: sender_country_code
        required: false
        schema:
          example: DK
          type: string
        style: form
      - description: Country code (ISO Alpha-2) of the receiver country to be included
          in the filter.
        explode: true
        in: query
        name: receiver_country_code
        required: false
        schema:
          example: DK
          type: string
        style: form
      - description: Carrier code to be included in the filter.
        explode: true
        in: query
        name: carrier_code
        required: false
        schema:
          example: gls
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShippingProduct'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all products
      tags:
      - "Carriers, products & services"
  /package_types:
    get:
      description: "\n         Returns a list of package types for a product.\n\n\n\
        \         Package types returned can be used when defining parcels in shipment\
        \ booking.\n      "
      operationId: package_types_get
      parameters:
      - description: Code for the product to be included in the filter
        explode: true
        in: query
        name: product_code
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageType'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all package types
      tags:
      - "Carriers, products & services"
  /documents/end_of_day:
    get:
      description: "Returns an End of Day list for a specific carrier, with all shipments\
        \ set to be picked up in the selected time."
      operationId: end_of_day_get
      parameters:
      - description: Carrier code of the carrier you want to retrieve the list for.
        explode: true
        in: query
        name: carrier_code
        required: true
        schema:
          enum:
          - airmee
          - alpi
          - b2c_europe
          - best
          - bft
          - bhs_logistics
          - bpost
          - bring
          - brink
          - budbee
          - burd
          - bws
          - cm_transport
          - collicare
          - dachser
          - dansk_distribution
          - dao
          - db_schenker
          - deutsche_post
          - dfm
          - dhl_express
          - dhl_freight_se
          - dhl_parcel
          - doorhub
          - dpd
          - dsv
          - dsv_xpress
          - early_bird
          - endepunkt
          - esbjerg_gods
          - fed_ex
          - freja
          - frms
          - geodis
          - gls
          - gls_de
          - gls_e
          - gls_pl
          - helthjem
          - hurrah_today
          - instabox
          - interfjord
          - jjd
          - kht
          - leman
          - mover
          - pdk
          - per_dg
          - posten_norge
          - posti
          - post_nl
          - post_nord
          - rb9
          - sand_distribution
          - sdl
          - srt
          - test_gc
          - tnt
          - ub_db_schenker_se
          - unspecified
          - ups
          - xpressen
          type: string
        style: form
      - description: |
          "From" timestamp for the end of day list. Examples:
          * 2018-06-19T11:00:00.305+02:00
          * 2018-06-19 will be transformed into 2018-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: from_time
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the end of day list. Examples:
          * 2018-06-20T11:00:00.305+02:00
          * 2018-06-20 will be transformed into 2018-06-20T00:00:00.000+02:00
        explode: true
        in: query
        name: to_time
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve an End of Day list
      tags:
      - Documents
  /documents/waybill:
    get:
      description: "Returns a waybill for letter products, such as PostNord Tracked\
        \ and Untracked."
      operationId: waybill_get
      parameters:
      - description: Carrier code to be included in the filter
        explode: true
        in: query
        name: carrier_code
        required: true
        schema:
          default: pdk
          enum:
          - pdk
          - deutsche_post
          type: string
        style: form
      - description: |-
          Quantity of bags to be declared <br> <strong>Note:</strong> <ul>
          <li>Required for PostNord</li> <li>Required for Deutsche Post, but is only used if an open order is being closed</li>
        explode: true
        in: query
        name: bag_quantity
        required: true
        schema:
          default: 0
          type: integer
        style: form
      - description: |-
          Quantity of bags to be declared <br> <strong>Note:</strong> <ul>
          <li>Required for PostNord</li> <li>If used with Deutsche Post it is just added to bag_quantity</li></ul>
        explode: true
        in: query
        name: container_quantity
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: |
          "From" timestamp for the waybill document. Examples:
          * 2018-06-19T11:00:00.305+02:00
          * 2018-06-19 will be transformed into 2018-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: from_time
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the waybill document. Examples:
          * 2018-06-20T11:00:00.305+02:00
          * 2018-06-20 will be transformed into 2018-06-20T00:00:00.000+02:00
        explode: true
        in: query
        name: to_time
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Determines the product of the waybill:
          * 1 / none = Varebrev (Legacy)
          * 2 = PostNord Tracked
          * 3 = PostNord Untracked
        explode: true
        in: query
        name: product_id
        required: false
        schema:
          default: 1
          enum:
          - 1
          - 2
          - 3
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a waybill
      tags:
      - Documents
  /draft_shipments:
    get:
      description: "Returns a list of draft shipments.\n\n      \nThe draft shipment\
        \ contains basic information from which a shipment can be created through\
        \ Shipmondo later."
      operationId: draft_shipments_get
      parameters:
      - description: ID for the draft shipment to be included in the filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: Order ID for the draft shipment to be included in the filter
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter if the draft shipment is archived or not
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter if there has been created a label for the draft shipments
          or not
        explode: true
        in: query
        name: label_created
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          "From" timestamp for the draft shipments to be included in the filter. Examples:
          * 2017-06-19T11:00:03.305+02:00
          * 2017-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the draft shipments to be included in the filter. Examples:
          * 2017-06-29T11:00:03.305+02:00
          * 2017-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DraftShipment'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all draft shipments
      tags:
      - Draft shipments
    post:
      description: "Creates a draft shipment.\n\n      \nThe draft shipment contains\
        \ basic information from which a shipment can be created through Shipmondo\
        \ later."
      operationId: draft_shipments_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraftShipmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftShipment'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a draft shipment
      tags:
      - Draft shipments
      x-codegen-request-body-name: body
  /draft_shipments/{id}:
    delete:
      description: Archives a draft shipment. The draft shipment will be marked as
        archived and will no longer be visible at Shipmondo.
      operationId: draft_shipment_delete
      parameters:
      - description: ID for the draft shipment that need to be archived
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftShipment'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Archive a draft shipment
      tags:
      - Draft shipments
    get:
      description: "Returns the details of a draft shipment.\n\n      \nThe draft\
        \ shipment contains basic information from which a shipment can be created\
        \ through Shipmondo later."
      operationId: draft_shipment_get
      parameters:
      - description: ID for the draft shipment to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftShipment'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a draft shipment
      tags:
      - Draft shipments
    put:
      description: "Updates the specified draft shipment by setting the values of\
        \ the parameters passed. Any parameters not provided will be left unchanged.\n\
        \n      \nThe draft shipment contains basic information from which a shipment\
        \ can be created through Shipmondo later."
      operationId: draft_shipment_put
      parameters:
      - description: ID for the draft shipment that need to be updated
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraftShipmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftShipment'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Update a draft shipment
      tags:
      - Draft shipments
      x-codegen-request-body-name: body
  /items:
    get:
      description: |-
        Returns a list of items.

        Items are the products and services that are sold as part of an order. They are created by a unique SKU when an order is placed, through item import, or through the API.
      operationId: items_get
      parameters:
      - description: ID of the item that needs to be considered for filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: SKU of the item that needs to be considered for filter
        explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      - description: Name of the item that needs to be considered for filter
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The barcode value of the item that needs to be considered for
          filter
        explode: true
        in: query
        name: barcode
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          "From" timestamp for the items to be included in the filter. Examples:
          * 2017-06-19T11:00:03.305+02:00
          * 2017-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the items to be included in the filter. Examples:
          * 2017-06-29T11:00:03.305+02:00
          * 2017-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "From" value of "updated" timestamp for the items to be included in the filter. Examples:
          * 2018-06-19T11:00:03.305+02:00
          * 2018-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: updated_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" value of "updated" timestamp for the items to be included in the filter. Examples:
          * 2018-06-29T11:00:03.305+02:00
          * 2018-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: updated_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Item'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all items
      tags:
      - Items
    post:
      description: "Creates a new item with the specified information.\n\n      \n\
        Items are the products and services that are sold as part of an order. They\
        \ are created by a unique SKU when an order is placed, through item import,\
        \ or through the API."
      operationId: item_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateItemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Create an item
      tags:
      - Items
      x-codegen-request-body-name: body
  /items/{id}:
    get:
      description: "Returns the details of an item.\n\n      \nItems are the products\
        \ and services that are sold as part of an order. They are created by a unique\
        \ SKU when an order is placed, through item import, or through the API."
      operationId: item_get
      parameters:
      - description: ID for the item to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve an item
      tags:
      - Items
    put:
      description: "\n      Updates the specified item by setting the values of the\
        \ parameters passed.\n\n\n      Any parameters not provided will be left unchanged.\n\
        \n\n      Updating the **SKU** is not possible.\n\n      "
      operationId: item_update
      parameters:
      - description: ID for the item that is to be updated
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Update an item
      tags:
      - Items
      x-codegen-request-body-name: body
  /shipments/{id}/labels:
    get:
      description: |-
        Returns labels for a specific shipment. Labels are delivered as Base64-encoded data.

        For PNG format, each label has its own object. For all others, the labels are collected in one object.
      operationId: shipment_labels
      parameters:
      - description: ID for the shipment to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Which format the labels should be.
        explode: true
        in: query
        name: label_format
        required: false
        schema:
          enum:
          - a4_pdf
          - 10x19_pdf
          - 10x19_png
          - 10x19_zpl
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Label'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve labels of a shipment
      tags:
      - Labels
  /labels:
    get:
      description: |-
        Returns labels for multiple shipments.

        For PNG format each label has its own object in the labels array. For all other, the labels is collected in one object.
      operationId: labels_get
      parameters:
      - description: Comma-separated list of shipment IDs which labels should be retrieved
          for. Limited to 25 shipment IDs per request.
        example: "10075,10076,10077"
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Format for the labels. Available: a4_pdf, 10x19_pdf, 10x19_png, 10x19_zpl
        explode: true
        in: query
        name: label_format
        required: false
        schema:
          enum:
          - a4_pdf
          - 10x19_pdf
          - 10x19_png
          - 10x19_zpl
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Labels'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve labels for multiple shipments
      tags:
      - Labels
  /payment_gateways:
    get:
      description: "Returns a list of payment gateways.\n\n      \nPayment gateways\
        \ are integrations created through Shipmondo to payment service providers.\
        \ They are used to capture and cancel payments through Shipmondo."
      operationId: payment_gateways_get
      parameters:
      - description: ID for the payment gateway to be included in the filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentGateway'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all payment gateways
      tags:
      - Payment gateways
  /payment_gateways/{id}:
    get:
      description: "Returns the details of a payment gateway.\n\n      \nPayment gateways\
        \ are integrations created through Shipmondo to payment service providers.\
        \ They are used to capture and cancel payments through Shipmondo."
      operationId: payment_gateway_get
      parameters:
      - description: ID for the payment gateway to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGateway'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a payment gateway
      tags:
      - Payment gateways
  /pickup_requests:
    get:
      description: Returns a list of pickup requests.
      operationId: pickup_requests_get
      parameters:
      - description: ID for the pickup request to be included in the filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: Carrier code to be included in the filter.
        explode: true
        in: query
        name: carrier_code
        required: false
        schema:
          enum:
          - fed_ex
          - ups
          - dhl_express
          - geodis
          - dhl_freight_se
          - post_nord
          - bring
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PickupRequestNoShipments'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
      security:
      - basicAuth: []
      summary: List all pickup requests
      tags:
      - Pickup requests
    post:
      description: Creates a pickup request and processes the booking at the carrier.
      operationId: pickup_requests_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePickupRequestRequest'
        description: Pickup Request object<br>
        required: true
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/PickupRequest'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a pickup request
      tags:
      - Pickup requests
      x-codegen-request-body-name: body
  /pickup_requests/{id}:
    get:
      description: Returns the details of a pickup request.
      operationId: pickup_requests_show
      parameters:
      - description: ID for the pickup request to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickupRequest'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a pickup request
      tags:
      - Pickup requests
  /printers:
    get:
      description: "Returns a list of printers.\n\n      \nPrinters are created through\
        \ the Shipmondo print client uniquely per host. They are used to send print\
        \ jobs to the print client.\n\n      \nRelated articles:\n\n      - [Shipmondo\
        \ Print Client installation and setup guide](https://help.shipmondo.com/en/articles/2564458-shipmondo-print-client-installation-and-setup-guide)"
      operationId: printers_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Printer'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all printers
      tags:
      - Print client
  /print_jobs:
    post:
      description: "Creates a print job.\n\n      \nPrint jobs are sent to the print\
        \ client on the specified host to print documents.\n\n      \nRelated articles:\n\
        \n      - [Shipmondo Print Client installation and setup guide](https://help.shipmondo.com/en/articles/2564458-shipmondo-print-client-installation-and-setup-guide)"
      operationId: print_jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintJob'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/print_jobs_200_response'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Create a print job
      tags:
      - Print client
      x-codegen-request-body-name: body
  /print_jobs/batch:
    post:
      description: "Creates a batch of prints jobs to be printed in the specified\
        \ order on a specified host.\n\n      \nRelated articles:\n\n      - [Shipmondo\
        \ Print Client installation and setup guide](https://help.shipmondo.com/en/articles/2564458-shipmondo-print-client-installation-and-setup-guide)"
      operationId: print_jobs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintJobBatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/print_jobs_post_200_response'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Create a print job batch
      tags:
      - Print client
      x-codegen-request-body-name: body
  /quotes:
    post:
      description: "\n      Creates a shipment quote with specified sender (origin),\
        \ receiver (destination), product and services.\n\n\n      This method determines\
        \ the **estimated** price for a shipment on Shipmondo's agreement\n\n\n  \
        \    "
      operationId: quotes_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuoteRequest'
        description: Quote Object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuoteResponse'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a shipment quote
      tags:
      - Quotes
      x-codegen-request-body-name: body
  /quotes/list:
    post:
      description: "\n      Returns a list of available quotes for a shipment with\
        \ specified sender (origin), receiver (destination).\n\n\n      This method\
        \ fetches available **estimate** prices with different shipping products for\
        \ shipments using Shipmondo's agreement.\n\n\n      Some carriers might not\
        \ be available for technical reasons.\n      "
      operationId: quotes/list_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuoteListRequest'
        description: |
          Quote Objects.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CreateQuoteResponse'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: List available quotes for a shipment
      tags:
      - Quotes
      x-codegen-request-body-name: body
  /return_portals:
    get:
      description: Returns a list of return portals.
      operationId: return_portals_get
      parameters:
      - description: ID for the return portal.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: Filters for whether or not the return portal is active
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPortals'
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all return portals
      tags:
      - Return portals
  /return_portals/{id}:
    get:
      description: Returns the details of a return portal.
      operationId: return_portal_get
      parameters:
      - description: ID for the return portal to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnPortal'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a return portal
      tags:
      - Return portals
  /return_portals/{id}/shipments:
    get:
      description: Returns a list of shipments booked through a specific return portal.
      operationId: return_portals_shipments_get
      parameters:
      - description: ID for the return portal to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Order ID for the shipments to be included in the filter
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Package number for the shipments that need to be considered for
          filter
        explode: true
        in: query
        name: package_number
        required: false
        schema:
          type: string
        style: form
      - description: Carrier code to be included in the filter.
        explode: true
        in: query
        name: carrier_code
        required: false
        schema:
          enum:
          - airmee
          - alpi
          - b2c_europe
          - best
          - bft
          - bhs_logistics
          - bpost
          - bring
          - brink
          - budbee
          - burd
          - bws
          - cm_transport
          - collicare
          - dachser
          - dansk_distribution
          - dao
          - db_schenker
          - deutsche_post
          - dfm
          - dhl_express
          - dhl_freight_se
          - dhl_parcel
          - doorhub
          - dpd
          - dsv
          - dsv_xpress
          - early_bird
          - endepunkt
          - esbjerg_gods
          - fed_ex
          - freja
          - frms
          - geodis
          - gls
          - gls_de
          - gls_e
          - gls_pl
          - helthjem
          - hurrah_today
          - instabox
          - interfjord
          - jjd
          - kht
          - leman
          - mover
          - pdk
          - per_dg
          - posten_norge
          - posti
          - post_nl
          - post_nord
          - rb9
          - sand_distribution
          - sdl
          - srt
          - test_gc
          - tnt
          - ub_db_schenker_se
          - unspecified
          - ups
          - xpressen
          type: string
        style: form
      - description: ISO3166-1 alpha-2 country code to be included in the filter.
        explode: true
        in: query
        name: receiver_country
        required: false
        schema:
          type: string
        style: form
      - description: |
          "From" timestamp for the shipments to be included in the filter. Examples:
          * 2017-06-19T11:00:03.305+02:00
          * 2017-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the shipments to be included in the filter. Examples:
          * 2017-06-29T11:00:03.305+02:00
          * 2017-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Shipment'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all shipments for a return portal
      tags:
      - Return portals
  /sales_orders:
    get:
      description: "Returns a list of sales orders.\n\n      \nSales orders are used\
        \ handle all processes of the order flow, including but not limited to picking,\
        \ packing, sending shipments, and capturing payments through the Shipmondo\
        \ app."
      operationId: sales_orders_get
      parameters:
      - description: ID for the sales order to be included in the filter.
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: Order ID for the sales order to be included in the filter.
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      - description: reference for the order to be included in the filter.
        explode: true
        in: query
        name: reference
        required: false
        schema:
          type: string
        style: form
      - description: Billing email for the order to be included in the filter.
        explode: true
        in: query
        name: bill_to_email
        required: false
        schema:
          type: string
        style: form
      - description: Billing mobile for the order to be included in the filter.
        explode: true
        in: query
        name: bill_to_mobile
        required: false
        schema:
          type: string
        style: form
      - description: Shipping email for the order to be included in the filter.
        explode: true
        in: query
        name: ship_to_email
        required: false
        schema:
          type: string
        style: form
      - description: Shipping mobile for the order to be included in the filter.
        explode: true
        in: query
        name: ship_to_mobile
        required: false
        schema:
          type: string
        style: form
      - description: Filter for achived or not.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          "From" value of "created" timestamp for the sales orders to be included in the filter. Examples:
          * 2018-06-19T11:00:03.305+02:00
          * 2018-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |-
          "To" value of "created" timestamp for the sales orders to be included in the filter. Examples:
          * 2018-06-29T11:00:03.305+02:00
          * 2018-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |-
          "From" value of "updated" timestamp for the sales orders to be included in the filter. Examples:
          * 2018-06-19T11:00:03.305+02:00
          * 2018-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: updated_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |-
          "To" value of "updated" timestamp for the sales orders to be included in the filter. Examples:
          * 2018-06-29T11:00:03.305+02:00
          * 2018-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: updated_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SalesOrder'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all sales orders
      tags:
      - Sales orders
    post:
      description: "Creates a sales order.\n\n      \nSales orders are used handle\
        \ all processes of the order flow, including but not limited to picking, packing,\
        \ sending shipments, and capturing payments through the Shipmondo app."
      operationId: sales_orders_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSalesOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a sales order
      tags:
      - Sales orders
      x-codegen-request-body-name: body
  /sales_orders/{id}:
    get:
      description: "Returns the details of a sales order.\n\n      \nSales orders\
        \ are used handle all processes of the order flow, including but not limited\
        \ to picking, packing, sending shipments, and capturing payments through the\
        \ Shipmondo app."
      operationId: sales_order_get
      parameters:
      - description: ID for the sales order to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a sales order
      tags:
      - Sales orders
    put:
      description: "\n      Updates an existing sales order and its order lines. Updating\
        \ order lines is exclusively possible with open orders.\n\n      \nSales orders\
        \ are used handle all processes of the order flow, including but not limited\
        \ to picking, packing, sending shipments, and capturing payments through the\
        \ Shipmondo app.\n      "
      operationId: sales_order_put
      parameters:
      - description: ID for the sales order that needs to be updated
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSalesOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Update a sales order
      tags:
      - Sales orders
      x-codegen-request-body-name: body
  /sales_orders/{id}/order_note:
    put:
      description: Updates the note for a sales order.
      operationId: sales_order_update_note
      parameters:
      - description: ID for the sales order that note should be updated for
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSalesOrderNote'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Update a sales order note
      tags:
      - Sales orders
      x-codegen-request-body-name: body
  /sales_orders/{id}/create_shipment:
    post:
      description: "Creates a shipment for a sales order.\n\n      \nThe shipment\
        \ will be created based on the associated shipment template."
      operationId: sales_order_create_shipment
      parameters:
      - description: ID of the sales order to create a shipment for
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Create a shipment
      tags:
      - Sales orders
  /sales_orders/{id}/capture:
    post:
      description: "Captures payment for a sales order.\n\n      \nThe authorized\
        \ amount (or value of the fulfilled items amount if the setting is enabled)\
        \ for the transaction associated with the order will be captured."
      operationId: sales_order_capture
      parameters:
      - description: ID for the sales order that needs to be captured
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Capture payment
      tags:
      - Sales orders
  /sales_orders/barcode:
    post:
      description: Processes a sales order barcode and executes the defined actions.
        The actions that are executed are defined in the pick settings at Shipmondo.
      operationId: sales_order_barcode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessSalesOrderBarcode'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesOrder'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Process a barcode
      tags:
      - Sales orders
      x-codegen-request-body-name: body
  /sales_orders/{id}/pick_list:
    get:
      description: "Returns a pick list for a sales order. Pick list is delivered\
        \ as Base64-encoded data.\n\n      \nPick lists contain the items for the\
        \ order, and their locations, optimized for your picking flow."
      operationId: sales_order_pick_list
      parameters:
      - description: ID for the sales order to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Format for the pick list. Available: a4_pdf, 10x19_pdf
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - a4_pdf
          - 10x19_pdf
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PickListData'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a pick list
      tags:
      - Sales orders
  /sales_orders/{id}/packing_slips:
    get:
      description: "Returns a packing slip for a sales order. Packing slip is delivered\
        \ as Base64-encoded data.\n\n      \nPacking slips are branded slips used\
        \ for disclosing which orders are sent to the end customer."
      operationId: sales_order_packing_slips
      parameters:
      - description: ID for the sales order to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Format for the pick list. Available: a4_pdf, 10x19_pdf
        explode: true
        in: query
        name: format
        required: false
        schema:
          enum:
          - a4_pdf
          - 10x19_pdf
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingSlip'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a packing slip
      tags:
      - Sales orders
  /pick_lists:
    get:
      description: "Return pick lists for specific sales orders. Limit: **25** sales\
        \ order IDs per request.\n\n      \nPick lists contain the items for the order,\
        \ and their locations, optimized for your picking flow."
      operationId: pick_list_get
      parameters:
      - description: |
          A list of sales order IDs that you want to fetch pick lists for. Examples 10075,10076,10077
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Format for the pick lists. Available: a4_pdf, 10x19_pdf
        explode: true
        in: query
        name: output_format
        required: false
        schema:
          enum:
          - a4_pdf
          - 10x19_pdf
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PickList'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve pick lists
      tags:
      - Sales orders
  /packing_slips:
    get:
      description: "Returns packing slips for specific sales orders. Limit: **25**\
        \ sales order IDs per request.\n\n      \nPacking slips are branded slips\
        \ used for disclosing which orders are sent to the end customer."
      operationId: packing_slip_get
      parameters:
      - description: |
          A list of sales order IDs that you want to fetch packing slips for. Examples 10075,10076,10077
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Format for the packing slips. Available: a4_pdf, 10x19_pdf
        explode: true
        in: query
        name: output_format
        required: false
        schema:
          enum:
          - a4_pdf
          - 10x19_pdf
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackingSlip'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve packing slips
      tags:
      - Sales orders
  /sales_order_packagings:
    get:
      description: "Returns a list of the sales order packagings.\n\n      \nSales\
        \ order packaging is used to add dimensions and weight to shipments created\
        \ for the associated sales order."
      operationId: sales_order_packagings_get
      parameters:
      - description: ID for the sales order packaging to be included in the filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/SalesOrderPackaging'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all packagings
      tags:
      - Sales orders
  /sales_order_packagings/{id}:
    get:
      description: "Returns the details of a sales order packaging.\n\n      \nSales\
        \ order packaging is used to add dimensions and weight to shipments created\
        \ for the associated sales order."
      operationId: sales_order_packaging_get
      parameters:
      - description: ID for the sales order packaging to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SalesOrderPackaging'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a packaging
      tags:
      - Sales orders
  /sales_orders/{id}/fulfillments:
    get:
      description: "Lists all fulfillments for a sales_order.\n\n      \nFulfillments\
        \ are used for completing orders and creating shipments."
      operationId: sales_order_fulfillments_get
      parameters:
      - description: ID for the sales order to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentCreated'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: List fulfillments
      tags:
      - Sales orders
      x-codegen-request-body-name: body
    post:
      description: "Creates a fulfillment, based on a sales_order.\n\n      \nFulfillments\
        \ are used for completing orders and creating shipments."
      operationId: fulfillment_post
      parameters:
      - description: ID for the sales order to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFulfillmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentCreated'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a fulfillment
      tags:
      - Sales orders
      x-codegen-request-body-name: body
  /fulfillments/{id}:
    get:
      description: "Retrieves a fulfillment.\n\n      \nFulfillments are used for\
        \ completing orders and creating shipments."
      operationId: fulfillment_get
      parameters:
      - description: ID for the fulfillment to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentCreated'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Retrieve a fulfillment
      tags:
      - Sales orders
      x-codegen-request-body-name: body
  /pickup_points:
    get:
      description: "\n      Returns a list of the available and nearest pickup points\
        \ based on input.\n\n\n      Usually the address information given should\
        \ be the receivers address to find pickup points nearest their location.\n\
        \n\n      The identification of the pickup points can be used/required when\
        \ creating a shipment.\n      "
      operationId: pickup_points_get
      parameters:
      - description: Carrier code to be included in the filter.
        explode: true
        in: query
        name: carrier_code
        required: true
        schema:
          enum:
          - bpost
          - bring
          - budbee
          - bws
          - dao
          - db_schenker
          - dfm
          - dhl_freight_se
          - dhl_parcel
          - dsv_xpress
          - gls
          - gls_de
          - gls_pl
          - helthjem
          - pdk
          - post_nl
          - post_nord
          - posti
          - ub_db_schenker_se
          - ups
          example: gls
          type: string
        style: form
      - description: Country code (ISO Alpha-2) to be included in the filter.
        explode: true
        in: query
        name: country_code
        required: true
        schema:
          default: DK
          type: string
        style: form
      - description: Zip code / Postal code.
        explode: true
        in: query
        name: zipcode
        required: true
        schema:
          example: "5000"
          type: string
        style: form
      - description: |
          Name of the city. It is recommended to include city with the request to increase the hit accuracy.
        explode: true
        in: query
        name: city
        required: false
        schema:
          example: Odense
          type: string
        style: form
      - description: Street address (contains street name and house number)
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      - description: "The ID of the pickup point. Used to look up a specific service\
          \ point for a carrier. When used, zip code is no longer required. Some carrier\
          \ may not support this parameter."
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Defines how many pickup points are being returned.
        explode: true
        in: query
        name: quantity
        required: false
        schema:
          default: 10
          maximum: 50
          type: integer
        style: form
      - description: Set as true to get collect points for products like GLS Click&Collect
        explode: true
        in: query
        name: collect_points
        required: false
        schema:
          default: false
          format: bool
          type: boolean
        style: form
      - description: "Used to, e.g., determine whether to return postfiliale (default)\
          \ or packstations for DHL Parcel."
        explode: true
        in: query
        name: product_code
        required: false
        schema:
          type: string
        style: form
      - description: Filter on whether or not the pickup point supports drop-off of
          parcels.
        explode: true
        in: query
        name: in_delivery
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter on whether or not the pickup point supports pickup of
          parcels.
        explode: true
        in: query
        name: out_delivery
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServicePoint'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List pickup points
      tags:
      - Service points
  /shipment_templates:
    get:
      description: Returns a list of shipment templates.
      operationId: shipment_templates_get
      parameters:
      - description: ID for the shipment template to be included in the filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: Country code (ISO Alpha-2) to be included in the filter.
        explode: true
        in: query
        name: sender_country
        required: false
        schema:
          example: DK
          type: string
        style: form
      - description: Country code (ISO Alpha-2) to be included in the filter.
        explode: true
        in: query
        name: receiver_country
        required: false
        schema:
          example: DK
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShipmentTemplate'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all shipment templates
      tags:
      - Shipment templates
  /shipment_templates/{id}:
    get:
      description: Returns the details of a shipment template.
      operationId: shipment_template_get
      parameters:
      - description: ID for the shipment template to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentTemplate'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a shipment template
      tags:
      - Shipment templates
  /shipments:
    get:
      description: Returns a list of shipments.
      operationId: shipments_get
      parameters:
      - description: ID for the shipment to be included in the filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: Order ID for the shipments to be included in the filter
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          type: string
        style: form
      - description: Shipment or package number for the shipments to be included in
          the filter
        explode: true
        in: query
        name: package_number
        required: false
        schema:
          type: string
        style: form
      - description: Carrier code to be included in the filter.
        explode: true
        in: query
        name: carrier_code
        required: false
        schema:
          enum:
          - airmee
          - alpi
          - best
          - bft
          - bhs_logistics
          - bws
          - bpost
          - bring
          - brink
          - budbee
          - burd
          - cm_transport
          - collicare
          - dachser
          - dansk_distribution
          - dfm
          - dao
          - db_schenker
          - ub_db_schenker_se
          - deutsche_post
          - dhl_express
          - dhl_freight_se
          - dhl_parcel
          - doorhub
          - dpd
          - dsv
          - dsv_xpress
          - early_bird
          - endepunkt
          - esbjerg_gods
          - fed_ex
          - freja
          - frms
          - geodis
          - gls
          - gls_e
          - gls_de
          - gls_pl
          - helthjem
          - hurrah_today
          - instabox
          - interfjord
          - jjd
          - kht
          - leman
          - b2c_europe
          - mover
          - per_dg
          - posten_norge
          - posti
          - post_nl
          - pdk
          - post_nord
          - rb9
          - sand_distribution
          - sdl
          - srt
          - test_gc
          - tnt
          - ups
          - xpressen
          - unspecified
          type: string
        style: form
      - description: Country code (ISO Alpha-2) to be included in the filter.
        explode: true
        in: query
        name: sender_country
        required: false
        schema:
          example: DK
          type: string
        style: form
      - description: Country code (ISO Alpha-2) to be included in the filter.
        explode: true
        in: query
        name: receiver_country
        required: false
        schema:
          example: DK
          type: string
        style: form
      - description: "Reference of the bulk waybill that the shipment is included\
          \ in, to be included in the filter."
        explode: true
        in: query
        name: waybill_reference
        required: false
        schema:
          example: CS000000000NO
          type: string
        style: form
      - description: |
          "From" timestamp for the shipments to be included in the filter. Examples:
          * 2017-06-19T11:00:03.305+02:00
          * 2017-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the shipments to be included in the filter. Examples:
          * 2017-06-29T11:00:03.305+02:00
          * 2017-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Shipment'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all shipments
      tags:
      - Shipments
    post:
      description: Creates a new shipment with the provided information.
      operationId: shipments_post
      requestBody:
        content:
          application/json:
            examples:
              simple:
                summary: Simple
                value:
                  test_mode: true
                  own_agreement: false
                  label_format: a4_pdf
                  product_code: GLSDK_SD
                  service_codes: "EMAIL_NT,SMS_NT"
                  reference: Order 10001
                  automatic_select_service_point: true
                  sender:
                    name: Min Virksomhed ApS
                    attention: Lene Hansen
                    address1: Hvilehøjvej 25
                    address2: null
                    zipcode: "5220"
                    city: Odense SØ
                    country_code: DK
                    email: info@minvirksomhed.dk
                    mobile: "70400407"
                  receiver:
                    name: Lene Hansen
                    attention: null
                    address1: Skibhusvej 52
                    address2: null
                    zipcode: "5000"
                    city: Odense C
                    country_code: DK
                    email: lene@email.dk
                    mobile: "12345678"
                  parcels:
                  - weight: 1000
            schema:
              $ref: '#/components/schemas/CreateShipmentRequest'
        description: "\n         Shipment Object.\n\n\n         For some carriers,\
          \ a simple model can be used, while for others a more advanced model needs\
          \ to be used.\n\n\n         This request sample is based on the simple model.\n\
          \n\n         Read more: [Anatomy of a shipment](/#anatomy-of-a-shipment)\n\
          \         "
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a shipment
      tags:
      - Shipments
      x-codegen-request-body-name: body
  /shipments/{id}:
    get:
      description: Returns the details of a shipment.
      operationId: shipment_get
      parameters:
      - description: ID for the shipment to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a shipment
      tags:
      - Shipments
  /shipments/{id}/cancel_at_carrier:
    put:
      description: "Cancels a shipment created with **your own agreement** at carrier\
        \ if possible.\n\n\n      **Note:** This doesn't refunds the shipment in Shipmondo.\n\
        \      "
      operationId: shipment_cancel_at_carrier
      parameters:
      - description: ID for the shipment to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentCancelled'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Cancel a shipment
      tags:
      - Shipments
  /shipments/{id}/proforma_invoices:
    get:
      description: |2-

              Returns a proforma invoice for a shipment.


              Proforma invoice is generated based on the customs data received and delivered as Base64-encoded data.
      operationId: proforma_invoices_get
      parameters:
      - description: ID for the shipment to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProformaInvoice'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a proforma invoice
      tags:
      - Shipments
  /shipments/{id}/waybills:
    get:
      description: |2-

              Returns waybill for a shipment.


              Waybills are carrier specific and compared to collected waybills these only cover one shipment.


              **Danske Fragtmænd** supports this when **INCL_WAYBILL** service is booked.

              **Jørgen Jensen Distribution**, **K. Hansen Transport** and **Per Damgård** supports this to get ADR documentation when **ADR** service is booked.
      operationId: shipment_waybill_get
      parameters:
      - description: ID for the shipment to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Document'
                type: array
          description: Successful.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve waybill for a shipment
      tags:
      - Shipments
  /shipments/quote:
    post:
      description: |-
        Creates a shipment quote from a given shipment request.

        For shipments through Shipmondo's agreement, it determines the **estimated** price for a shipment on Shipmondo's agreement.

        For own agreement shipments, it determines the price paid to Shipmondo and an **estimated** price for a shipment from the carrier (if supported by the carrier).
      operationId: shipments_quote_post
      requestBody:
        content:
          application/json:
            examples:
              simple:
                summary: Simple
                value:
                  own_agreement: false
                  label_format: a4_pdf
                  product_code: GLSDK_SD
                  service_codes: "EMAIL_NT,SMS_NT"
                  reference: Order 10001
                  automatic_select_service_point: true
                  sender:
                    name: Min Virksomhed ApS
                    attention: Lene Hansen
                    address1: Hvilehøjvej 25
                    address2: null
                    zipcode: "5220"
                    city: Odense SØ
                    country_code: DK
                    email: info@minvirksomhed.dk
                    mobile: "70400407"
                  receiver:
                    name: Lene Hansen
                    attention: null
                    address1: Skibhusvej 52
                    address2: null
                    zipcode: "5000"
                    city: Odense C
                    country_code: DK
                    email: lene@email.dk
                    mobile: "12345678"
                  parcels:
                  - weight: 1000
            schema:
              $ref: '#/components/schemas/CreateShipmentRequest'
        description: Quote Object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShipmentQuoteResponse'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a shipment quote
      tags:
      - Shipments
      x-codegen-request-body-name: body
  /shipments/{id}/qr_code:
    get:
      description: Fetches a QR code for a given shipment request. It is only possible
        to fetch QR codes for shipments booked with the QR code service.
      operationId: shipments_qr_code_get
      parameters:
      - description: ID for the shipment to fetch QR codes for
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: The file format the QR Code will be returned as. Currently supported
          values are png and pdf. Default is PDF
        explode: true
        in: query
        name: file_format
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/QrCode'
            application/json:
              schema:
                $ref: '#/components/schemas/QrCode2'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Fetch qr codes for a shipment
      tags:
      - Shipments
      x-codegen-request-body-name: body
  /staff_accounts:
    get:
      description: Returns a list of staff accounts related to the current user.
      operationId: staff_accounts_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/staff_account'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all staff accounts
      tags:
      - Staff accounts
  /staff_accounts/{id}:
    get:
      description: "Returns a staff account related to the current user, based on\
        \ the given id."
      operationId: staff_account_get
      parameters:
      - description: ID for the staff_account to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/staff_account'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a single staff account
      tags:
      - Staff accounts
  /waybills:
    get:
      description: Returns a list of waybills (excluding Base64 PDF).
      operationId: waybills_get
      parameters:
      - description: ID for the waybill to be included in the filter
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          Reference for the waybill that need to be considered for
          filter
        explode: true
        in: query
        name: reference
        required: false
        schema:
          type: string
        style: form
      - description: |
          Carrier code to be included in the filter

          Examples: bring
        explode: true
        in: query
        name: carrier_code
        required: false
        schema:
          enum:
          - bring
          - pdk
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WaybillNoBase64'
                type: array
          description: Successful.
          headers:
            X-Current-Page:
              description: Pagination - Current Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Per-Page:
              description: Pagination - Per Page.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Count:
              description: Pagination - Total Count.
              explode: false
              schema:
                type: integer
              style: simple
            X-Total-Pages:
              description: Pagination - Total Pages Count.
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
      security:
      - basicAuth: []
      summary: List all waybills
      tags:
      - Waybills
    post:
      description: Creates a new waybill and associated routing label shipments.
      operationId: waybills_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWaybillRequest'
        description: |-
          Waybill Object.

          **Note**: loading (except date if carrier is Bring) and delivery are optional.

          If not all fields are given, loading will be overwritten by sender (except date) and delivery will be overwritten by receiver.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waybill'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/carriers_get_422_response'
          description: Invalid or not found parameter(s)
      security:
      - basicAuth: []
      summary: Create a waybill
      tags:
      - Waybills
      x-codegen-request-body-name: body
  /waybills/{id}:
    get:
      description: Returns the details of a waybill. The response includes the Base64
        for the waybill PDF.
      operationId: waybills_show
      parameters:
      - description: ID for the waybill to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waybill'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a waybill
      tags:
      - Waybills
  /waybills/{id}/close:
    put:
      description: Closes an open waybill and returns its details. The response include
        the Base64 for the waybill PDF.
      operationId: waybills_close
      parameters:
      - description: ID for the waybill to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseWaybillRequest'
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waybill'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Close an open waybill
      tags:
      - Waybills
  /webhooks:
    get:
      description: "Returns a list of webhooks.\n\n      \nWebhooks create an event\
        \ when an action that is subscribed to is performed in Shipmondo. The event\
        \ is then sent to the specified endpoint containing the current data of the\
        \ affected object."
      operationId: webhooks_get
      parameters:
      - description: |
          ID of the webhook object
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Name of the webhook
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: |
          The current active status of the webhook
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          "From" timestamp for the webhooks to be included in the filter. Examples:
          * 2017-06-19T11:00:03.305+02:00
          * 2017-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" timestamp for the webhooks to be included in the filter. Examples:
          * 2017-06-29T11:00:03.305+02:00
          * 2017-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: created_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "From" value of "updated" timestamp for the webhooks to be included in the filter. Examples:
          * 2018-06-19T11:00:03.305+02:00
          * 2018-06-19 will be transformed into 2017-06-19T00:00:00.000+02:00
        explode: true
        in: query
        name: updated_at_min
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          "To" value of "updated" timestamp for the webhooks to be included in the filter. Examples:
          * 2018-06-29T11:00:03.305+02:00
          * 2018-06-29 will be transformed into 2017-06-29T00:00:00.000+02:00
        explode: true
        in: query
        name: updated_at_max
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: For pagination. Defines how many entries are returned per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 1
          type: integer
        style: form
      - description: For pagination. Defines which page the results are fetched from.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Webhook'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: List all webhooks
      tags:
      - Webhooks
    post:
      description: "\n      Creates a new webhook with the specified information and\
        \ activates it.\n\n\n\n      \nWebhooks create an event when an action that\
        \ is subscribed to is performed in Shipmondo. The event is then sent to the\
        \ specified endpoint containing the current data of the affected object.\n\
        \n\n      Endpoint must be set up to receive messages before creating the\
        \ webhook.\n\n\n      Accepted values for action depends on the resource_name\
        \ used.\n\n\n      Available actions for [**Shipments**](shipment_get) resource:\n\
        \n      - create\n\n      - cancel\n\n\n      Available actions for [**Orders**](sales_order_get)\
        \ resource:\n\n      - create\n\n      - status_update\n\n      - create_fulfillment\n\
        \n      - create_shipment\n\n      - payment_captured\n\n      - payment_voided\n\
        \n      - delete\n\n\n      Available actions for [**Drafts**](draft_shipment_get)\
        \ (Draft shipments) resource:\n\n      - create\n\n      - create_shipment\n\
        \n      - delete\n\n\n      Available actions for **Shipment Monitor** resource:\n\
        \n      - latest\n\n      - delivered\n      "
      operationId: webhook_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
        description: Webhook Object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Webhook'
                type: array
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Create a webhook
      tags:
      - Webhooks
      x-codegen-request-body-name: body
  /webhooks/{id}:
    delete:
      operationId: webhook_delete
      parameters:
      - description: ID of the webhook that is to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Delete a webhook
      tags:
      - Webhooks
    get:
      description: "Returns the details of a webhook.\n\n      \nWebhooks create an\
        \ event when an action that is subscribed to is performed in Shipmondo. The\
        \ event is then sent to the specified endpoint containing the current data\
        \ of the affected object."
      operationId: webhook_get
      parameters:
      - description: ID for the webhook to be included in the filter
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Retrieve a webhook
      tags:
      - Webhooks
    put:
      description: "\n      Updates an existing webhook with the provided information.\n\
        \n\n      Currently only supports updating **name** and **active** status.\n\
        \n      \nWebhooks create an event when an action that is subscribed to is\
        \ performed in Shipmondo. The event is then sent to the specified endpoint\
        \ containing the current data of the affected object."
      operationId: webhook_update
      parameters:
      - description: ID of the webhook that is to be updated
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Successful.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_401_response'
          description: Unauthorized.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
          description: Resource not found.
      security:
      - basicAuth: []
      summary: Update a webhook
      tags:
      - Webhooks
components:
  responses:
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/account_401_response'
      description: Unauthorized.
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bookkeeping_integrations_get_404_response'
      description: Resource not found.
    InvalidRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/carriers_get_422_response'
      description: Invalid or not found parameter(s)
  schemas:
    Carrier:
      example:
        code: gls
        name: GLS Denmark
        id: 7
      properties:
        id:
          description: ID of the carrier.
          example: 7
          type: integer
        code:
          description: Carrier code used elsewhere to refer to the specific carrier.
          example: gls
          type: string
        name:
          description: Name of the carrier.
          example: GLS Denmark
          type: string
      type: object
    Carriers:
      items:
        $ref: '#/components/schemas/Carrier'
      type: array
    Country:
      example:
        code: DK
        name: Denmark
        customs_declaration_required: false
      properties:
        code:
          description: ISO3166-1 alpha-2 country code.
          example: DK
          type: string
        name:
          description: Name of the country in English
          example: Denmark
          type: string
        customs_declaration_required:
          default: false
          description: Does the product require customs information to book?
          type: boolean
      type: object
    ShippingProductService:
      example:
        required_fields: receiver_email
        code: EMAIL_NT
        name: Email notification
        optional_fields: delivery_instruction
        id: 21
      properties:
        code:
          description: Service code to be included in the booking of shipments.
          example: EMAIL_NT
          type: string
        id:
          description: ID of the service. Used for booking in older versions of the
            API.
          example: 21
          type: integer
        name:
          description: Name of the service.
          example: Email notification
          type: string
        required_fields:
          description: Comma-separated string indicating fields that are required
            to book a shipment with the service.
          example: receiver_email
          type: string
        optional_fields:
          description: Comma-separated string indicating fields that are optional
            to book a shipment with the service.
          example: delivery_instruction
          type: string
      type: object
    ShippingProductServices:
      items:
        $ref: '#/components/schemas/ShippingProductService'
      type: array
    RequiredShippingProductService:
      example:
        required_fields: receiver_email
        note: Email notification is required
        code: EMAIL_NT
        name: Email notification
        optional_fields: delivery_instruction
        id: 21
      properties:
        code:
          description: Service code to be included in the booking of shipments.
          example: EMAIL_NT
          type: string
        id:
          description: ID of the service. Used for booking in older versions of the
            API.
          example: 21
          type: integer
        name:
          description: Name of the service.
          example: Email notification
          type: string
        required_fields:
          description: Comma-separated string indicating fields that are required
            to book a shipment with the service.
          example: receiver_email
          type: string
        optional_fields:
          description: Comma-separated string indicating fields that are optional
            to book a shipment with the service.
          example: delivery_instruction
          type: string
        note:
          description: Information about the service.
          example: Email notification is required
          type: string
      type: object
    RequiredShippingProductServices:
      items:
        $ref: '#/components/schemas/RequiredShippingProductService'
      type: array
    WeightInterval:
      example:
        description: 0-1kg
        to_weight: 1000
        from_weight: 0
      properties:
        from_weight:
          description: Weight in grams at which the interval starts
          example: 0
          type: integer
        to_weight:
          description: Weight in grams at which the interval ends.
          example: 1000
          type: integer
        description:
          description: Text used to display the weight interval.
          example: 0-1kg
          type: string
      type: object
    WeightIntervals:
      description: Weight intervals available for use on shipment with this product
        using Shipmondo's agreement.
      items:
        $ref: '#/components/schemas/WeightInterval'
      type: array
    TaWeightIntervals:
      description: Weight intervals available for use on shipments with this product
        using your own carrier agreement.
      items:
        $ref: '#/components/schemas/WeightInterval'
      type: array
    ShippingProduct:
      example:
        service_point_available: true
        destination_country:
          code: DK
          name: Denmark
          customs_declaration_required: false
        code: GLSDK_SD
        service_point_required: true
        optional_parcel_fields: "height,length,width"
        ta_weight_intervals:
        - description: 0-1kg
          to_weight: 1000
          from_weight: 0
        - description: 0-1kg
          to_weight: 1000
          from_weight: 0
        available: true
        available_services:
        - required_fields: receiver_email
          code: EMAIL_NT
          name: Email notification
          optional_fields: delivery_instruction
          id: 21
        - required_fields: receiver_email
          code: EMAIL_NT
          name: Email notification
          optional_fields: delivery_instruction
          id: 21
        receiver_country_code: DK
        sender_country_code: DK
        required_fields: "receiver_mobile,service_point_id"
        allowed_incoterms:
        - allowed_incoterms
        - allowed_incoterms
        carrier:
          code: gls
          name: GLS Denmark
          id: 7
        own_agreement_available: true
        customer_numbers:
        - customer_number: 898B91
        - customer_number: 898B91
        expected_transit_time: 1-2 days
        name: Shop Delivery
        customs_declaration_required: true
        required_services:
        - required_fields: receiver_email
          note: Email notification is required
          code: EMAIL_NT
          name: Email notification
          optional_fields: delivery_instruction
          id: 21
        - required_fields: receiver_email
          note: Email notification is required
          code: EMAIL_NT
          name: Email notification
          optional_fields: delivery_instruction
          id: 21
        optional_fields: "delivery_instruction,pickup_date"
        id: 19
        required_parcel_fields: "quantity,weight"
        weight_intervals:
        - description: 0-1kg
          to_weight: 1000
          from_weight: 0
        - description: 0-1kg
          to_weight: 1000
          from_weight: 0
      properties:
        code:
          description: Product code used when referring to the specific product.
          example: GLSDK_SD
          type: string
        id:
          description: ID of the product. Only used in older version of the Shipmondo
            API.
          example: 19
          type: integer
        name:
          description: Name of the product.
          example: Shop Delivery
          type: string
        available:
          deprecated: true
          description: Is the product available to book on either own agreements or
            Shipmondo's agreement?
          type: boolean
        own_agreement_available:
          description: Is the product available to book on own agreements?
          type: boolean
        customer_numbers:
          description: Customer numbers associated with own available agreements.
            If none available then an empty array is returned
          items:
            $ref: '#/components/schemas/ShippingProduct_customer_numbers_inner'
          type: array
        customs_declaration_required:
          description: Does the product require customs information to book?
          type: boolean
        service_point_available:
          description: Can the product be booked with a service point?
          type: boolean
        service_point_required:
          description: Is service point required to book this product?
          type: boolean
        expected_transit_time:
          description: The expected transit time of the product.
          example: 1-2 days
          type: string
        sender_country_code:
          description: ISO 3166-1 alpha-2 country code that the product is sent from.
          example: DK
          type: string
        receiver_country_code:
          description: ISO 3166-1 alpha-2 country code that the product is sent to.
          example: DK
          type: string
        required_fields:
          description: Comma-separated string indicating fields that are required
            to book a shipment with the product.
          example: "receiver_mobile,service_point_id"
          type: string
        optional_fields:
          description: Comma-separated string indicating fields that are optional
            to book a shipment with the product.
          example: "delivery_instruction,pickup_date"
          type: string
        required_parcel_fields:
          description: Comma-separated string indicating fields that are required
            (for the objects in the "parcels" array) when booking a shipment with
            the product.
          example: "quantity,weight"
          type: string
        optional_parcel_fields:
          description: Comma-separated string indicating fields that are optional
            (for the objects in the "parcels" array) when booking a shipment with
            the product.
          example: "height,length,width"
          type: string
        carrier:
          $ref: '#/components/schemas/Carrier'
        destination_country:
          $ref: '#/components/schemas/Country'
        available_services:
          items:
            $ref: '#/components/schemas/ShippingProductService'
          type: array
        required_services:
          items:
            $ref: '#/components/schemas/RequiredShippingProductService'
          type: array
        weight_intervals:
          description: Weight intervals available for use on shipment with this product
            using Shipmondo's agreement.
          items:
            $ref: '#/components/schemas/WeightInterval'
          type: array
        ta_weight_intervals:
          description: Weight intervals available for use on shipments with this product
            using your own carrier agreement.
          items:
            $ref: '#/components/schemas/WeightInterval'
          type: array
        allowed_incoterms:
          description: Array of allowed Incoterms for the specific product. If empty
            all Incoterms are allowed.
          items:
            type: string
          type: array
      type: object
    ShippingProducts:
      items:
        $ref: '#/components/schemas/ShippingProduct'
      type: array
    PackageType:
      example:
        code: EP
        description: EUR Pallet
        id: 19
      properties:
        id:
          description: ID of the package type. This is not relevant when referring
            to package types.
          example: 19
          type: integer
        code:
          description: Code to be used when referring to package types in booking
            shipments.
          example: EP
          type: string
        description:
          description: Display name of the package type.
          example: EUR Pallet
          type: string
      type: object
    PackageTypes:
      items:
        $ref: '#/components/schemas/PackageType'
      type: array
    DraftShipment:
      example:
        label_created: false
        receiver:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          instruction: Place on the front porch.
          name: Lene Hansen
          mobile: "12345678"
          attention: attention
          telephone: "12345678"
          email: lene@email.dk
        created_at: 2017-06-16T06:25:44.557Z
        source: API
        product_code: GLSDK_SD
        shipment_id: 123456
        reference: Webshop 5678
        archived: false
        updated_at: 2017-06-16T06:25:44.557Z
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
          mobile: "70400407"
          attention: Lene Hansen
          telephone: "70400407"
          email: info@minvirksomhed.dk
        id: 11460
        order_id: "1000002345"
        email_notification: false
        service_codes: "EMAIL_NT,SMS_NT"
        sms_notification: false
        carrier_code: gls
        service_point:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Paaskeløkkevej 11
          name: Påskeløkkens Købmand
          id: "95558"
      properties:
        id:
          description: Unique identifier of the object.
          example: 11460
          type: integer
        sms_notification:
          default: false
          description: True if SMS notification should be used when creating shipment.
          type: boolean
        email_notification:
          default: false
          description: True if email notification should be used when creating shipment.
          type: boolean
        order_id:
          description: The external order ID for draft shipment. It will appear as
            a reference on the shipment created from the draft if no reference is
            set.
          example: "1000002345"
          type: string
        reference:
          description: The external reference for which the object has been created.
            It will appear as a reference on the shipment created from the draft.
          example: Webshop 5678
          type: string
        source:
          description: The source of the draft shipment.
          example: API
          type: string
        carrier_code:
          description: The code of the carrier that should be used when creating a
            shipment from the draft.
          example: gls
          type: string
        product_code:
          description: The code of the carrier product that should be used when creating
            a shipment from the draft.
          example: GLSDK_SD
          type: string
        service_codes:
          description: The codes of the carrier product services that should be used
            when creating a shipment from the draft.
          example: "EMAIL_NT,SMS_NT"
          type: string
        archived:
          default: false
          description: True if archived automatically or by the user.
          type: boolean
        label_created:
          default: false
          description: True if a shipment is created for the draft shipment.
          type: boolean
        shipment_id:
          description: Unique identifier of the created shipment.
          example: 123456
          type: integer
        created_at:
          description: ISO 8601 datetime the object was created.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        updated_at:
          description: Datetime when the object was updated.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        sender:
          $ref: '#/components/schemas/Sender'
        receiver:
          $ref: '#/components/schemas/Receiver'
        service_point:
          $ref: '#/components/schemas/ServicePointSimple'
      type: object
    CreateDraftShipmentRequest:
      example:
        receiver:
          date: 2021-10-14T00:00:00.000+00:00
          member_id: "1234567890"
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          access_code: "1234"
          mobile: "12345678"
          telephone: "12345678"
          from_time: 08:00
          zipcode: "5000"
          country_code: DK
          instruction: Place on the front porch.
          name: Lene Hansen
          attention: attention
          vat_id: GB018384932372
          to_time: 16:00
          email: lene@email.dk
        source: API
        shipment_template_id: 710
        product_code: GLSDK_SD
        reference: Webshop 5678
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
          mobile: "70400407"
          attention: Lene Hansen
          vat_id: GB018384932372
          telephone: "70400407"
          email: info@minvirksomhed.dk
        return_shipment_template_id: 710
        order_id: "1000002345"
        email_notification: false
        service_codes: "EMAIL_NT,SMS_NT"
        sms_notification: false
        carrier_code: gls
        service_point:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Paaskeløkkevej 11
          name: Påskeløkkens Købmand
          id: "95558"
      properties:
        sms_notification:
          default: false
          description: True if SMS notification should be used when creating shipment.
          type: boolean
        email_notification:
          default: false
          description: True if email notification should be used when creating shipment.
          type: boolean
        order_id:
          description: The external order id for draft shipment. It will appear as
            a reference on the shipment created from the draft if no reference is
            set.
          example: "1000002345"
          type: string
        reference:
          description: The external reference for which the object has been created.
            It will appear as a reference on the shipment created from the draft.
          example: Webshop 5678
          type: string
        source:
          description: The source of the draft shipment.
          example: API
          type: string
        carrier_code:
          description: The code of the carrier that should be used when creating a
            shipment from the draft.
          example: gls
          type: string
        product_code:
          description: The code of the carrier product that should be used when creating
            a shipment from the draft.
          example: GLSDK_SD
          type: string
        service_codes:
          description: The codes of the carrier product services that should be used
            when creating a shipment from the draft.
          example: "EMAIL_NT,SMS_NT"
          type: string
        shipment_template_id:
          description: "ID of the shipment template that should be used when creating\
            \ a shipment. It contains information such as carrier product, services,\
            \ parcels, weight, and more."
          example: 710
          type: integer
        return_shipment_template_id:
          description: ID of the provided return shipment template. Specifies the
            return product and services for the sales order.
          example: 710
          type: integer
        sender:
          $ref: '#/components/schemas/SenderRequest'
        receiver:
          $ref: '#/components/schemas/ReceiverRequest'
        service_point:
          $ref: '#/components/schemas/ServicePointSimple'
      required:
      - receiver
      - sender
      type: object
    Sender:
      description: Sender address for the object
      example:
        zipcode: "5240"
        country_code: DK
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        name: Min Virksomhed ApS
        mobile: "70400407"
        attention: Lene Hansen
        telephone: "70400407"
        email: info@minvirksomhed.dk
      properties:
        name:
          description: Name of the sender. Can be either a company name or the name
            of a private person.
          example: Min Virksomhed ApS
          type: string
        attention:
          description: "Attention of the sender. If the sender is a company, it is\
            \ the contact person."
          example: Lene Hansen
          type: string
        address1:
          description: "Address of the sender, including address number."
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5240"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense NØ
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the sender.
          example: DK
          type: string
        email:
          description: Email address of the sender
          example: info@minvirksomhed.dk
          type: string
        mobile:
          description: Mobile number of the sender
          example: "70400407"
          type: string
        telephone:
          description: Landline phone number of the sender
          example: "70400407"
          type: string
      type: object
    SenderRequest:
      description: Sender address for the object
      example:
        zipcode: "5240"
        country_code: DK
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        name: Min Virksomhed ApS
        mobile: "70400407"
        attention: Lene Hansen
        vat_id: GB018384932372
        telephone: "70400407"
        email: info@minvirksomhed.dk
      properties:
        name:
          description: Name of the sender. Can be either a company name or the name
            of a private person.
          example: Min Virksomhed ApS
          type: string
        attention:
          description: "Attention of the sender. If the sender is a company, it is\
            \ the contact person."
          example: Lene Hansen
          type: string
        address1:
          description: "Address of the sender, including address number."
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5240"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense NØ
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the sender.
          example: DK
          type: string
        vat_id:
          description: "Special VAT idenfication number; for example, GB EORI for\
            \ Great Britain or VOEC for Norway."
          example: GB018384932372
          type: string
        email:
          description: Email address of the sender
          example: info@minvirksomhed.dk
          type: string
        mobile:
          description: Mobile number of the sender
          example: "70400407"
          type: string
        telephone:
          description: Landline phone number of the sender
          example: "70400407"
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    Receiver:
      description: Receiver address for the object
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        instruction: Place on the front porch.
        name: Lene Hansen
        mobile: "12345678"
        attention: attention
        telephone: "12345678"
        email: lene@email.dk
      properties:
        name:
          description: Name of the receiver. Can be either a company name or the name
            of a private person.
          example: Lene Hansen
          type: string
        attention:
          description: "Attention of the receiver. If the receiver is a company, it\
            \ is the contact person."
          type: string
          example: null
        address1:
          description: "Address of the receiver, including address number."
          example: Skibhusvej 52
          type: string
        address2:
          description: "Second address line of the receiver. Can be used for, e.g.,apartment\
            \ number."
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5000"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the receiver address.
          example: DK
          type: string
        email:
          description: Email address of the receiver
          example: lene@email.dk
          type: string
        mobile:
          description: Mobile number of the receiver
          example: "12345678"
          type: string
        telephone:
          description: Landline phone number of the receiver
          example: "12345678"
          type: string
        instruction:
          description: Delivery instruction to the carrier. Only applicable for products
            which support receiver instructions.
          example: Place on the front porch.
          type: string
      type: object
    ReceiverRequest:
      description: Receiver address for the object
      example:
        date: 2021-10-14T00:00:00.000+00:00
        member_id: "1234567890"
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        access_code: "1234"
        mobile: "12345678"
        telephone: "12345678"
        from_time: 08:00
        zipcode: "5000"
        country_code: DK
        instruction: Place on the front porch.
        name: Lene Hansen
        attention: attention
        vat_id: GB018384932372
        to_time: 16:00
        email: lene@email.dk
      properties:
        name:
          description: Name of the receiver. Can be either a company name or the name
            of a private person.
          example: Lene Hansen
          type: string
        attention:
          description: "Attention of the receiver. If the receiver is a company, it\
            \ is the contact person."
          type: string
          example: null
        address1:
          description: "Address of the receiver, including address number."
          example: Skibhusvej 52
          type: string
        address2:
          description: "Second address line of the receiver. Can be used for, e.g.,apartment\
            \ number."
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5000"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the receiver address.
          example: DK
          type: string
        vat_id:
          description: "Special VAT idenfication number; for example, GB EORI for\
            \ Great Britain."
          example: GB018384932372
          type: string
        email:
          description: Email address of the receiver
          example: lene@email.dk
          type: string
        mobile:
          description: Mobile number of the receiver
          example: "12345678"
          type: string
        telephone:
          description: Landline phone number of the receiver
          example: "12345678"
          type: string
        instruction:
          description: Delivery instruction to the carrier. Only applicable for products
            which support receiver instructions.
          example: Place on the front porch.
          type: string
        date:
          description: Requested delivery date.
          example: 2021-10-14
          format: date
          nullable: true
          type: string
        from_time:
          description: Requested earliest delivery time.
          example: 08:00
          format: time
          type: string
        to_time:
          description: Requested latest delivery time.
          example: 16:00
          format: time
          type: string
        member_id:
          description: "Carrier member ID. Some products support/require this; e.g.,\
            \ DHL Parcel shipments to Packstations (DHL PostNumber)."
          example: "1234567890"
          type: string
        access_code:
          description: Gate/door code for the carrier to access the receiver's address.
          example: "1234"
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    ShipmentSender:
      description: Sender address for the object
      example:
        zipcode: "5240"
        country_code: DK
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        name: Min Virksomhed ApS
        mobile: "70400407"
        attention: Lene Hansen
        vat_id: "5323471"
        telephone: "70400407"
        email: info@minvirksomhed.dk
      properties:
        name:
          description: Name of the sender. Can be either a company name or the name
            of a private person.
          example: Min Virksomhed ApS
          type: string
        attention:
          description: "Attention of the sender. If the sender is a company, it is\
            \ the contact person."
          example: Lene Hansen
          type: string
        address1:
          description: "Address of the sender, including address number."
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5240"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense NØ
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the sender address.
          example: DK
          type: string
        vat_id:
          description: "Sender's VAT ID in receiver country, e.g., VOEC for Norway\
            \ or GB EORI for Great Britain."
          example: "5323471"
          type: string
        email:
          description: Email address of the sender
          example: info@minvirksomhed.dk
          type: string
        mobile:
          description: Mobile number of the sender
          example: "70400407"
          type: string
        telephone:
          description: Landline phone number of the sender
          example: "70400407"
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    ShipmentReceiver:
      description: Receiver address for the object
      example:
        date: 2021-10-14T00:00:00.000+00:00
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        mobile: "12345678"
        telephone: "12345678"
        from_time: 08:00
        zipcode: "5000"
        country_code: DK
        instruction: Place on the front porch.
        name: Lene Hansen
        attention: attention
        to_time: 16:00
        email: lene@email.dk
      properties:
        name:
          description: Name of the receiver. Can be either a company name or the name
            of a private person.
          example: Lene Hansen
          type: string
        attention:
          description: "Attention of the receiver. If the receiver is a company, it\
            \ is the contact person."
          type: string
          example: null
        address1:
          description: "Address of the receiver, including address number."
          example: Skibhusvej 52
          type: string
        address2:
          description: "Second address line of the receiver. Can be used for, e.g.,apartment\
            \ number."
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5000"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the receiver.
          example: DK
          type: string
        email:
          description: Email address of the receiver
          example: lene@email.dk
          type: string
        mobile:
          description: Mobile number of the receiver
          example: "12345678"
          type: string
        telephone:
          description: Landline phone number of the receiver
          example: "12345678"
          type: string
        instruction:
          description: Delivery instruction to the carrier. Only applicable for products
            which support receiver instructions.
          example: Place on the front porch.
          type: string
        date:
          description: Requested delivery date.
          example: 2021-10-14
          format: date
          nullable: true
          type: string
        from_time:
          description: Requested earliest delivery time.
          example: 08:00
          format: time
          type: string
        to_time:
          description: Requested latest delivery time.
          example: 16:00
          format: time
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    PickUp:
      example:
        date: 2021-10-13T00:00:00.000+00:00
        address2: address2
        city: Odense SØ
        address1: Hvilehøjvej 25
        telephone: "80808080"
        from_time: 08:00
        zipcode: "5220"
        country_code: DK
        instruction: Goods are placed at gate 21
        pickup_custom: true
        name: Min Virksomhed A/S
        attention: attention
        to_time: 16:00
      properties:
        name:
          example: Min Virksomhed A/S
          type: string
        attention:
          type: string
          example: null
        address1:
          example: Hvilehøjvej 25
          type: string
        address2:
          type: string
          example: null
        country_code:
          example: DK
          type: string
        zipcode:
          example: "5220"
          type: string
        city:
          example: Odense SØ
          type: string
        telephone:
          example: "80808080"
          type: string
        instruction:
          description: Pickup instruction to the carrier. Only applicable for products
            which supports pickup instructions.
          example: Goods are placed at gate 21
          type: string
        date:
          description: Requested pickup date.
          example: 2021-10-13
          format: date
          nullable: true
          type: string
        from_time:
          description: Requested earliest pickup time.
          example: 08:00
          format: time
          type: string
        to_time:
          description: Requested latest pickup time.
          example: 16:00
          format: time
          type: string
        pickup_custom:
          description: Whether the shipment includes a pickup address other than sender
            address.
          type: boolean
      type: object
    ShipmentPickUpRequest:
      example:
        zipcode: "5220"
        date: 2021-10-13T00:00:00.000+00:00
        country_code: DK
        address2: address2
        city: Odense SØ
        address1: Hvilehøjvej 25
        instruction: Goods are placed at gate 21
        name: Min Virksomhed A/S
        attention: attention
        telephone: "80808080"
        to_time: 16:00
        from_time: 08:00
      properties:
        name:
          example: Min Virksomhed A/S
          type: string
        attention:
          type: string
          example: null
        address1:
          example: Hvilehøjvej 25
          type: string
        address2:
          type: string
          example: null
        country_code:
          example: DK
          type: string
        zipcode:
          example: "5220"
          type: string
        city:
          example: Odense SØ
          type: string
        telephone:
          example: "80808080"
          type: string
        instruction:
          description: Pickup instruction to the carrier. Only applicable for products
            which supports pickup instructions.
          example: Goods are placed at gate 21
          type: string
        date:
          description: Requested pickup date.
          example: 2021-10-13
          format: date
          nullable: true
          type: string
        from_time:
          description: Requested earliest pickup time.
          example: 08:00
          format: time
          type: string
        to_time:
          description: Requested latest pickup time.
          example: 16:00
          format: time
          type: string
      type: object
    ShipmentBillTo:
      description: Customs billing information if it is other than sender/receiver.
      example:
        bill_to_custom: true
        address2: address2
        city: Odense SØ
        customer_number: "12345678"
        address1: Hvilehøjvej 25
        mobile: "80808080"
        telephone: "80808080"
        zipcode: "5220"
        country_code: DK
        name: Min Virksomhed A/S
        attention: attention
        vat_id: DK12345678
        email: jim@minvirksomhed.dk
      properties:
        name:
          example: Min Virksomhed A/S
          type: string
        attention:
          type: string
          example: null
        address1:
          example: Hvilehøjvej 25
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5220"
          type: string
        city:
          example: Odense SØ
          type: string
        country_code:
          example: DK
          type: string
        vat_id:
          description: VAT no. of the customs billing party.
          example: DK12345678
          type: string
        telephone:
          example: "80808080"
          type: string
        mobile:
          example: "80808080"
          type: string
        email:
          example: jim@minvirksomhed.dk
          type: string
        bill_to_custom:
          description: Whether the shipment includes a billing address for customs
            other sender address.
          type: boolean
        customer_number:
          description: Separate carrier customer number to bill if applicable with
            the given carrier.
          example: "12345678"
          type: string
      type: object
    ShipmentBillToRequest:
      description: Customs billing information if it is other than sender/receiver.
      example:
        zipcode: "5220"
        country_code: DK
        address2: address2
        city: Odense SØ
        customer_number: "12345678"
        address1: Hvilehøjvej 25
        name: Min Virksomhed A/S
        mobile: "80808080"
        attention: attention
        vat_id: DK12345678
        telephone: "80808080"
        email: jim@minvirksomhed.dk
      properties:
        name:
          example: Min Virksomhed A/S
          type: string
        attention:
          type: string
          example: null
        address1:
          example: Hvilehøjvej 25
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5220"
          type: string
        city:
          example: Odense SØ
          type: string
        vat_id:
          description: VAT no. of the customs billing party.
          example: DK12345678
          type: string
        country_code:
          example: DK
          type: string
        telephone:
          example: "80808080"
          type: string
        mobile:
          example: "80808080"
          type: string
        email:
          example: jim@minvirksomhed.dk
          type: string
        customer_number:
          description: Separate carrier customer number to bill if applicable with
            the given carrier.
          example: "12345678"
          type: string
      type: object
    ShipmentReturnToRequest:
      description: Return address if different from the sender address. This is only
        available for specific products.
      example:
        zipcode: "5220"
        country_code: DK
        address2: address2
        city: Odense SØ
        address1: Hvilehøjvej 25
        name: Min Virksomhed A/S
        attention: attention
        telephone: "80808080"
      properties:
        name:
          example: Min Virksomhed A/S
          type: string
        attention:
          type: string
          example: null
        address1:
          example: Hvilehøjvej 25
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5220"
          type: string
        city:
          example: Odense SØ
          type: string
        country_code:
          example: DK
          type: string
        telephone:
          example: "80808080"
          type: string
      type: object
    GoodsLine:
      properties:
        quantity:
          example: 2
          type: integer
        country:
          description: Country of origin
          example: CN
          type: string
        content:
          description: Description of the content
          example: Textile shirt
          type: string
        commodity_code:
          description: Classification numbers for goods. For more visit vita.skat.dk
          example: "8471000000"
          type: string
        unit_value:
          description: Unit value in declared currency
          example: 50.75
          type: number
        unit_weight:
          description: Unit weight in gram
          example: 100
          type: integer
      required:
      - commodity_code
      - content
      - country
      - quantity
      - unit_value
      - unit_weight
      type: object
    SimpleCustoms:
      properties:
        currency_code:
          description: Declared currency code
          example: DKK
          type: string
        goods:
          items:
            $ref: '#/components/schemas/GoodsLine'
          type: array
      type: object
    ServicePointInShipmentRequest:
      properties:
        id:
          description: Identification for the service point from the carrier
          example: "96271"
          type: string
      required:
      - id
      type: object
    ParcelSimple:
      properties:
        weight:
          description: Weight in grams.
          example: 1000
          type: integer
        quantity:
          default: 1
          description: Number of parcels of this kind. Maximum quantity depends on
            the product.
          example: 1
          minimum: 1
          type: integer
      required:
      - weight
      type: object
    ParcelAdvanced:
      example:
        volume: 0.012
        running_metre: 1.25
        declared_value:
          amount: 1250
          currency_code: DKK
        quantity: 1
        dangerous_goods:
        - quantity: 3
          description: "DIESEL FUEL, < 62°C (640K)"
          tunnel_restriction_code: A
          packaging: drums
          class: "3"
          net_weight: 20100
          net_weight_kg: 20.1
          packing_group: III
          un_number: "1202"
          environmentally_hazardous: true
        - quantity: 3
          description: "DIESEL FUEL, < 62°C (640K)"
          tunnel_restriction_code: A
          packaging: drums
          class: "3"
          net_weight: 20100
          net_weight_kg: 20.1
          packing_group: III
          un_number: "1202"
          environmentally_hazardous: true
        length: 20
        width: 10
        weight: 1000
        description: Bike accessories
        packaging: PL1
        height: 6
      properties:
        quantity:
          default: 1
          description: Number of parcels of this kind. Maximum quantity depends on
            the product.
          example: 1
          minimum: 1
          type: integer
        weight:
          description: Weight in grams.
          example: 1000
          minimum: 1
          type: integer
        length:
          description: Length in cm
          example: 20
          minimum: 1
          type: integer
        width:
          description: Width in cm
          example: 10
          minimum: 1
          type: integer
        height:
          description: Height in cm
          example: 6
          minimum: 1
          type: integer
        volume:
          description: Volume in cubic metres
          example: 0.012
          minimum: 0.001
          type: number
        running_metre:
          description: Running metre in metre
          example: 1.25
          minimum: 0.001
          type: number
        description:
          description: Describes the contents of the parcel.
          example: Bike accessories
          type: string
        packaging:
          description: Package type for the parcel. Must be a valid package type for
            the customer.
          example: PL1
          type: string
        dangerous_goods:
          items:
            $ref: '#/components/schemas/DangerousGood'
          type: array
        declared_value:
          $ref: '#/components/schemas/DeclaredValue'
      required:
      - weight
      type: object
    Parcel:
      example:
        quantity: 1
        pkg_no: "1064548752"
        length: 20
        weight: 1000
        packaging: PL1
        content: Bike accessories
        volume: 0.012
        running_metre: 1.25
        declared_value:
          amount: 1250
          currency_code: DKK
        dangerous_goods:
        - quantity: 3
          description: "DIESEL FUEL, < 62°C (640K)"
          tunnel_restriction_code: A
          packaging: drums
          class: "3"
          net_weight: 20100
          net_weight_kg: 20.1
          packing_group: III
          un_number: "1202"
          environmentally_hazardous: true
        - quantity: 3
          description: "DIESEL FUEL, < 62°C (640K)"
          tunnel_restriction_code: A
          packaging: drums
          class: "3"
          net_weight: 20100
          net_weight_kg: 20.1
          packing_group: III
          un_number: "1202"
          environmentally_hazardous: true
        pkg_nos:
        - "1064548752"
        width: 10
        height: 6
      properties:
        quantity:
          default: 1
          description: Number of parcels of this kind. Maximum quantity depends on
            the product.
          example: 1
          minimum: 1
          type: integer
        weight:
          description: Weight in grams.
          example: 1000
          minimum: 1
          type: integer
        pkg_no:
          description: Carrier's package number refers to the specific package/colli.
          example: "1064548752"
          type: string
        pkg_nos:
          description: Carrier's package numbers for all packages if quantity is larger
            than 1.
          example:
          - "1064548752"
          items:
            type: string
          type: array
        length:
          description: Length in cm
          example: 20
          minimum: 1
          type: integer
        width:
          description: Width in cm
          example: 10
          minimum: 1
          type: integer
        height:
          description: Height in cm
          example: 6
          minimum: 1
          type: integer
        volume:
          description: Volume in cubic metres
          example: 0.012
          minimum: 0.001
          type: number
        running_metre:
          description: Running metre in metre
          example: 1.25
          minimum: 0.001
          type: number
        content:
          description: Describes the contents of the parcel.
          example: Bike accessories
          type: string
        packaging:
          description: Package type for the parcel. Must be a valid package type for
            the customer.
          example: PL1
          type: string
        dangerous_goods:
          items:
            $ref: '#/components/schemas/DangerousGood'
          type: array
        declared_value:
          $ref: '#/components/schemas/DeclaredValue'
      type: object
    CreateShipmentRequest:
      example:
        bill_to:
          zipcode: "5220"
          country_code: DK
          address2: address2
          city: Odense SØ
          customer_number: "12345678"
          address1: Hvilehøjvej 25
          name: Min Virksomhed A/S
          mobile: "80808080"
          attention: attention
          vat_id: DK12345678
          telephone: "80808080"
          email: jim@minvirksomhed.dk
        own_agreement: false
        customer_number: customer_number
        product_code: GLSDK_SD
        reference: Order 10001
        send_label:
          label_format: a4_pdf
          name: Jim
          email: jim@minvirksomhed.dk
        test_mode: true
        customs:
          sender_custom_invoice_text: "Key code: ABC123"
          receiver_custom_invoice_text: "Key code: ABC123"
          term_of_trade: DAP
          goods:
          - country_code: DK
            commodity_code: "6109100010"
            quantity: 2
            unit_value: 122.5
            unit_weight: 110
            content: Cotton t-shirt
          - country_code: DK
            commodity_code: "6109100010"
            quantity: 2
            unit_value: 122.5
            unit_weight: 110
            content: Cotton t-shirt
          export_reason: other
          billed_to_custom_invoice_text: "Key code: ABC123"
          currency_code: DKK
        service_point:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Paaskeløkkevej 11
          name: Påskeløkkens Købmand
          id: "95558"
        pallet_exchange:
          pallets2: 0
          pallets1: 0
          pallets4: 0
        receiver:
          date: 2021-10-14T00:00:00.000+00:00
          member_id: "1234567890"
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          access_code: "1234"
          mobile: "12345678"
          telephone: "12345678"
          from_time: 08:00
          zipcode: "5000"
          country_code: DK
          instruction: Place on the front porch.
          name: Lene Hansen
          attention: attention
          vat_id: GB018384932372
          to_time: 16:00
          email: lene@email.dk
        carrier_insurance:
          amount: 1000
          currency_code: DKK
        term_of_trade: DAP
        label_format: a4_pdf
        return_to:
          zipcode: "5220"
          country_code: DK
          address2: address2
          city: Odense SØ
          address1: Hvilehøjvej 25
          name: Min Virksomhed A/S
          attention: attention
          telephone: "80808080"
        dfm:
          insurance_type: A
          insurance_amount: 1000
          dot_type: DO1
          dot_time: 15:00
        replace_http_status_code: false
        pick_up:
          zipcode: "5220"
          date: 2021-10-13T00:00:00.000+00:00
          country_code: DK
          address2: address2
          city: Odense SØ
          address1: Hvilehøjvej 25
          instruction: Goods are placed at gate 21
          name: Min Virksomhed A/S
          attention: attention
          telephone: "80808080"
          to_time: 16:00
          from_time: 08:00
        print: false
        automatic_select_service_point: false
        contents: Goods
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
          mobile: "70400407"
          attention: Lene Hansen
          vat_id: GB018384932372
          telephone: "70400407"
          email: info@minvirksomhed.dk
        origin_shipment_id: "1000001235"
        cod:
          account_number: "123456789"
          amount: 326
          currency_code: NOK
        service_codes: "EMAIL_NT,SMS_NT"
        print_at:
          label_format: 10x19_zpl
          printer_name: Zebra Zdesigner GK420D
          host_name: WAREHOUSE-PC
        parcels:
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
      properties:
        test_mode:
          description: "For testing purposes. Shipment and labels generated are dummy\
            \ and cannot be used. To create actual shipments, remove this element\
            \ or set it to false."
          type: boolean
        own_agreement:
          default: false
          description: Whether or not the shipment should be booked your own agreement
            or Shipmondo's agreement.
          type: boolean
        customer_number:
          description: Customer number for the agreement you wish to use. Mostly used
            if multiple agreements for the same carrier are set up on the account.
            Defaults to the agreement that was created first.
          type: string
        label_format:
          description: "If label_format is specified, the shipping labels will be\
            \ included in the response. Defaults to what is setup for the user."
          enum:
          - a4_pdf
          - 10x19_pdf
          - 10x19_png
          - 10x19_zpl
          type: string
          example: null
        product_code:
          description: Product code of the product of the shipment.
          example: GLSDK_SD
          type: string
        service_codes:
          description: Comma-separated string of codes of services that are booked
            with the shipment.
          example: "EMAIL_NT,SMS_NT"
          type: string
        reference:
          description: "Reference can be printed on the label and transferred to,\
            \ e.g., carriers."
          example: Order 10001
          type: string
        automatic_select_service_point:
          default: false
          description: "Whether or not the system should automatically select the\
            \ service point closest to the receiver, when required."
          type: boolean
        contents:
          description: General description of the contents of the shipment.
          example: Goods
          type: string
        term_of_trade:
          description: "Incoterm for the shipments, e.g., DDP when customs should\
            \ be paid by the sender."
          example: DAP
          type: string
        origin_shipment_id:
          description: ID of the origin shipment that the shipment is a return for.
          example: "1000001235"
          type: string
        sender:
          $ref: '#/components/schemas/SenderRequest'
        receiver:
          $ref: '#/components/schemas/ReceiverRequest'
        pick_up:
          $ref: '#/components/schemas/ShipmentPickUpRequest'
        bill_to:
          $ref: '#/components/schemas/ShipmentBillToRequest'
        service_point:
          $ref: '#/components/schemas/ServicePointSimple'
        return_to:
          $ref: '#/components/schemas/ShipmentReturnToRequest'
        parcels:
          items:
            $ref: '#/components/schemas/ParcelAdvanced'
          type: array
        print:
          default: false
          description: Print the label via the print client. Shipment labels can be
            sent out to the print queue automatically. Printer and format are specified
            in the print_at element.
          type: boolean
        print_at:
          $ref: '#/components/schemas/PrintAt'
        send_label:
          $ref: '#/components/schemas/SendLabel'
        pallet_exchange:
          $ref: '#/components/schemas/PalletExchange'
        customs:
          $ref: '#/components/schemas/CustomsRequest'
        replace_http_status_code:
          default: false
          description: "If replace_http_status_code is set to true, request will have\
            \ HTTP status 200. The real HTTP status will be included in the response\
            \ header as X-HTTP-Status-Code. This is to prevent runtime errors in some\
            \ frameworks and make it possible to read the error messages."
          type: boolean
        cod:
          $ref: '#/components/schemas/CreateShipmentRequest_cod'
        dfm:
          $ref: '#/components/schemas/CreateShipmentRequest_dfm'
        carrier_insurance:
          $ref: '#/components/schemas/CreateShipmentRequest_carrier_insurance'
      required:
      - own_agreement
      - parcels
      - product_code
      - receiver
      - sender
      - service_codes
      type: object
    CreateShipmentRequestSimple:
      properties:
        test_mode:
          description: |-
            For testing purpose. Shipment and labels generated are dummy
            and cannot be used. To create real shipments, remove this element or set
            it to be false
          example: true
          type: boolean
        own_agreement:
          example: false
          type: boolean
        label_format:
          description: |-
            If label_format is specified, the shipping labels will be
            included in the response. Available formats: a4_pdf, 10x19_pdf, 10x19_png, 10x19_zpl
          type: string
          example: null
        product_code:
          description: GLSDK_SD equals GLS (DK) Shop Delivery
          example: GLSDK_SD
          type: string
        service_codes:
          example: "EMAIL_NT,SMS_NT"
          type: string
        automatic_select_service_point:
          description: |-
            When a delivery method requires specified service point, you
            can use this to have the system to pick the closest one based on receiver's
            address.
          example: true
          type: boolean
        sender:
          $ref: '#/components/schemas/SenderRequest'
        receiver:
          $ref: '#/components/schemas/ReceiverRequest'
        parcels:
          items:
            $ref: '#/components/schemas/ParcelSimple'
          type: array
        print:
          description: |-
            For using with the print client. Shipment labels can be sent
            out to the print queue automatically. Possible to specify which host name,
            printer name and label format in print_at element.
          example: false
          type: boolean
        print_at:
          $ref: '#/components/schemas/PrintAt'
        send_label:
          $ref: '#/components/schemas/SendLabel'
        replace_http_status_code:
          description: |-
            If replace_http_status_code is set to true, request will have
            HTTP Status 200, the real HTTP Status will be included in the response
            header as X-HTTP-Status-Code. This is for preventing Run Time Error in
            some frameworks and make it possible to read the error messages.
          example: false
          type: boolean
        reference:
          description: "Reference can be printed on the label and transferred to,\
            \ e.g., carriers."
          example: Order 10001
          type: string
        pallet_exchange:
          $ref: '#/components/schemas/PalletExchange'
      required:
      - own_agreement
      - parcels
      - product_code
      - receiver
      - sender
      - service_codes
      type: object
    CreateShipmentRequestSimpleWithServicePoint:
      properties:
        test_mode:
          description: |-
            For testing purpose. Shipment and labels generated are dummy
            and cannot be used. To create real shipments, remove this element or set
            it to be false
          example: true
          type: boolean
        own_agreement:
          example: false
          type: boolean
        label_format:
          description: |-
            If label_format is specified, the shipping labels will be
            included in the response. Available formats: a4_pdf, 10x19_pdf, 10x19_png, 10x19_zpl
          type: string
          example: null
        product_code:
          description: GLSDK_SD equals GLS (DK) Shop Delivery
          example: GLSDK_SD
          type: string
        service_codes:
          example: "EMAIL_NT,SMS_NT"
          type: string
        sender:
          $ref: '#/components/schemas/Sender'
        receiver:
          $ref: '#/components/schemas/Receiver'
        service_point:
          $ref: '#/components/schemas/CreateShipmentRequestSimpleWithServicePoint_service_point'
        parcels:
          items:
            $ref: '#/components/schemas/ParcelSimple'
          type: array
      required:
      - own_agreement
      - parcels
      - product_code
      - receiver
      - sender
      - service_codes
      type: object
    PalletExchange:
      example:
        pallets2: 0
        pallets1: 0
        pallets4: 0
      properties:
        pallets1:
          description: The number of full pallets to exchange
          example: 0
          type: integer
        pallets2:
          description: The number of half pallets to exchange
          example: 0
          type: integer
        pallets4:
          description: The number of quarter pallets to exchange
          example: 0
          type: integer
      type: object
    PrintAt:
      example:
        label_format: 10x19_zpl
        printer_name: Zebra Zdesigner GK420D
        host_name: WAREHOUSE-PC
      properties:
        host_name:
          description: Name of the PC / host where the print client is installed.
          example: WAREHOUSE-PC
          type: string
        printer_name:
          description: Name of the printer that is registered within the print client.
          example: Zebra Zdesigner GK420D
          type: string
        label_format:
          description: The label format that the printer can accept.
          enum:
          - a4_pdf
          - 10x19_pdf
          - 10x19_png
          - 10x19_zpl
          example: 10x19_zpl
          type: string
      type: object
    SendLabel:
      description: Send out the label as PDF via email after booking.
      example:
        label_format: a4_pdf
        name: Jim
        email: jim@minvirksomhed.dk
      properties:
        name:
          description: Name of the recipient of the label.
          example: Jim
          type: string
        email:
          description: "Email address of the recipient of the label, which the label\
            \ should be sent to."
          example: jim@minvirksomhed.dk
          type: string
        label_format:
          description: The label format that should be attached to the email.
          enum:
          - a4_pdf
          - 10x19_pdf
          example: a4_pdf
          type: string
      type: object
    CustomsRequest:
      description: Custom details used to generate proforma invoice or sent directly
        to the carrier. This object is only used for shipments where customs declaration
        is required.
      example:
        sender_custom_invoice_text: "Key code: ABC123"
        receiver_custom_invoice_text: "Key code: ABC123"
        term_of_trade: DAP
        goods:
        - country_code: DK
          commodity_code: "6109100010"
          quantity: 2
          unit_value: 122.5
          unit_weight: 110
          content: Cotton t-shirt
        - country_code: DK
          commodity_code: "6109100010"
          quantity: 2
          unit_value: 122.5
          unit_weight: 110
          content: Cotton t-shirt
        export_reason: other
        billed_to_custom_invoice_text: "Key code: ABC123"
        currency_code: DKK
      properties:
        export_reason:
          default: other
          description: Reason for exporting the goods.
          enum:
          - sale_of_goods
          - gift
          - documents
          - commercial_samples
          - returned_goods
          - other
          example: other
          type: string
        term_of_trade:
          default: DAP
          description: "Incoterm for the shipments, e.g., DDP when customs should\
            \ be paid by the sender."
          example: DAP
          type: string
        currency_code:
          description: Currency code for prices declared in goods
          example: DKK
          type: string
        billed_to_custom_invoice_text:
          description: "A custom text for the shipment importer. Will not be transmitted\
            \ to carriers, but will appear on proforma/commercial invoice under \"\
            Importer\" if filled."
          example: "Key code: ABC123"
          type: string
        sender_custom_invoice_text:
          description: "A custom text for the shipment sender. Will not be transmitted\
            \ to carriers, but will appear on proforma/commercial invoice under \"\
            Sender\" if filled."
          example: "Key code: ABC123"
          type: string
        receiver_custom_invoice_text:
          description: "A custom text for the shipment receiver. Will not be transmitted\
            \ to carriers, but will appear on proforma/commercial invoice under \"\
            Delivery to\" if filled."
          example: "Key code: ABC123"
          type: string
        goods:
          items:
            $ref: '#/components/schemas/CustomsGood'
          type: array
      type: object
    CustomsGood:
      example:
        country_code: DK
        commodity_code: "6109100010"
        quantity: 2
        unit_value: 122.5
        unit_weight: 110
        content: Cotton t-shirt
      properties:
        quantity:
          description: Quantity of the good in the shipment.
          example: 2
          type: integer
        country_code:
          description: Country code of origin of the good.
          example: DK
          type: string
        content:
          description: Description of the good.
          example: Cotton t-shirt
          type: string
        commodity_code:
          description: Commodity code (tariff/HS code) of the good.
          example: "6109100010"
          type: string
        unit_value:
          description: Value of the good per unit.
          example: 122.5
          type: number
        unit_weight:
          description: Weight in grams of the good per unit.
          example: 110
          type: integer
      type: object
    CreateShipmentAdvanced:
      properties:
        test_mode:
          description: |-
            For testing purpose. Shipment and labels generated are dummy
            and cannot be used. To create real shipments, remove this element or set
            it to be false
          example: true
          type: boolean
        own_agreement:
          example: false
          type: boolean
        product_code:
          description: DHLE_EW equals DHL Express Express Worldwide
          example: DHLE_EW
          type: string
        service_codes:
          example: "EMAIL_NT,SMS_NT"
          type: string
        reference:
          example: Webshop 5678
          type: string
        order_id:
          example: "1000002345"
          type: string
        sender:
          $ref: '#/components/schemas/Sender'
        receiver:
          $ref: '#/components/schemas/ShipmentReceiver'
        pick_up:
          $ref: '#/components/schemas/PickUp'
        parcels:
          items:
            $ref: '#/components/schemas/ParcelAdvanced'
          type: array
      type: object
    Shipment:
      example:
        bill_to:
          bill_to_custom: true
          address2: address2
          city: Odense SØ
          customer_number: "12345678"
          address1: Hvilehøjvej 25
          mobile: "80808080"
          telephone: "80808080"
          zipcode: "5220"
          country_code: DK
          name: Min Virksomhed A/S
          attention: attention
          vat_id: DK12345678
          email: jim@minvirksomhed.dk
        paperless_trade: false
        created_at: 2017-06-16T06:25:44.557Z
        description: ShopDelivery
        product_code: GLSDK_SD
        reference: "5678123"
        updated_at: 2017-06-16T06:25:44.557Z
        price: 42.5
        product_id: 64
        id: 1168
        waybill_reference: CS000000000NO
        service_point:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          shipping_agent: gls
          address1: Paaskeløkkevej 11
          name: Påskeløkkens Købmand
          id: "95558"
        receiver:
          date: 2021-10-14T00:00:00.000+00:00
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          mobile: "12345678"
          telephone: "12345678"
          from_time: 08:00
          zipcode: "5000"
          country_code: DK
          instruction: Place on the front porch.
          name: Lene Hansen
          attention: attention
          to_time: 16:00
          email: lene@email.dk
        carrier_insurance:
          amount: 1000
          currency_code: DKK
        term_of_trade: DAP
        pkg_no: "6064518784"
        labelless_code: 123-4567-890
        source_type: manual
        services: "23,24"
        pick_up:
          date: 2021-10-13T00:00:00.000+00:00
          address2: address2
          city: Odense SØ
          address1: Hvilehøjvej 25
          telephone: "80808080"
          from_time: 08:00
          zipcode: "5220"
          country_code: DK
          instruction: Goods are placed at gate 21
          pickup_custom: true
          name: Min Virksomhed A/S
          attention: attention
          to_time: 16:00
        contents: Goods
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
          mobile: "70400407"
          attention: Lene Hansen
          vat_id: "5323471"
          telephone: "70400407"
          email: info@minvirksomhed.dk
        return_shipment_id: "1000001234"
        origin_shipment_id: "1000001235"
        source_id: "1000001234"
        order_id: "5678123"
        service_codes: "EMAIL_NT,SMS_NT"
        carrier_code: gls
        parcels:
        - quantity: 1
          pkg_no: "1064548752"
          length: 20
          weight: 1000
          packaging: PL1
          content: Bike accessories
          volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          pkg_nos:
          - "1064548752"
          width: 10
          height: 6
        - quantity: 1
          pkg_no: "1064548752"
          length: 20
          weight: 1000
          packaging: PL1
          content: Bike accessories
          volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          pkg_nos:
          - "1064548752"
          width: 10
          height: 6
      properties:
        id:
          description: ID of the shipment.
          example: 1168
          type: integer
        created_at:
          description: Date and time the shipment was created.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        updated_at:
          description: Date and time the shipment was last updated.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        carrier_code:
          description: Carrier code referring to the carrier of the shipment.
          example: gls
          type: string
        description:
          description: "Text to describe the shipment, which can be used when presenting\
            \ it."
          example: ShopDelivery
          type: string
        contents:
          description: General description of the contents of the shipment.
          example: Goods
          type: string
        term_of_trade:
          description: "Incoterm for the shipments, e.g., DDP when customs should\
            \ be paid by the sender."
          example: DAP
          type: string
        product_id:
          description: ID of the product of the shipment.
          example: 64
          type: integer
        services:
          description: Comma-separated string of IDs of services that are booked with
            the shipment.
          example: "23,24"
          type: string
        product_code:
          description: Product code of the product of the shipment.
          example: GLSDK_SD
          type: string
        service_codes:
          description: Comma-separated string of codes of services that is booked
            with the shipment.
          example: "EMAIL_NT,SMS_NT"
          type: string
        price:
          description: Price of the shipment including VAT.
          example: 42.5
          type: number
        reference:
          description: Sender's reference of the shipment.
          example: "5678123"
          type: string
        order_id:
          description: "Order no. from webshop, if shipment is based on an order or\
            \ draft in Shipmondo."
          example: "5678123"
          type: string
        pkg_no:
          description: "Carrier's shipment number, referring to the whole shipment."
          example: "6064518784"
          type: string
        receiver:
          $ref: '#/components/schemas/ShipmentReceiver'
        sender:
          $ref: '#/components/schemas/ShipmentSender'
        parcels:
          items:
            $ref: '#/components/schemas/Parcel'
          type: array
        service_point:
          $ref: '#/components/schemas/ShipmentServicePoint'
        pick_up:
          $ref: '#/components/schemas/PickUp'
        bill_to:
          $ref: '#/components/schemas/ShipmentBillTo'
        paperless_trade:
          default: false
          description: "If the shipment is created with paperless trade, then it is\
            \ not necessary to print out physical proforma invoice."
          type: boolean
        labelless_code:
          description: "If labelless is supported on the certain shipment by the carrier,\
            \ then this element will be available with the code that can be written\
            \ on the parcel."
          example: 123-4567-890
          type: string
        source_id:
          description: ID of the source of the shipment from which it has been created.
          example: "1000001234"
          type: string
        source_type:
          description: The type of the source from which the shipment has been created
          enum:
          - manual
          - imported
          - fulfillment
          - return
          - repurchase
          - api
          - address_book
          example: manual
          type: string
        return_shipment_id:
          description: ID of the return shipment that has been created for the shipment.
          example: "1000001234"
          type: string
        origin_shipment_id:
          description: ID of the origin shipment that the shipment was created as
            return for.
          example: "1000001235"
          type: string
        carrier_insurance:
          $ref: '#/components/schemas/Shipment_carrier_insurance'
        waybill_reference:
          description: Reference of the bulk waybill that the shipment is included
            in.
          example: CS000000000NO
          type: string
      type: object
    ShipmentCancelled:
      example:
        cancelled_at_carrier: true
      properties:
        cancelled_at_carrier:
          description: Whether or not the shipments are cancelled at the carrier.
          type: boolean
      type: object
    PackingSlip:
      example:
        packing_slips:
        - base64: JVBERi0xLjMKJf//////AAAAAA...
          order_fulfillment_id: 833
          file_format: pdf
        - base64: JVBERi0xLjMKJf//////AAAAAA...
          order_fulfillment_id: 833
          file_format: pdf
        id: 27000
      properties:
        id:
          description: ID for sales order
          example: 27000
          type: integer
        packing_slips:
          items:
            $ref: '#/components/schemas/PackingSlipData'
          type: array
      type: object
    PackingSlipData:
      example:
        base64: JVBERi0xLjMKJf//////AAAAAA...
        order_fulfillment_id: 833
        file_format: pdf
      properties:
        order_fulfillment_id:
          description: The ID of the order fulfillment.
          example: 833
          type: integer
        base64:
          description: Data encoded in Base64 format.
          example: JVBERi0xLjMKJf//////AAAAAA...
          type: string
        file_format:
          description: File format for the returned PDF data.
          example: pdf
          type: string
      type: object
    PickList:
      example:
        pick_list:
        - base64: JVBERi0xLjMKJf//////AAAAAA...
          file_format: pdf
        - base64: JVBERi0xLjMKJf//////AAAAAA...
          file_format: pdf
        id: 27000
      properties:
        id:
          description: ID for sales order
          example: 27000
          type: integer
        pick_list:
          items:
            $ref: '#/components/schemas/PickListData'
          type: array
      type: object
    PickListData:
      example:
        base64: JVBERi0xLjMKJf//////AAAAAA...
        file_format: pdf
      properties:
        base64:
          description: Data encoded in Base64 format.
          example: JVBERi0xLjMKJf//////AAAAAA...
          type: string
        file_format:
          description: File format for the returned PDF data.
          example: pdf
          type: string
      type: object
    Label:
      example:
        base64: JVBERi0xLjMKJf//////AAAAAA...
        file_format: pdf
      properties:
        base64:
          description: Data encoded in Base64 format
          example: JVBERi0xLjMKJf//////AAAAAA...
          type: string
        file_format:
          description: File format for the returned data
          enum:
          - pdf
          - png
          - zpl
          example: pdf
          type: string
      type: object
    ProformaInvoice:
      example:
        base64: JVBERi0xLjMKJf//////AAAAAA...
        file_format: pdf
      properties:
        base64:
          description: Base64-encoded string containing the data of the document.
          example: JVBERi0xLjMKJf//////AAAAAA...
          type: string
        file_format:
          description: File format for the returned data.
          enum:
          - pdf
          example: pdf
          type: string
      type: object
    Item:
      example:
        virtual: false
        shop: API
        bin: 123-a
        image_url: https://example.com/image.jpg
        weight: 1000
        variant_code: Large
        currency_code: DKK
        customs_commodity_code: "123456"
        name: T-Shirt
        customs_description: Example contents
        id: 1
        country_code_of_origin: DK
        sku: EX-123
        barcode: "1234567891011"
      properties:
        id:
          description: Unique identifier of the object.
          example: 1
          type: integer
        sku:
          description: "SKU (stock keeping unit). Must be unique for every item, including\
            \ variants."
          example: EX-123
          type: string
        name:
          description: Name of the item.
          example: T-Shirt
          type: string
        variant_code:
          description: Variant code of the item.
          example: Large
          type: string
        barcode:
          description: "Barcode of the item, which is used when scanning item for\
            \ pick. Will be displayed as a code 128 barcode"
          example: "1234567891011"
          type: string
        bin:
          description: The bin/location where the item is located in the warehouse.
          example: 123-a
          type: string
        weight:
          description: Weight of the item in grams.
          example: 1000
          type: integer
        image_url:
          description: Image URL of the item that appears on the order or when picking.
            Will only be displayed if the URL is HTTPS.
          example: https://example.com/image.jpg
          type: string
        country_code_of_origin:
          description: ISO 3166-1 alpha-2 country code of origin.
          example: DK
          type: string
        currency_code:
          description: ISO 4217 currency code.
          example: DKK
          type: string
        customs_commodity_code:
          description: Tariff code for the item. Used when creating shipments that
            require customs declaration.
          example: "123456"
          type: string
        customs_description:
          description: Customs description for the item. Used when creating shipments
            that require customs declaration.
          example: Example contents
          type: string
        shop:
          description: Origin shop of the item.
          example: API
          type: string
        virtual:
          default: false
          description: Describes if the item is a virtual item.
          type: boolean
      type: object
    CreateItemRequest:
      example:
        virtual: false
        shop: API
        bin: 123-a
        image_url: https://example.com/image.jpg
        weight: 1000
        variant_code: Large
        currency_code: DKK
        customs_commodity_code: "123456"
        name: T-Shirt
        customs_description: Example contents
        country_code_of_origin: DK
        sku: EX-123
        barcode: "1234567891011"
      properties:
        sku:
          description: "SKU (stock keeping unit). Must be unique for every item, including\
            \ variants."
          example: EX-123
          type: string
        name:
          description: Name of the item.
          example: T-Shirt
          type: string
        variant_code:
          description: Variant code of the item.
          example: Large
          type: string
        barcode:
          description: "Barcode of the item, which is used when scanning item for\
            \ pick. Will be displayed as a code 128 barcode"
          example: "1234567891011"
          type: string
        bin:
          description: The bin/location where the item is located in the warehouse.
          example: 123-a
          type: string
        weight:
          description: Weight of the item in grams.
          example: 1000
          type: integer
        image_url:
          description: Image URL of the item that appears on the order or when picking.
            Will only be displayed if the URL is HTTPS.
          example: https://example.com/image.jpg
          type: string
        country_code_of_origin:
          description: ISO 3166-1 alpha-2 country code of origin.
          example: DK
          type: string
        currency_code:
          description: ISO 4217 currency code.
          example: DKK
          type: string
        customs_commodity_code:
          description: Tariff code for the item. Used when creating shipments that
            require customs declaration.
          example: "123456"
          type: string
        customs_description:
          description: Customs description for the item. Used when creating shipments
            that require customs declaration.
          example: Example contents
          type: string
        shop:
          description: Origin shop of the item.
          example: API
          type: string
        virtual:
          default: false
          description: Describes if the item is a virtual item.
          type: boolean
      required:
      - name
      - sku
      type: object
    UpdateItemRequest:
      example:
        customs_commodity_code: "123456"
        virtual: false
        bin: 123-a
        image_url: https://example.com/image.jpg
        name: T-Shirt
        customs_description: Example contents
        weight: 1000
        country_code_of_origin: DK
        variant_code: Large
        barcode: "1234567891011"
        currency_code: DKK
      properties:
        name:
          description: Name of the item.
          example: T-Shirt
          type: string
        variant_code:
          description: Variant code of the item.
          example: Large
          type: string
        barcode:
          description: Barcode of the item. Used when scanning item for pick.
          example: "1234567891011"
          type: string
        bin:
          description: The bin/location where the item is located in the warehouse.
          example: 123-a
          type: string
        weight:
          description: Weight of the item in grams.
          example: 1000
          type: integer
        image_url:
          description: Image URL of the item that appears on the order or when picking.
            Will only be displayed if the URL is HTTPS.
          example: https://example.com/image.jpg
          type: string
        country_code_of_origin:
          description: ISO 3166-1 alpha-2 country code of origin.
          example: DK
          type: string
        currency_code:
          description: ISO 4217 currency code.
          example: DKK
          type: string
        customs_commodity_code:
          description: Tariff code for the item. Used when creating shipments that
            require customs declaration.
          example: "123456"
          type: string
        customs_description:
          description: Customs description for the item. Used when creating shipments
            that require customs declaration.
          example: Example contents
          type: string
        virtual:
          default: false
          description: Describes if the item is a virtual item.
          type: boolean
      type: object
    Webhook:
      example:
        endpoint: https://example.com/webhook
        updated_at: 2017-06-16T06:25:44.557Z
        name: Example Name
        active: true
        created_at: 2017-06-16T06:25:44.557Z
        action: create
        id: 1
        resource_name: Shipments
      properties:
        id:
          description: Unique identifier of the object.
          example: 1
          type: integer
        endpoint:
          description: Endpoint the webhook sends request to.
          example: https://example.com/webhook
          type: string
        active:
          description: Indicates if the webhook is active.
          type: boolean
        created_at:
          description: ISO 8601 datetime the object was created.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        updated_at:
          description: ISO 8601 datetime when the object was updated.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        name:
          description: User-specified name of the webhook.
          example: Example Name
          type: string
        action:
          description: The action that webhook is hooked to.
          enum:
          - create
          - cancel
          - status_update
          - create_fulfillment
          - create_shipment
          - payment_captured
          - payment_refunded
          - payment_voided
          - delete
          - latest
          - delivered
          example: create
          type: string
        resource_name:
          description: The name of the resource that webhook is hooked to.
          enum:
          - Shipments
          - Drafts
          - Orders
          - Shipment Monitor
          example: Shipments
          type: string
      type: object
    WebhookCreate:
      example:
        endpoint: https://example.com/webhook
        name: Example Name
        action: create
        resource_name: Shipments
        key: example_key_123
      properties:
        name:
          description: User-specified name of the webhook.
          example: Example Name
          type: string
        endpoint:
          description: Endpoint the webhook sends request to.
          example: https://example.com/webhook
          type: string
        key:
          description: Encryption key that should encrypt and decrypt the webhook
            message with JWT.
          example: example_key_123
          type: string
        action:
          description: The action that webhook is hooked to.
          enum:
          - create
          - cancel
          - status_update
          - create_fulfillment
          - create_shipment
          - payment_captured
          - payment_voided
          - delete
          - latest
          - delivered
          example: create
          type: string
        resource_name:
          description: The name of the resource that webhook is hooked to.
          enum:
          - Shipments
          - Drafts
          - Orders
          - Shipment Monitor
          example: Shipments
          type: string
      required:
      - action
      - endpoint
      - key
      - name
      - resource_name
      type: object
    ServicePointSimple:
      description: Service point address. Used for shop delivery carrier products.
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Paaskeløkkevej 11
        name: Påskeløkkens Købmand
        id: "95558"
      properties:
        id:
          description: Identifier of the service point.
          example: "95558"
          type: string
        name:
          description: Name of the service point.
          example: Påskeløkkens Købmand
          type: string
        address1:
          description: Address of the service point.
          example: Paaskeløkkevej 11
          type: string
        address2:
          type: string
          example: null
        zipcode:
          description: Zip code of the service point.
          example: "5000"
          type: string
        city:
          description: City of the provided zipcode.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the service point.
          example: DK
          type: string
      type: object
    ServicePoint:
      example:
        country: DK
        agent: gls
        address: Paaskeløkkevej 11
        distance: 0
        address2: address2
        city: Odense C
        latitude: 55.4086
        out_delivery: true
        zipcode: "5000"
        number: "95558"
        company_name: Påskeløkkens Købmand
        name: Påskeløkkens Købmand
        opening_hours:
        - "[\"Man: 00:00 - 23:59\",\"Tir: 00:00 - 23:59\",\"Ons: 00:00 - 23:59\",\"\
          Tor: 00:00 - 23:59\",\"Fre: 00:00 - 23:59\",\"Lør: 00:00 - 23:59\",\"Sø\
          n: 00:00 - 23:59\"]"
        - "[\"Man: 00:00 - 23:59\",\"Tir: 00:00 - 23:59\",\"Ons: 00:00 - 23:59\",\"\
          Tor: 00:00 - 23:59\",\"Fre: 00:00 - 23:59\",\"Lør: 00:00 - 23:59\",\"Sø\
          n: 00:00 - 23:59\"]"
        in_delivery: true
        id: "95558"
        longitude: 10.4159
        carrier_code: gls
      properties:
        number:
          description: ID of the pickup point. Used when request a shipment to the
            specific pickup point.
          example: "95558"
          type: string
        id:
          description: ID of the pickup point. Used when request a shipment to the
            specific pickup point.
          example: "95558"
          type: string
        company_name:
          description: Name of the location of the pickup point.
          example: Påskeløkkens Købmand
          type: string
        name:
          description: Name of the location of the pickup point.
          example: Påskeløkkens Købmand
          type: string
        address:
          description: Address line 1 of the pickup point.
          example: Paaskeløkkevej 11
          type: string
        address2:
          description: Address line 2 of the pickup point.
          type: string
          example: null
        zipcode:
          description: Zip code of the pickup point.
          example: "5000"
          type: string
        city:
          description: City of the pickup point.
          example: Odense C
          type: string
        country:
          description: Country code of the pickup point.
          example: DK
          type: string
        distance:
          description: Distance in meters between the pickup point and the requested
            location.
          type: integer
        longitude:
          description: Longitude of the pickup point. Together with latitude it defines
            the coordinates of the pickup point.
          example: 10.4159
          type: number
        latitude:
          description: Latitude of the pickup point. Together with longitude it defines
            the coordinates of the pickup point.
          example: 55.4086
          type: number
        agent:
          description: Carrier code of the pickup point. Defines which carrier the
            pickup point belongs to.
          example: gls
          type: string
        carrier_code:
          description: Carrier code of the pickup point. Defines which carrier the
            pickup point belongs to.
          example: gls
          type: string
        opening_hours:
          description: Opening hours in which parcels can be picked up at the location.
          items:
            example: "[\"Man: 00:00 - 23:59\",\"Tir: 00:00 - 23:59\",\"Ons: 00:00\
              \ - 23:59\",\"Tor: 00:00 - 23:59\",\"Fre: 00:00 - 23:59\",\"Lør: 00:00\
              \ - 23:59\",\"Søn: 00:00 - 23:59\"]"
            type: string
          type: array
        in_delivery:
          description: Whether or not the pickup point supports drop off of parcels.
          type: boolean
        out_delivery:
          description: Whether or not the pickup point supports pickup of parcels.
          type: boolean
      type: object
    ServicePoints:
      items:
        $ref: '#/components/schemas/ServicePoint'
      type: array
    ShipmentServicePoint:
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        shipping_agent: gls
        address1: Paaskeløkkevej 11
        name: Påskeløkkens Købmand
        id: "95558"
      properties:
        id:
          description: Identifier of the service point.
          example: "95558"
          type: string
        name:
          description: Name of the service point.
          example: Påskeløkkens Købmand
          type: string
        address1:
          description: Address line 1 of the service point.
          example: Paaskeløkkevej 11
          type: string
        address2:
          description: Address line 2 of the service point.
          type: string
          example: null
        zipcode:
          description: Zip code of the service point.
          example: "5000"
          type: string
        city:
          description: City of the provided zipcode.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the service point.
          example: DK
          type: string
        shipping_agent:
          description: Carrier code of the carrier that the service point belongs
            to.
          example: gls
          type: string
      type: object
    PaymentRequest:
      example:
        reference: Non-compliant
        amount: 22.5
        updated_at: 2017-06-16T06:25:44.557Z
        line_type: non_compliant
        created_at: 2017-06-16T06:25:44.557Z
        id: 11460
        shipment_id: 18651353
        currency_code: DKK
      properties:
        id:
          description: ID of the payment request.
          example: 11460
          type: integer
        shipment_id:
          description: ID of the shipment that the payment request is related to.
          example: 18651353
          type: integer
        reference:
          description: Information about the nature of the payment request.
          example: Non-compliant
          type: string
        line_type:
          description: Type related to the nature of the payment request.
          enum:
          - shipment
          - pickup
          - fuel
          - sulphur
          - road_toll
          - non_compliant
          - oversize
          - island_fee
          - hanging_garment
          - alternative_delivery
          - re_addressing
          - unfit_for_parcel_shop
          - re_delivery
          - return_freight
          - overweight
          - hazardous_goods_service
          - customs_clearance
          - remote_area
          - not_stackable_pallet
          - time_definite
          - address_correction
          - cargo_gods_fee
          - no_reply
          - missing_edi_data
          - oversize_fifty
          - oversize_60
          - oversize_115
          - environmental
          - security
          - currency_conversion
          - drop_off_fee
          - bag_on_door
          - barcode_unreadable
          - barcode_misplaced
          - shipment_information_correction
          - seasonal_fee
          - delivery_obstacles
          - conversion_fee
          - non_collected_shipment
          - evening_delivery
          - missing_mandatory_notification
          - gotland_fee
          - colli_fee
          - notification
          - warehouse_rent
          - parcel_information_correction
          - outside_product_specification
          - signature_assurance
          - brexit
          - pickup_private
          - freight_adjustment
          - discount
          - use_of_refunded_shipment
          - business_to_private
          - label_reuse
          - excess_weight
          - others
          - unknown
          example: non_compliant
          type: string
        amount:
          description: Amount to be paid.
          example: 22.5
          type: number
        currency_code:
          description: Currency code of the amount.
          example: DKK
          type: string
        created_at:
          description: Date and time the payment request was created.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        updated_at:
          description: Date and time the payment request was last updated.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
      type: object
    Printer:
      example:
        hostname: WAREHOUSE-PC-01
        default_document_printer: false
        printer: GK420D
        label_format: zpl
        default_printer: false
        name: Warehouse Printer 02
        staff_account_id: 7
        default_pick_document_printer: false
        auto_print: false
      properties:
        name:
          description: User-specified name of the printer.
          example: Warehouse Printer 02
          type: string
        hostname:
          description: The name of the computer/host from which the printer is accessed.
          example: WAREHOUSE-PC-01
          type: string
        printer:
          description: The name of the printer as it appears on the computer/host.
          example: GK420D
          type: string
        label_format:
          description: The given format of the printer
          enum:
          - zpl
          - 10x19
          - a4
          example: zpl
          type: string
        default_printer:
          default: false
          description: Indicates if the printer is default for shipments
          type: boolean
        default_document_printer:
          default: false
          description: Indicates if the printer is default for printing documents
            such as proforma invoices.
          type: boolean
        default_pick_document_printer:
          default: false
          description: Indicates if the printer is default for printing pick documents
            such as packing slips and pick path documents.
          type: boolean
        auto_print:
          default: false
          deprecated: true
          type: boolean
        staff_account_id:
          description: The identifier for the related staff account.
          example: 7
          type: integer
      type: object
    PrintJob:
      example:
        label_format: zpl
        printer_name: GK420D
        document_id: 11460
        host_name: WAREHOUSE-PC-01
        document_type: shipment
      properties:
        document_id:
          description: Identifier for the provided document_type.
          example: 11460
          type: integer
        document_type:
          description: Type of document that should be printed.
          enum:
          - shipment
          - sales_order
          - fulfillment
          - proforma
          example: shipment
          type: string
        host_name:
          description: The name of the computer/host to print at.
          example: WAREHOUSE-PC-01
          type: string
        printer_name:
          description: The name of the printer that should be printed on.
          example: GK420D
          type: string
        label_format:
          description: The given format of the print job.
          example: zpl
          type: string
      required:
      - document_id
      - document_type
      - host_name
      - label_format
      - printer_name
      type: object
    PrintJobBatch:
      example:
        print_jobs:
        - label_format: zpl
          printer_name: GK420D
          document_id: 11460
          document_type: shipment
        - label_format: zpl
          printer_name: GK420D
          document_id: 11460
          document_type: shipment
        host_name: WAREHOUSE-PC-01
      properties:
        host_name:
          description: The name of the computer/host to print at.
          example: WAREHOUSE-PC-01
          type: string
        print_jobs:
          description: A list of print jobs to be printed in the specified order.
          items:
            $ref: '#/components/schemas/PrintJobBatch_print_jobs_inner'
          type: array
      required:
      - host_name
      - print_jobs
      type: object
    ShipmentTemplate:
      example:
        default: true
        own_agreement: false
        receiver:
          country_code: DK
        sender:
          country_code: DK
        name: GLS Shipments
        id: 11460
        product_code: GLSDK_HD
        service_codes: "EMAIL_NT,SMS_NT"
        parcels:
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
      properties:
        id:
          description: ID of the shipment template. Used when referencing a specific
            template in other requests.
          example: 11460
          type: integer
        name:
          description: Given name of the template.
          example: GLS Shipments
          type: string
        default:
          description: Whether or not the template is the default to be used when
            no other is selected.
          example: true
          type: boolean
        product_code:
          description: Code for the product that is booked when using the template.
          example: GLSDK_HD
          type: string
        own_agreement:
          description: Whether or not the shipments are booked with the template is
            using own agreement or Shipmondo agreement.
          example: false
          type: boolean
        service_codes:
          description: Comma-separated string of service codes referring to which
            services that is booked when using the template.
          example: "EMAIL_NT,SMS_NT"
          type: string
        sender:
          $ref: '#/components/schemas/ShipmentTemplate_sender'
        receiver:
          $ref: '#/components/schemas/ShipmentTemplate_receiver'
        parcels:
          items:
            $ref: '#/components/schemas/ParcelAdvanced'
          type: array
      type: object
    SalesOrderPackaging:
      example:
        name: Standard Packaging
        length: 10
        width: 10
        weight: 1000
        id: 11460
        barcode: AB12345334
        height: 10
      properties:
        id:
          description: Unique identifier of the object.
          example: 11460
          type: integer
        name:
          description: User-specified name of the packaging.
          example: Standard Packaging
          type: string
        barcode:
          description: "Barcode of the item, which is used when scanning item for\
            \ pick. Will be displayed as a code 128 barcode."
          example: AB12345334
          type: string
        weight:
          description: Weight of the order packaging in grams.
          example: 1000
          type: integer
        length:
          description: Length of the order packaging in cm.
          example: 10
          type: integer
        height:
          description: Height of the order packaging in cm.
          example: 10
          type: integer
        width:
          description: Width of the order packaging in cm.
          example: 10
          type: integer
      type: object
    BookkeepingIntegration:
      example:
        name: Testcompany Bookkeeping
        id: 12160
        platform: economic
      properties:
        id:
          description: Unique identifier of the object.
          example: 12160
          type: integer
        name:
          description: User-specified name of the bookkeeping integration.
          example: Testcompany Bookkeeping
          type: string
        platform:
          description: Code of the bookkeeping platform that is integrated to. Used
            to refer to the provider.
          enum:
          - economic
          - billy
          - dinero
          example: economic
          type: string
      type: object
    ReturnPortal:
      example:
        portal_name: mitfirma
        active: true
        id: 43
        carrier_code: gls
      properties:
        id:
          description: ID of the return portal.
          example: 43
          type: integer
        active:
          description: Whether the return portal is active and ready to use.
          type: boolean
        portal_name:
          description: "Last part of the URL to access the return portal: https://return.shipmondo.com/{portal_name}"
          example: mitfirma
          type: string
        carrier_code:
          deprecated: true
          description: Carrier code for the carrier that is setup to the return portals.
          example: gls
          type: string
      type: object
    ReturnPortals:
      items:
        $ref: '#/components/schemas/ReturnPortal'
      type: array
    Labels:
      example:
        id: 43
        labels:
        - base64: JVBERi0xLjMKJf//////AAAAAA...
          file_format: pdf
        - base64: JVBERi0xLjMKJf//////AAAAAA...
          file_format: pdf
      properties:
        id:
          description: Shipment ID
          example: 43
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
      type: object
    CreateQuoteRequest:
      example:
        receiver:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
        sender:
          zipcode: "5220"
          country_code: DK
          address2: address2
          city: Odense SØ
          address1: Hvilehøjvej 25
        product_code: PDK_MH
        service_codes: "EMAIL_NT,SMS_NT"
        parcels:
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
      properties:
        product_code:
          description: Product code referring to which product should be quoted for.
          example: PDK_MH
          type: string
        service_codes:
          description: Comma-separated string of service codes referring to which
            services should be quoted for.
          example: "EMAIL_NT,SMS_NT"
          type: string
        sender:
          $ref: '#/components/schemas/QuoteSender'
        receiver:
          $ref: '#/components/schemas/QuoteReceiver'
        parcels:
          items:
            $ref: '#/components/schemas/ParcelAdvanced'
          type: array
      required:
      - parcels
      - product_code
      - receiver
      - sender
      type: object
    CreateQuoteResponse:
      example:
        price_before_vat: 34
        price: 42.5
        description: MyPack Home
        product_code: PDK_MH
        service_codes: "EMAIL_NT,SMS_NT"
        currency_code: DKK
        carrier_code: pdk
      properties:
        carrier_code:
          description: Carrier code referring to the carrier of the product that is
            quoted for.
          example: pdk
          type: string
        description:
          description: "Text to describe the quote, which can be used when presenting\
            \ it."
          example: MyPack Home
          type: string
        product_code:
          description: Product code referring to the product which is quoted for.
          example: PDK_MH
          type: string
        service_codes:
          description: Comma-separated string of service codes referring to the services
            which are quoted for.
          example: "EMAIL_NT,SMS_NT"
          type: string
        price:
          description: "Estimated price of the shipment, including VAT."
          example: 42.5
          type: number
        price_before_vat:
          description: "Estimated price of the shipment, excluding VAT."
          example: 34
          type: number
        currency_code:
          description: Currency code of the price.
          example: DKK
          type: string
      type: object
    CreateShipmentQuoteResponse:
      example:
        carrier_price:
          price: 142.27
          currency_code: NOK
        price_before_vat: 34
        price: 42.5
        description: MyPack Home
        product_code: PDK_MH
        service_codes: "EMAIL_NT,SMS_NT"
        currency_code: DKK
        carrier_code: pdk
      properties:
        carrier_code:
          description: Carrier code referring to the carrier of the product that is
            quoted for.
          example: pdk
          type: string
        description:
          description: "Text to describe the quote, which can be used when presenting\
            \ it."
          example: MyPack Home
          type: string
        product_code:
          description: Product code referring to the product which is quoted for.
          example: PDK_MH
          type: string
        service_codes:
          description: Comma-separated string of service codes referring to the services
            which are quoted for.
          example: "EMAIL_NT,SMS_NT"
          type: string
        price:
          description: "Estimated price of the shipment, including VAT."
          example: 42.5
          type: number
        price_before_vat:
          description: "Estimated price of the shipment, excluding VAT."
          example: 34
          type: number
        currency_code:
          description: Currency code of the price.
          example: DKK
          type: string
        carrier_price:
          $ref: '#/components/schemas/CreateShipmentQuoteResponse_carrier_price'
      type: object
    QuoteSender:
      description: Sender address for which the shipment is quoted.
      example:
        zipcode: "5220"
        country_code: DK
        address2: address2
        city: Odense SØ
        address1: Hvilehøjvej 25
      properties:
        address1:
          example: Hvilehøjvej 25
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5220"
          type: string
        city:
          example: Odense SØ
          type: string
        country_code:
          example: DK
          type: string
      required:
      - address1
      - city
      - country_code
      - zipcode
      type: object
    QuoteReceiver:
      description: Receiver address for which the shipment is quoted.
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
      properties:
        address1:
          example: Skibhusvej 52
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5000"
          type: string
        city:
          example: Odense C
          type: string
        country_code:
          example: DK
          type: string
      required:
      - address1
      - city
      - country_code
      - zipcode
      type: object
    CreateQuoteListRequest:
      example:
        receiver:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
        sender:
          zipcode: "5220"
          country_code: DK
          address2: address2
          city: Odense SØ
          address1: Hvilehøjvej 25
        parcels:
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
        - volume: 0.012
          running_metre: 1.25
          declared_value:
            amount: 1250
            currency_code: DKK
          quantity: 1
          dangerous_goods:
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          - quantity: 3
            description: "DIESEL FUEL, < 62°C (640K)"
            tunnel_restriction_code: A
            packaging: drums
            class: "3"
            net_weight: 20100
            net_weight_kg: 20.1
            packing_group: III
            un_number: "1202"
            environmentally_hazardous: true
          length: 20
          width: 10
          weight: 1000
          description: Bike accessories
          packaging: PL1
          height: 6
      properties:
        sender:
          $ref: '#/components/schemas/QuoteSender'
        receiver:
          $ref: '#/components/schemas/QuoteReceiver'
        parcels:
          items:
            $ref: '#/components/schemas/ParcelAdvanced'
          type: array
      required:
      - parcels
      - receiver
      - sender
      type: object
    SalesOrder:
      example:
        bill_to:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
          mobile: "12345678"
          attention: attention
          telephone: "12345678"
          email: lene@email.dk
        fulfillment_status: authorized
        payment_details:
          transaction_id: "123456789"
          vat_amount: "400.0"
          vat_percent: "0.25"
          amount_including_vat: "2000.0"
          authorized_amount: "2000.0"
          amount_excluding_vat: "1600.0"
          currency_code: DKK
          payment_method: quickpay
          payment_gateway_id: "4012"
        created_at: 2018-06-16T06:25:44.557Z
        enable_customs: false
        shipment_template_id: 710
        reference: DK3400
        order_note: Note
        order_status: open
        archived: false
        bookkeeping_integration_id: 241
        updated_at: 2018-06-16T06:25:44.557Z
        assigned_staff_account_id: 12
        fulfilled_percent: 33
        return_shipment_template_id: 710
        id: 11227
        source_name: Testcompany ApS
        service_point:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Paaskeløkkevej 11
          name: Påskeløkkens Købmand
          id: "95558"
        shipped_percent: 0
        ordered_at: 2017-06-16T06:25:44.557Z
        payment_status: unfulfilled
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
          mobile: "70400407"
          attention: Lene Hansen
          telephone: "70400407"
          email: info@minvirksomhed.dk
        order_lines:
        - quantity: "2.0"
          item_sku: TS001-WH
          discount_amount_excluding_vat: "0.0"
          image_url: http://example.com/image
          amount_including_vat: "2000.0"
          item_name: T-Shirt
          currency_code: DKK
          item_bin: AB-001
          customs_commodity_code: "123456"
          shipped_quantity: "0.0"
          vat_amount: "400.0"
          line_type: item
          vat_percent: "0.25"
          customs_description: Example contents
          id: 1234
          country_code_of_origin: DK
          item_barcode: "12345678"
          unit_weight: 2000
          item_variant_code: White
          unit_price_excluding_vat: "800.0"
          amount_excluding_vat: "1600.0"
          cost_price: "50.0"
        - quantity: "2.0"
          item_sku: TS001-WH
          discount_amount_excluding_vat: "0.0"
          image_url: http://example.com/image
          amount_including_vat: "2000.0"
          item_name: T-Shirt
          currency_code: DKK
          item_bin: AB-001
          customs_commodity_code: "123456"
          shipped_quantity: "0.0"
          vat_amount: "400.0"
          line_type: item
          vat_percent: "0.25"
          customs_description: Example contents
          id: 1234
          country_code_of_origin: DK
          item_barcode: "12345678"
          unit_weight: 2000
          item_variant_code: White
          unit_price_excluding_vat: "800.0"
          amount_excluding_vat: "1600.0"
          cost_price: "50.0"
        order_id: "27000"
        ship_to:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          instruction: Place on the front porch.
          name: Lene Hansen
          mobile: "12345678"
          attention: attention
          telephone: "12345678"
          email: lene@email.dk
        sales_order_packaging_id: 11242
        order_fulfillments:
        - code: 27000-1
          updated_at: 2017-06-16T06:25:44.557Z
          fulfilled_by_third_party: false
          fulfillment_lines:
          - shipped_quantity: "1.0"
            order_line_id: 45891
            id: 3242
          - shipped_quantity: "1.0"
            order_line_id: 45891
            id: 3242
          cancelled: false
          created_at: 2017-06-16T06:25:44.557Z
          id: 6684
          type: outbound
          shipment_id: 14500
          order_packaging_id: 16
        - code: 27000-1
          updated_at: 2017-06-16T06:25:44.557Z
          fulfilled_by_third_party: false
          fulfillment_lines:
          - shipped_quantity: "1.0"
            order_line_id: 45891
            id: 3242
          - shipped_quantity: "1.0"
            order_line_id: 45891
            id: 3242
          cancelled: false
          created_at: 2017-06-16T06:25:44.557Z
          id: 6684
          type: outbound
          shipment_id: 14500
          order_packaging_id: 16
      properties:
        id:
          description: Unique identifier of the object.
          example: 11227
          type: integer
        order_id:
          description: The order ID of the sales order.
          example: "27000"
          type: string
        reference:
          description: The reference for the order.
          example: DK3400
          type: string
        ordered_at:
          description: ISO 8601 datetime the sales order was placed.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        order_status:
          description: Status of the sales order in Shipmondo.
          enum:
          - open
          - processing
          - packed
          - cancelled
          - on_hold
          - sent
          - picked_up
          - archived
          - ready_for_pickup
          - released
          example: open
          type: string
        fulfillment_status:
          description: Status of how fulfilled the sales order is.
          enum:
          - unfulfilled
          - partially_fulfilled
          - fulfilled
          example: authorized
          type: string
        payment_status:
          description: Status of the payment associated with the sales order. Is null
            if no payment gateway/transaction ID is associated with the order.
          enum:
          - authorized
          - partially_paid
          - paid
          - voided
          - authorize_pending
          - authorize_error
          - refunded
          - marked_as_paid
          - partially_refunded
          - authorize_expired
          example: unfulfilled
          type: string
        shipped_percent:
          description: The percentage items of the order that are shipped.
          example: 0
          type: integer
        fulfilled_percent:
          description: The percentage items of the order that are fulfilled.
          example: 33
          type: integer
        archived:
          default: false
          description: Defines whether or not the sales order is archived.
          type: boolean
        source_name:
          description: Name of the source for the sales order.
          example: Testcompany ApS
          type: string
        order_note:
          description: A note for the sales order.
          example: Note
          type: string
        shipment_template_id:
          description: ID of the provided shipment template. Specifies the product
            and services when creating shipments for the sales order.
          example: 710
          type: integer
        return_shipment_template_id:
          description: ID of the provided return shipment template. Specifies the
            return product and services for the sales order.
          example: 710
          type: integer
        sales_order_packaging_id:
          description: ID of the provided sales order packaging. The packaging specifies
            the dimensions that will be used when packaging the order.
          example: 11242
          type: integer
        bookkeeping_integration_id:
          description: ID of the provided bookkeeping integration. Allows the user
            to create invoices from the sales order.
          example: 241
          type: integer
        created_at:
          description: ISO 8601 datetime the object was created.
          example: 2018-06-16T06:25:44.557Z
          format: date-time
          type: string
        updated_at:
          description: ISO 8601 datetime when the object was updated.
          example: 2018-06-16T06:25:44.557Z
          format: date-time
          type: string
        enable_customs:
          default: false
          description: Defines if order should use customs information from the associated
            item when creating shipments.
          type: boolean
        ship_to:
          $ref: '#/components/schemas/SalesOrderShipTo'
        bill_to:
          $ref: '#/components/schemas/SalesOrderBillTo'
        sender:
          $ref: '#/components/schemas/Sender'
        payment_details:
          $ref: '#/components/schemas/PaymentDetails'
        service_point:
          $ref: '#/components/schemas/ServicePointSimple'
        order_lines:
          description: "The order lines describe all the lines for the sales order,\
            \ including items, shipping, and more."
          items:
            $ref: '#/components/schemas/OrderLine'
          type: array
        order_fulfillments:
          description: "Order fulfillments contains fulfilled shipments that are ready\
            \ to be, or have been, shipped."
          items:
            $ref: '#/components/schemas/Fulfillment'
          type: array
        assigned_staff_account_id:
          description: ID of staff account assigned to order
          example: 12
          type: integer
      type: object
    CreateSalesOrderRequest:
      example:
        bill_to:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
          mobile: "12345678"
          attention: attention
          telephone: "12345678"
          email: lene@email.dk
        payment_details:
          transaction_id: "123456789"
          vat_amount: "400.0"
          vat_percent: "0.25"
          amount_including_vat: "2000.0"
          authorized_amount: "2000.0"
          amount_excluding_vat: "1600.0"
          currency_code: DKK
          payment_method: quickpay
          payment_gateway_id: "4012"
        ordered_at: 2018-10-17T13:25:44.557Z
        packing_slip_format: a4_pdf
        enable_customs: false
        shipment_template_id: 710
        order_note: Note
        use_item_weight: true
        archived: false
        bookkeeping_integration_id: 241
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
          mobile: "70400407"
          attention: Lene Hansen
          vat_id: GB018384932372
          telephone: "70400407"
          email: info@minvirksomhed.dk
        order_lines:
        - quantity: 2
          item_sku: TS001-WH
          discount_amount_excluding_vat: "0.0"
          image_url: http://example.com/image
          item_name: T-Shirt
          currency_code: DKK
          item_bin: AB-001
          customs_commodity_code: "123456"
          line_type: item
          vat_percent: "0.25"
          customs_description: Example contents
          country_code_of_origin: DK
          unit_weight: 2000
          item_barcode: "12345678"
          item_variant_code: White
          unit_price_excluding_vat: "800.0"
          cost_price: "50.0"
        - quantity: 2
          item_sku: TS001-WH
          discount_amount_excluding_vat: "0.0"
          image_url: http://example.com/image
          item_name: T-Shirt
          currency_code: DKK
          item_bin: AB-001
          customs_commodity_code: "123456"
          line_type: item
          vat_percent: "0.25"
          customs_description: Example contents
          country_code_of_origin: DK
          unit_weight: 2000
          item_barcode: "12345678"
          item_variant_code: White
          unit_price_excluding_vat: "800.0"
          cost_price: "50.0"
        return_shipment_template_id: 710
        order_id: "27000"
        source_name: Testcompany ApS
        ship_to:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          instruction: Place on the front porch.
          name: Lene Hansen
          mobile: "12345678"
          attention: attention
          telephone: "12345678"
          email: lene@email.dk
        sales_order_packaging_id: 11242
        service_point:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Paaskeløkkevej 11
          name: Påskeløkkens Købmand
          id: "95558"
      properties:
        order_id:
          description: Order ID for the sales order.
          example: "27000"
          type: string
        ordered_at:
          description: ISO 8601 datetime the sales order was placed.
          example: 2018-10-17T13:25:44.557Z
          format: date-time
          type: string
        source_name:
          description: Name of the source for the sales order.
          example: Testcompany ApS
          type: string
        order_note:
          description: A note for the sales order.
          example: Note
          type: string
        archived:
          default: false
          description: Defines whether or not the sales order is archived.
          type: boolean
        shipment_template_id:
          description: ID of the provided shipment template. Specifies the product
            and services for the order
          example: 710
          type: integer
        return_shipment_template_id:
          description: ID of the provided return shipment template. Specifies the
            return product and services for the sales order.
          example: 710
          type: integer
        sales_order_packaging_id:
          description: ID of the provided sales order packaging. The packaging specifies
            the dimensions for the order.
          example: 11242
          type: integer
        bookkeeping_integration_id:
          description: ID of the provided bookkeeping integration. Allows the user
            to create invoices from the order.
          example: 241
          type: integer
        packing_slip_format:
          description: "If packing_slip_format is specified, the packing slips will\
            \ be included in the response."
          enum:
          - a4_pdf
          - 10x19_pdf
          type: string
          example: null
        enable_customs:
          default: false
          description: Defines if order should use customs information from the associated
            item when creating shipments.
          type: boolean
        use_item_weight:
          default: true
          description: Defines if item weight should be used when creating shipments.
          type: boolean
        ship_to:
          $ref: '#/components/schemas/SalesOrderShipToRequest'
        bill_to:
          $ref: '#/components/schemas/SalesOrderBillToRequest'
        sender:
          $ref: '#/components/schemas/SenderRequest'
        payment_details:
          $ref: '#/components/schemas/PaymentDetailsRequest'
        service_point:
          $ref: '#/components/schemas/ServicePointSimple'
        order_lines:
          description: "The order lines describe all the lines for the sales order,\
            \ including items, shipping, and more."
          items:
            $ref: '#/components/schemas/OrderLineRequest'
          type: array
      required:
      - bill_to
      - order_id
      - order_lines
      - payment_details
      - ship_to
      type: object
    CreateFulfillmentRequest:
      example:
        fulfilled_by_third_party: false
        fulfillment_lines:
        - shipped_quantity: "1.0"
          order_line_id: 45891
        - shipped_quantity: "1.0"
          order_line_id: 45891
        order_packaging_id: 16
      properties:
        fulfilled_by_third_party:
          default: false
          description: Defines if fulfillment is fulfilled by a third party.
          type: boolean
        order_packaging_id:
          description: ID of a desired order_packaging. Specifies which order packaging
            to use.
          example: 16
          type: integer
        fulfillment_lines:
          description: Lines to be fulfilled for the sales_order.
          items:
            $ref: '#/components/schemas/CreateFulfillmentRequest_fulfillment_lines_inner'
          type: array
      required:
      - fulfillment_lines
      - order_line_id
      - shipped_quantity
      type: object
    FulfillmentCreated:
      example:
        code: 27000-1
        updated_at: 2017-06-16T06:25:44.557Z
        fulfilled_by_third_party: true
        fulfillment_lines:
        - quantity: "2.0"
          item_id: 1150
          item_sku: shirt_white
          amount_including_vat: "200.0"
          item_name: t-shirt
          currency_code: DKK
          shipped_quantity: 0
          unit_price_including_vat: "100.0"
          vat_amount: "2.0"
          vat_percent: "0.25"
          order_line_id: 45891
          id: 11120
          item_variant_code: white
          unit_price_excluding_vat: "80.0"
          amount_excluding_vat: "160.0"
        - quantity: "2.0"
          item_id: 1150
          item_sku: shirt_white
          amount_including_vat: "200.0"
          item_name: t-shirt
          currency_code: DKK
          shipped_quantity: 0
          unit_price_including_vat: "100.0"
          vat_amount: "2.0"
          vat_percent: "0.25"
          order_line_id: 45891
          id: 11120
          item_variant_code: white
          unit_price_excluding_vat: "80.0"
          amount_excluding_vat: "160.0"
        sales_order_id: 11227
        cancelled: false
        created_at: 2017-06-16T06:25:44.557Z
        id: 11120
        type: outbound
        shipment_id: 14500
        order_packaging_id: 16
      properties:
        id:
          description: Unique identifier of the fulfillment.
          example: 11120
          type: integer
        sales_order_id:
          description: Unique identifier of the related sales order.
          example: 11227
          type: integer
        code:
          description: The generated code for the fulfillment. Generated from the
            related order ID
          example: 27000-1
          type: string
        type:
          description: The type of the fulfillment.
          enum:
          - outbound
          - return
          type: string
        shipment_id:
          description: Unique identifier of the created shipment.
          example: 14500
          type: integer
        fulfilled_by_third_party:
          default: true
          description: Defines if fulfillment is fulfilled by a third party.
          type: boolean
        order_packaging_id:
          description: ID of a desired order_packaging. Specifies which order packaging
            that has been used.
          example: 16
          type: integer
        cancelled:
          default: false
          description: Defines if fulfillment is cancelled.
          type: boolean
        created_at:
          description: ISO 8601 datetime the object was created.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        updated_at:
          description: ISO 8601 datetime when the object was updated.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        fulfillment_lines:
          description: fulfillment_lines associated with the fulfillment. Based on
            provided order_lines
          items:
            $ref: '#/components/schemas/FulfillmentCreated_fulfillment_lines_inner'
          type: array
      type: object
    PaymentDetailsRequest:
      example:
        transaction_id: "123456789"
        vat_amount: "400.0"
        vat_percent: "0.25"
        amount_including_vat: "2000.0"
        authorized_amount: "2000.0"
        amount_excluding_vat: "1600.0"
        currency_code: DKK
        payment_method: quickpay
        payment_gateway_id: "4012"
      properties:
        amount_excluding_vat:
          description: Total price excluding taxes of the sales order.
          example: "1600.0"
          type: string
        amount_including_vat:
          description: Total price including taxes of the sales order.
          example: "2000.0"
          type: string
        authorized_amount:
          description: The amount authorized by the payment gateway.
          example: "2000.0"
          type: string
        currency_code:
          description: ISO 4217 currency code of the order total.
          example: DKK
          type: string
        vat_amount:
          description: Total amount of taxes for the order.
          example: "400.0"
          type: string
        vat_percent:
          description: Average tax percentage.
          example: "0.25"
          type: string
        payment_method:
          description: The method by which the order was paid.
          example: quickpay
          type: string
        transaction_id:
          description: Transaction ID of the payment as specified by the associated
            payment gateway.
          example: "123456789"
          type: string
        payment_gateway_id:
          description: ID of the provided payment gateway. Used to capture and void
            payments from Shipmondo.
          example: "4012"
          type: string
      required:
      - amount_including_vat
      - currency_code
      - vat_amount
      type: object
    PaymentDetails:
      example:
        transaction_id: "123456789"
        vat_amount: "400.0"
        vat_percent: "0.25"
        amount_including_vat: "2000.0"
        authorized_amount: "2000.0"
        amount_excluding_vat: "1600.0"
        currency_code: DKK
        payment_method: quickpay
        payment_gateway_id: "4012"
      properties:
        amount_excluding_vat:
          description: Total price excluding taxes of the sales order.
          example: "1600.0"
          type: string
        amount_including_vat:
          description: Total price including taxes of the sales order.
          example: "2000.0"
          type: string
        authorized_amount:
          description: The amount authorized by the payment gateway.
          example: "2000.0"
          type: string
        currency_code:
          description: ISO 4217 currency code of the order total.
          example: DKK
          type: string
        vat_amount:
          description: Total amount of taxes for the order.
          example: "400.0"
          type: string
        vat_percent:
          description: Average tax percentage.
          example: "0.25"
          type: string
        payment_method:
          description: The method by which the order was paid.
          example: quickpay
          type: string
        transaction_id:
          description: Transaction ID of the payment as specified by the associated
            payment gateway.
          example: "123456789"
          type: string
        payment_gateway_id:
          description: ID of the provided payment gateway. Used to capture and void
            payments from Shipmondo.
          example: "4012"
          type: string
      type: object
    SalesOrderBillTo:
      description: Billing address for the sales order. Used when creating invoices
        for associated bookkeeping integration.
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        name: Lene Hansen
        mobile: "12345678"
        attention: attention
        telephone: "12345678"
        email: lene@email.dk
      properties:
        name:
          description: Name of the receiver. Can be either a company name or the name
            of a private person.
          example: Lene Hansen
          type: string
        attention:
          description: "Attention of the receiver. If the receiver is a company, it\
            \ is the contact person."
          type: string
          example: null
        address1:
          description: "Address of the receiver, including address number."
          example: Skibhusvej 52
          type: string
        address2:
          description: "Second address line of the receiver. Can be used for, e.g.,apartment\
            \ number."
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5000"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the receiver address.
          example: DK
          type: string
        email:
          description: Email address of the receiver
          example: lene@email.dk
          type: string
        mobile:
          description: Mobile number of the receiver
          example: "12345678"
          type: string
        telephone:
          description: Landline phone number of the receiver
          example: "12345678"
          type: string
      type: object
    SalesOrderBillToRequest:
      description: Billing address for the sales order. Used when creating invoices
        for associated bookkeeping integration.
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        name: Lene Hansen
        mobile: "12345678"
        attention: attention
        telephone: "12345678"
        email: lene@email.dk
      properties:
        name:
          description: Name of the receiver. Can be either a company name or the name
            of a private person.
          example: Lene Hansen
          type: string
        attention:
          description: "Attention of the receiver. If the receiver is a company, it\
            \ is the contact person."
          type: string
          example: null
        address1:
          description: "Address of the receiver, including address number."
          example: Skibhusvej 52
          type: string
        address2:
          description: "Second address line of the receiver. Can be used for, e.g.,apartment\
            \ number."
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5000"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the receiver address.
          example: DK
          type: string
        email:
          description: Email address of the receiver
          example: lene@email.dk
          type: string
        mobile:
          description: Mobile number of the receiver
          example: "12345678"
          type: string
        telephone:
          description: Landline phone number of the receiver
          example: "12345678"
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    SalesOrderShipTo:
      description: Shipping address for the sales order. Used as address when creating
        shipments.
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        instruction: Place on the front porch.
        name: Lene Hansen
        mobile: "12345678"
        attention: attention
        telephone: "12345678"
        email: lene@email.dk
      properties:
        name:
          description: Name of the receiver. Can be either a company name or the name
            of a private person.
          example: Lene Hansen
          type: string
        attention:
          description: "Attention of the receiver. If the receiver is a company, it\
            \ is the contact person."
          type: string
          example: null
        address1:
          description: "Address of the receiver, including address number."
          example: Skibhusvej 52
          type: string
        address2:
          description: "Second address line of the receiver. Can be used for, e.g.,apartment\
            \ number."
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5000"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the receiver address.
          example: DK
          type: string
        email:
          description: Email address of the receiver
          example: lene@email.dk
          type: string
        mobile:
          description: Mobile number of the receiver
          example: "12345678"
          type: string
        telephone:
          description: Landline phone number of the receiver
          example: "12345678"
          type: string
        instruction:
          description: Delivery instruction to the carrier. Only applicable for products
            which support receiver instructions.
          example: Place on the front porch.
          type: string
      type: object
    SalesOrderShipToRequest:
      description: Shipping address for the sales order. Used as address when creating
        shipments.
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        instruction: Place on the front porch.
        name: Lene Hansen
        mobile: "12345678"
        attention: attention
        telephone: "12345678"
        email: lene@email.dk
      properties:
        name:
          description: Name of the receiver. Can be either a company name or the name
            of a private person.
          example: Lene Hansen
          type: string
        attention:
          description: "Attention of the receiver. If the receiver is a company, it\
            \ is the contact person."
          type: string
          example: null
        address1:
          description: "Address of the receiver, including address number."
          example: Skibhusvej 52
          type: string
        address2:
          description: "Second address line of the receiver. Can be used for, e.g.,apartment\
            \ number."
          type: string
          example: null
        zipcode:
          description: Zip code of the address.
          example: "5000"
          type: string
        city:
          description: Name of the city that the zip code refers to.
          example: Odense C
          type: string
        country_code:
          description: ISO 3166-1 alpha-2 country code of the receiver address.
          example: DK
          type: string
        email:
          description: Email address of the receiver
          example: lene@email.dk
          type: string
        mobile:
          description: Mobile number of the receiver
          example: "12345678"
          type: string
        telephone:
          description: Landline phone number of the receiver
          example: "12345678"
          type: string
        instruction:
          description: Delivery instruction to the carrier. Only applicable for products
            which support receiver instructions.
          example: Place on the front porch.
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    UpdateSalesOrderNote:
      example:
        order_note: Note
      properties:
        order_note:
          description: A note for the sales order.
          example: Note
          type: string
      type: object
    ProcessSalesOrderBarcode:
      example:
        barcode: QB000000027000
      properties:
        barcode:
          description: "The barcode is a 14-character string, prefixed with 'QB'.\
            \ It contains the ID of the sales order, and extended to 14 characters\
            \ with zeroes."
          example: QB000000027000
          type: string
      type: object
    UpdateSalesOrderRequest:
      example:
        use_item_weight: true
        bill_to:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
          mobile: "12345678"
          attention: attention
          telephone: "12345678"
          email: lene@email.dk
        order_status: open
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
          mobile: "70400407"
          attention: Lene Hansen
          telephone: "70400407"
          email: info@minvirksomhed.dk
        order_lines:
        - quantity: 2
          vat_percent: "0.25"
          id: 1234
          unit_weight: 2000
          unit_price_excluding_vat: "800.0"
        - quantity: 2
          vat_percent: "0.25"
          id: 1234
          unit_weight: 2000
          unit_price_excluding_vat: "800.0"
        enable_customs: false
        return_shipment_template_id: 710
        shipment_template_id: 710
        ship_to:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          instruction: Place on the front porch.
          name: Lene Hansen
          mobile: "12345678"
          attention: attention
          telephone: "12345678"
          email: lene@email.dk
        sales_order_packaging_id: 11242
        service_point:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Paaskeløkkevej 11
          name: Påskeløkkens Købmand
          id: "95558"
      properties:
        shipment_template_id:
          description: ID of the provided shipment template. Specifies the product
            and services for the order.
          example: 710
          type: integer
        return_shipment_template_id:
          description: ID of the provided return shipment template. Specifies the
            return product and services for the sales order.
          example: 710
          type: integer
        sales_order_packaging_id:
          description: ID of the provided sales order packaging. The packaging specifies
            the dimensions for the sales order.
          example: 11242
          type: integer
        order_status:
          description: "The status of the order in Shipmondo. Possible values: open,\
            \ cancelled, on-hold"
          example: open
          type: string
        enable_customs:
          default: false
          description: Defines if order should use customs information from the associated
            item when creating shipments.
          type: boolean
        use_item_weight:
          default: true
          description: Defines if item weight should be used when creating shipments.
          type: boolean
        ship_to:
          $ref: '#/components/schemas/SalesOrderShipToRequest'
        bill_to:
          $ref: '#/components/schemas/SalesOrderBillToRequest'
        sender:
          $ref: '#/components/schemas/Sender'
        service_point:
          $ref: '#/components/schemas/ServicePointSimple'
        order_lines:
          description: "Order lines for the order. If an order line ID is provided,\
            \ it will update the existing line, otherwise a new line will be created.\
            \ To remove an existing line, set the quantity to 0 when updating. Below\
            \ are only updatable properties, see POST /sales_orders for create new\
            \ order_line properties."
          items:
            $ref: '#/components/schemas/OrderLineUpdate'
          type: array
      type: object
    OrderLine:
      example:
        quantity: "2.0"
        item_sku: TS001-WH
        discount_amount_excluding_vat: "0.0"
        image_url: http://example.com/image
        amount_including_vat: "2000.0"
        item_name: T-Shirt
        currency_code: DKK
        item_bin: AB-001
        customs_commodity_code: "123456"
        shipped_quantity: "0.0"
        vat_amount: "400.0"
        line_type: item
        vat_percent: "0.25"
        customs_description: Example contents
        id: 1234
        country_code_of_origin: DK
        item_barcode: "12345678"
        unit_weight: 2000
        item_variant_code: White
        unit_price_excluding_vat: "800.0"
        amount_excluding_vat: "1600.0"
        cost_price: "50.0"
      properties:
        id:
          description: Unique identifier of the object.
          example: 1234
          type: integer
        line_type:
          description: Specificies the type of line.
          enum:
          - item
          - shipping
          - discount
          - gift_card
          - payment_fee
          example: item
          type: string
        item_sku:
          description: Stock keeping unit (SKU) of the item
          example: TS001-WH
          type: string
        item_variant_code:
          description: Variant code of the item
          example: White
          type: string
        item_name:
          description: Name of the item
          example: T-Shirt
          type: string
        quantity:
          description: The quantity of the item in the sales order
          example: "2.0"
          type: string
        unit_price_excluding_vat:
          description: Price excluding taxes of a single item in the order line
          example: "800.0"
          type: string
        discount_amount_excluding_vat:
          description: Total discount of the items in the order line
          example: "0.0"
          type: string
        amount_excluding_vat:
          description: Total price excluding taxes for the order line
          example: "1600.0"
          type: string
        amount_including_vat:
          description: Total price including taxes for the order line
          example: "2000.0"
          type: string
        vat_amount:
          description: Total tax amount for the order line
          example: "400.0"
          type: string
        vat_percent:
          description: Tax percentage for the order line
          example: "0.25"
          type: string
        currency_code:
          description: ISO 4217 currency code
          example: DKK
          type: string
        item_barcode:
          description: Barcode of the item. Used when scanning item for pick.
          example: "12345678"
          type: string
        item_bin:
          description: The bin/location where the item is located in the warehouse.
          example: AB-001
          type: string
        shipped_quantity:
          description: The quantity of the item that has been shipped/fulfilled.
          example: "0.0"
          type: string
        unit_weight:
          description: The weight of a single item in the order line.
          example: 2000
          type: integer
        image_url:
          description: Image URL of the item that appears on the order or when picking.
            Will only be displayed if the URL is HTTPS.
          example: http://example.com/image
          type: string
        cost_price:
          description: Unit cost price of the item as used for customs.
          example: "50.0"
          type: string
        country_code_of_origin:
          description: ISO 3166-1 alpha-2 country code of origin.
          example: DK
          type: string
        customs_commodity_code:
          description: Tariff code for the item. Used when creating shipments that
            require customs declaration.
          example: "123456"
          type: string
        customs_description:
          description: Customs description for the item. Used when creating shipments
            that require customs declaration.
          example: Example contents
          type: string
      type: object
    OrderLineRequest:
      example:
        quantity: 2
        item_sku: TS001-WH
        discount_amount_excluding_vat: "0.0"
        image_url: http://example.com/image
        item_name: T-Shirt
        currency_code: DKK
        item_bin: AB-001
        customs_commodity_code: "123456"
        line_type: item
        vat_percent: "0.25"
        customs_description: Example contents
        country_code_of_origin: DK
        unit_weight: 2000
        item_barcode: "12345678"
        item_variant_code: White
        unit_price_excluding_vat: "800.0"
        cost_price: "50.0"
      properties:
        line_type:
          description: Specificies the type of line.
          enum:
          - item
          - shipping
          - discount
          - gift_card
          - payment_fee
          example: item
          type: string
        item_name:
          description: Name of the item
          example: T-Shirt
          type: string
        item_sku:
          description: Stock keeping unit (SKU) of the item
          example: TS001-WH
          type: string
        item_variant_code:
          description: Variant code of the item
          example: White
          type: string
        quantity:
          description: The quantity of the item in the order
          example: 2
          type: number
        unit_price_excluding_vat:
          description: Price excluding taxes of a single item in the order line
          example: "800.0"
          type: string
        discount_amount_excluding_vat:
          description: Total discount of the items in the order line
          example: "0.0"
          type: string
        vat_percent:
          description: Tax percentage for the order line
          example: "0.25"
          type: string
        currency_code:
          description: ISO 4217 currency code
          example: DKK
          type: string
        unit_weight:
          description: The weight of a single item in the order line.
          example: 2000
          type: integer
        item_barcode:
          description: Barcode of the item. Used when scanning item for pick.
          example: "12345678"
          type: string
        item_bin:
          description: The bin/location where the item is located in the warehouse.
          example: AB-001
          type: string
        image_url:
          description: Image URL of the item that appears on the order or when picking.
            Will only be displayed if the URL is HTTPS.
          example: http://example.com/image
          type: string
        cost_price:
          description: Unit cost price of the item as used for customs.
          example: "50.0"
          type: string
        country_code_of_origin:
          description: ISO 3166-1 alpha-2 country code of origin.
          example: DK
          type: string
        customs_commodity_code:
          description: Tariff code for the item. Used when creating shipments that
            require customs declaration.
          example: "123456"
          type: string
        customs_description:
          description: Customs description for the item. Used when creating shipments
            that require customs declaration.
          example: Example contents
          type: string
      required:
      - currency_code
      - item_name
      - line_type
      - quantity
      type: object
    OrderLineUpdate:
      example:
        quantity: 2
        vat_percent: "0.25"
        id: 1234
        unit_weight: 2000
        unit_price_excluding_vat: "800.0"
      properties:
        id:
          description: Unique identifier of the object. Used for identifying the specific
            line when updating order lines.
          example: 1234
          type: integer
        quantity:
          description: The quantity of the item in the order
          example: 2
          type: number
        unit_price_excluding_vat:
          description: Price excluding taxes of a single item in the order line
          example: "800.0"
          type: string
        vat_percent:
          description: Tax percentage for the order line
          example: "0.25"
          type: string
        unit_weight:
          description: The weight of a single item in the order line.
          example: 2000
          type: integer
      type: object
    Fulfillment:
      example:
        code: 27000-1
        updated_at: 2017-06-16T06:25:44.557Z
        fulfilled_by_third_party: false
        fulfillment_lines:
        - shipped_quantity: "1.0"
          order_line_id: 45891
          id: 3242
        - shipped_quantity: "1.0"
          order_line_id: 45891
          id: 3242
        cancelled: false
        created_at: 2017-06-16T06:25:44.557Z
        id: 6684
        type: outbound
        shipment_id: 14500
        order_packaging_id: 16
      properties:
        id:
          description: The generated id for the fulfillment.
          example: 6684
          type: integer
        code:
          description: The generated code for the fulfillment. Generated from the
            provided order ID
          example: 27000-1
          type: string
        type:
          description: The type of the fulfillment.
          enum:
          - outbound
          - return
          type: string
        shipment_id:
          description: Unique identifier of the created shipment.
          example: 14500
          type: integer
        fulfilled_by_third_party:
          description: Defines if fulfillment is fulfilled by a third party.
          example: false
          type: boolean
        order_packaging_id:
          description: Specifies which order packaging that has been used.
          example: 16
          type: integer
        cancelled:
          description: Defines if fulfillment is cancelled.
          example: false
          type: boolean
        created_at:
          description: ISO 8601 datetime the object was created.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        updated_at:
          description: ISO 8601 datetime when the object was updated.
          example: 2017-06-16T06:25:44.557Z
          format: date-time
          type: string
        fulfillment_lines:
          description: Fulfilled lines for the sales_order.
          items:
            $ref: '#/components/schemas/Fulfillment_fulfillment_lines_inner'
          type: array
      type: object
    PaymentGateway:
      example:
        provider: quick_pay
        name: QuickPay 1
        id: 5314
        merchant_number: "12345678"
      properties:
        id:
          description: Unique identifier of the object.
          example: 5314
          type: integer
        name:
          description: User-specified name of the payment gateway.
          example: QuickPay 1
          type: string
        provider:
          description: Specific code of the gateway used to refer to the provider.
          enum:
          - epay
          - quick_pay
          - stripe
          - yourpay
          - penso_pay
          - dibs
          - on_pay
          - reepay
          - klarna
          - shopify_payments
          - paypal
          - dibs_easy
          - paylike
          - bambora_checkout
          - anyday
          - freepay
          - swiipe
          - shipmondo_payments
          - vipps
          example: quick_pay
          type: string
        merchant_number:
          description: Mechant number of the payment gateway.
          example: "12345678"
          type: string
      type: object
    Document:
      example:
        base64: JVBERi0xLjMKJf//////AAAAAA...
      properties:
        base64:
          description: PDF file of the document in Base64 format.
          example: JVBERi0xLjMKJf//////AAAAAA...
          type: string
      type: object
    Waybill:
      example:
        delivery:
          zipcode: "0273"
          country_code: "NO"
          address2: address2
          city: Oslo
          address1: Olav Kyrres gate 7
          name: Lene Hansen
        shipment:
          label_base64: '...'
          id: 123456
        receiver:
          zipcode: "0273"
          country_code: "NO"
          address2: address2
          city: Oslo
          address1: Olav Kyrres gate 7
          name: Lene Hansen
        customer_number: "123456789"
        base64: '...'
        created_at: 2018-06-16T06:25:44.557Z
        loading:
          zipcode: "5000"
          date: 2019-01-30T13:54:29Z
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
        reference: CS000000000NO
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
        invoice_base64: '...'
        id: 23
        status: closed
        carrier_code: bring
      properties:
        id:
          description: ID of the waybill. Used when referencing a specific waybill.
          example: 23
          type: integer
        reference:
          description: Carrier's reference of the waybill.
          example: CS000000000NO
          type: string
        status:
          description: "Current status of the waybill. If open, more shipments can\
            \ be added to the waybill."
          enum:
          - open
          - closed
          example: closed
          type: string
        carrier_code:
          description: "Carrier code, identifying which carrier the waybill is created\
            \ for."
          example: bring
          type: string
        customer_number:
          description: The customer number that is attached to the waybill.
          example: "123456789"
          type: string
        created_at:
          description: When the waybill was created.
          example: 2018-06-16T06:25:44.557Z
          format: date-time
          type: string
        sender:
          $ref: '#/components/schemas/Waybill_sender'
        receiver:
          $ref: '#/components/schemas/Waybill_receiver'
        loading:
          $ref: '#/components/schemas/Waybill_loading'
        delivery:
          $ref: '#/components/schemas/Waybill_delivery'
        shipment:
          $ref: '#/components/schemas/Waybill_shipment'
        invoice_base64:
          description: Base64-encoded string of invoice as PDF
          example: '...'
          type: string
        base64:
          description: Base64-encoded string of waybill as PDF
          example: '...'
          type: string
      type: object
    WaybillNoBase64:
      example:
        reference: CS000000000NO
        delivery:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
        shipment:
          id: 123456
        receiver:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
        created_at: 2018-06-16T06:25:44.557Z
        id: 23
        loading:
          zipcode: "5000"
          date: 2019-01-30T13:54:29Z
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
        carrier_code: bring
      properties:
        id:
          example: 23
          type: integer
        reference:
          example: CS000000000NO
          type: string
        carrier_code:
          example: bring
          type: string
        created_at:
          example: 2018-06-16T06:25:44.557Z
          format: date-time
          type: string
        sender:
          $ref: '#/components/schemas/WaybillNoBase64_sender'
        receiver:
          $ref: '#/components/schemas/WaybillNoBase64_receiver'
        loading:
          $ref: '#/components/schemas/WaybillNoBase64_loading'
        delivery:
          $ref: '#/components/schemas/WaybillNoBase64_sender'
        shipment:
          $ref: '#/components/schemas/WaybillNoBase64_shipment'
      type: object
    CreateWaybillRequest:
      example:
        delivery:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
        receiver:
          zipcode: "5000"
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
        customer_number: customer_number
        sender:
          zipcode: "5240"
          country_code: DK
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          name: Min Virksomhed ApS
        loading:
          zipcode: "5000"
          date: 2019-01-30T13:54:29Z
          country_code: DK
          address2: address2
          city: Odense C
          address1: Skibhusvej 52
          name: Lene Hansen
        packages:
        - amount: 3
          weight: 1000
          product_code: BRI_PPB
          package_type: PARCEL
        - amount: 3
          weight: 1000
          product_code: BRI_PPB
          package_type: PARCEL
        carrier_code: bring
        status: closed
      properties:
        carrier_code:
          enum:
          - bring
          - pdk
          example: bring
          type: string
        customer_number:
          description: "Used if you have more than one agreement for the selected\
            \ carrier. If not given, it defaults to the first agreement found."
          type: string
        status:
          default: closed
          enum:
          - open
          - closed
          type: string
        sender:
          $ref: '#/components/schemas/CreateWaybillRequest_sender'
        receiver:
          $ref: '#/components/schemas/CreateWaybillRequest_receiver'
        loading:
          $ref: '#/components/schemas/CreateWaybillRequest_loading'
        delivery:
          $ref: '#/components/schemas/CreateWaybillRequest_delivery'
        packages:
          description: Required if status is set to "closed"
          items:
            $ref: '#/components/schemas/CreateWaybillRequest_packages_inner'
          type: array
      required:
      - carrier_code
      - packages
      - receiver
      - sender
      type: object
    CloseWaybillRequest:
      example:
        packages:
        - amount: 3
          weight: 1000
          product_code: BRI_PPB
          package_type: PARCEL
        - amount: 3
          weight: 1000
          product_code: BRI_PPB
          package_type: PARCEL
      properties:
        packages:
          items:
            $ref: '#/components/schemas/CreateWaybillRequest_packages_inner'
          required:
          - amount
          - package_type
          - product_code
          - weight
          type: array
      required:
      - packages
      type: object
    PickupRequest:
      example:
        confirmation_number: 123C21B215M
        date: 2019-02-13T00:00:00.000+00:00
        ready_by: 2000-01-01T08:00:00Z
        pickup_address:
          zipcode: "5240"
          country_code: DK
          contact_name: Hans Hansen
          contact_phone: "70400407"
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          company_name: Min Virksomhed ApS
        weight: 47000
        shipments:
        - id: 12515122
        - id: 12515122
        closed_by: 2000-01-01T15:00:00Z
        package_location: At the front door.
        number_of_pieces: 3
        is_residential: false
        id: 15242
        carrier_code: ups
        status: confirmed
      properties:
        id:
          description: ID of the pickup request
          example: 15242
          type: integer
        carrier_code:
          description: Carrier code for the carrier the pickup is requested for.
          example: ups
          type: string
        pickup_address:
          $ref: '#/components/schemas/PickupRequest_pickup_address'
        confirmation_number:
          description: Reference number for the pickup request. This should used as
            reference if contacting the carrier about the pickup.
          example: 123C21B215M
          type: string
        status:
          description: Current status of the pickup request.
          enum:
          - unconfirmed
          - confirmed
          - error
          - cancelled
          example: confirmed
          type: string
        date:
          description: Requested pickup date.
          example: 2019-02-13
          format: date
          type: string
        ready_by:
          description: Requested pickup from this time. Ignore the date part of the
            date-time.
          example: 2000-01-01T08:00:00Z
          format: date-time
          type: string
        closed_by:
          description: Requested pickup before this time. Ignore the date part of
            the date-time.
          example: 2000-01-01T15:00:00Z
          format: date-time
          type: string
        package_location:
          description: Where on the address the packages should be picked up.
          example: At the front door.
          type: string
        number_of_pieces:
          description: Number of pieces that should be picked up.
          example: 3
          type: integer
        weight:
          description: Total weight of all shipments in the pickup request.
          example: 47000
          type: integer
        is_residential:
          default: false
          description: Only valid for UPS. Whether or not the pickup address is a
            residential address.
          type: boolean
        shipments:
          description: Shipments that is being picked up.
          items:
            $ref: '#/components/schemas/PickupRequest_shipments_inner'
          type: array
      type: object
    PickupRequestNoShipments:
      example:
        confirmation_number: 123C21B215M
        date: 2019-02-13T00:00:00.000+00:00
        package_location: At the front door.
        number_of_pieces: 3
        ready_by: 2000-01-01T08:00:00Z
        is_residential: false
        pickup_address:
          zipcode: "5240"
          country_code: DK
          contact_name: Hans Hansen
          contact_phone: "70400407"
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          company_name: Min Virksomhed ApS
        weight: 47000
        id: 15242
        carrier_code: ups
        status: confirmed
        closed_by: 2000-01-01T15:00:00Z
      properties:
        id:
          description: ID of the pickup request
          example: 15242
          type: integer
        carrier_code:
          description: Carrier code for the carrier the pickup is requested for.
          example: ups
          type: string
        pickup_address:
          $ref: '#/components/schemas/PickupRequest_pickup_address'
        confirmation_number:
          description: Reference number for the pickup request. This should used as
            reference if contacting the carrier about the pickup.
          example: 123C21B215M
          type: string
        status:
          description: Current status of the pickup request.
          enum:
          - unconfirmed
          - confirmed
          - error
          - cancelled
          example: confirmed
          type: string
        date:
          description: Requested pickup date.
          example: 2019-02-13
          format: date
          type: string
        ready_by:
          description: Requested pickup from this time. Ignore the date part of the
            date-time.
          example: 2000-01-01T08:00:00Z
          format: date-time
          type: string
        closed_by:
          description: Requested pickup before this time. Ignore the date part of
            the date-time.
          example: 2000-01-01T15:00:00Z
          format: date-time
          type: string
        package_location:
          description: Where on the address the packages should be picked up.
          example: At the front door.
          type: string
        number_of_pieces:
          description: Number of pieces that should be picked up.
          example: 3
          type: integer
        weight:
          description: Total weight of all shipments in the pickup request.
          example: 47000
          type: integer
        is_residential:
          default: false
          description: Only valid for UPS. Whether or not the pickup address is a
            residential address.
          type: boolean
      type: object
    CreatePickupRequestRequest:
      example:
        package_location: At the front door
        ready_by: 2019-02-14T08:00:00Z
        is_residential: false
        pickup_address:
          zipcode: "5240"
          country_code: DK
          contact_name: Hans Hansen
          contact_phone: "70400407"
          address2: address2
          city: Odense NØ
          address1: Strandvejen 6B
          company_name: Min Virksomhed ApS
        shipment_ids:
        - 12515122
        - 12515122
        carrier_code: ups
        closed_by: 2019-02-14T15:00:00Z
      properties:
        carrier_code:
          description: Carrier code for the carrier the pickup should be requested
            for.
          enum:
          - fed_ex
          - ups
          - dhl_express
          - geodis
          - dhl_freight_se
          - post_nord
          - bring
          example: ups
          type: string
        pickup_address:
          $ref: '#/components/schemas/CreatePickupRequestRequest_pickup_address'
        package_location:
          description: Where on the address the packages should be picked up.
          example: At the front door
          type: string
        ready_by:
          description: When shipments are ready for pickup. Pickup date is taken from
            the date given here.
          example: 2019-02-14T08:00:00Z
          format: date-time
          type: string
        closed_by:
          description: When shipments should be picked up by. The date part is ignored.
          example: 2019-02-14T15:00:00Z
          format: date-time
          type: string
        shipment_ids:
          description: IDs of the shipments you wish to be picked up.
          items:
            example: 12515122
            type: integer
          type: array
        is_residential:
          default: false
          description: Only used for UPS. Whether the pickup address is residential
            or not.
          type: boolean
      required:
      - carrier_code
      - closed_by
      - package_location
      - pickup_address
      - ready_by
      - shipment_ids
      type: object
    DangerousGood:
      example:
        quantity: 3
        description: "DIESEL FUEL, < 62°C (640K)"
        tunnel_restriction_code: A
        packaging: drums
        class: "3"
        net_weight: 20100
        net_weight_kg: 20.1
        packing_group: III
        un_number: "1202"
        environmentally_hazardous: true
      properties:
        class:
          description: ADR class of the dangerous goods.
          example: "3"
          type: string
        un_number:
          description: UN number of the dangerous goods.
          example: "1202"
          type: string
        net_weight:
          description: Net weight in grams of the dangerous goods. Use either this
            or net_weight_kg.
          example: 20100
          type: integer
        net_weight_kg:
          description: Net weight in kilograms of the dangerous goods. Use either
            this or net_weight.
          example: 20.1
          type: number
        quantity:
          description: Number of pieces of this kind of dangerous goods.
          example: 3
          type: integer
        packaging:
          description: Packaging the dangerous goods are contained in.
          example: drums
          type: string
        description:
          description: Description of the dangerous goods.
          example: "DIESEL FUEL, < 62°C (640K)"
          type: string
        tunnel_restriction_code:
          description: Tunnel restriction code that applies to the dangerous goods.
          example: A
          type: string
        packing_group:
          description: Packing group that applies to the dangerous goods.
          example: III
          type: string
        environmentally_hazardous:
          description: Whether or not the dangerous goods are hazardous to the environment.
          type: boolean
      type: object
    DeclaredValue:
      description: Value of the goods in the parcel. Used in terms of insurance for
        certain carriers.
      example:
        amount: 1250
        currency_code: DKK
      properties:
        amount:
          description: Valued amount.
          example: 1250
          type: number
        currency_code:
          description: Currency code for the currency of the amount.
          example: DKK
          type: string
      type: object
    staff_account:
      example:
        permissions:
        - dashboard
        - orders
        - shipments
        name: Lene Hansen
        id: 27
      properties:
        id:
          description: The identifier for the staff account.
          example: 27
          type: number
        name:
          description: The name of the account.
          example: Lene Hansen
          type: string
        permissions:
          description: A list of permissions the user has for the app
          example:
          - dashboard
          - orders
          - shipments
          items:
            example: dashboard
            type: string
          type: array
      type: object
    QrCode:
      example:
        PDF: "{}"
      properties:
        PDF:
          description: A PDF containing the qr code
          type: object
      type: object
    QrCode2:
      properties:
        qr_codes:
          description: An array containing base64 encoded qr_codes
          example: JVBERi0xLjUKJc/s/+jXy80KMSAwIG9iago8PC9UeXBlL0NhdGFsb2cvUGFnZXMgMiAwIFI(...)PgpzdGFydHhyZWYKMzI0MgolJUVPRgo=
          items:
            type: string
          type: array
        file_format:
          description: The file format for response
          example: pdf
          type: string
      type: object
    account_200_response:
      example:
        city: Odense SØ
        address_1: Hvilehøjvej 25
        address_2: Hvilehøjvej 25
        zip_code: "5220"
        home_page: shipmondo.com
        country_code: DK
        updated_at: 2017-06-18T22:00:00Z
        phone: "70400407"
        billing_email: contact@shipmondo.com
        name: Shipmondo
        attention: John Doe
        email: contact@shipmondo.com
        vat_no: DK36399066
      properties:
        name:
          description: Account name.
          example: Shipmondo
          type: string
        attention:
          description: Associated attention of the account.
          example: John Doe
          type: string
        address_1:
          description: Account address 1.
          example: Hvilehøjvej 25
          type: string
        address_2:
          description: Account address 2.
          example: Hvilehøjvej 25
          type: string
        zip_code:
          description: Account zip code.
          example: "5220"
          type: string
        city:
          description: Account city.
          example: Odense SØ
          type: string
        country_code:
          description: Account country code.
          example: DK
          type: string
        phone:
          description: Account phone number.
          example: "70400407"
          type: string
        email:
          description: Account email.
          example: contact@shipmondo.com
          type: string
        vat_no:
          description: Account vat number.
          example: DK36399066
          type: string
        billing_email:
          description: Account billing email.
          example: contact@shipmondo.com
          type: string
        home_page:
          description: Account home page.
          example: shipmondo.com
          type: string
        updated_at:
          description: Date and time of retrieval of account information.
          example: 2017-06-18T22:00:00Z
          format: date-time
          type: string
      type: object
    account_401_response:
      properties:
        error:
          example: Invalid API User or API Key
          type: string
      required:
      - error
      type: object
    account_balance_get_200_response:
      example:
        amount: 1000.5
        updated_at: 2017-06-18T22:00:00Z
        currency_code: DKK
      properties:
        amount:
          description: Remaining balance on the account.
          example: 1000.5
          type: number
        currency_code:
          description: Currency code of the balance.
          example: DKK
          type: string
        updated_at:
          description: Date and time of retrieval of balance.
          example: 2017-06-18T22:00:00Z
          format: date-time
          type: string
      type: object
    bookkeeping_integrations_get_404_response:
      properties:
        error:
          example: Resource not found
          type: string
      required:
      - error
      type: object
    carriers_get_422_response:
      properties:
        error:
          example: Invalid or not found parameter(s)
          type: string
      required:
      - error
      type: object
    print_jobs_200_response:
      example:
        success: true
      properties:
        success:
          description: Identicates if the creation of print job was successful or
            not
          type: boolean
      type: object
    print_jobs_post_200_response:
      example:
        success: true
      properties:
        success:
          description: Identicates if the creation of print job batch was successful
            or not
          type: boolean
      type: object
    ShippingProduct_customer_numbers_inner:
      example:
        customer_number: 898B91
      properties:
        customer_number:
          example: 898B91
          type: string
      type: object
    CreateShipmentRequest_cod:
      description: "Used for COD (cash on delivery) shipments, when booking with service\
        \ code COD"
      example:
        account_number: "123456789"
        amount: 326
        currency_code: NOK
      properties:
        amount:
          description: The amount to be collected.
          example: 326
          type: number
        currency_code:
          description: Currency code of the amount.
          example: NOK
          type: string
        account_number:
          description: The account number which should receive the amount that has
            been collected.
          example: "123456789"
          type: string
      type: object
    CreateShipmentRequest_dfm:
      description: Special object for extra information when shipping with Danske
        Fragtmænd. Otherwise it can be ignored.
      example:
        insurance_type: A
        insurance_amount: 1000
        dot_type: DO1
        dot_time: 15:00
      properties:
        insurance_type:
          description: Type of insurance to be booked.
          enum:
          - A
          - B
          - C
          - D
          example: A
          type: string
        insurance_amount:
          description: Amount in DKK that should be insured for the shipment.
          example: 1000
          type: number
        dot_type:
          description: Type of DOT used for the shipment.
          enum:
          - DO1
          - DO2
          - DO3
          - DO4
          example: DO1
          type: string
        dot_time:
          description: "Requested time of DOT delivery. Only valid for DO2, DO3 and\
            \ DO4."
          example: 15:00
          format: time
          type: string
      type: object
    CreateShipmentRequest_carrier_insurance:
      description: Object for indicating carrier insurance on the shipment. Only usable
        for specific carriers and when an insurance service code is provided.
      example:
        amount: 1000
        currency_code: DKK
      properties:
        amount:
          description: Amount in the given currency that should be insured for the
            shipment.
          example: 1000
          type: number
        currency_code:
          description: Indicates the currency code for the insured value.
          example: DKK
          type: string
      type: object
    CreateShipmentRequestSimpleWithServicePoint_service_point:
      properties:
        id:
          description: The ID of the service point.
          example: "95558"
          type: string
      type: object
    Shipment_carrier_insurance:
      description: Object for indicating insurance on the shipment. Only usable for
        specific carriers and when an insurance service code is provided.
      example:
        amount: 1000
        currency_code: DKK
      properties:
        amount:
          description: Amount in the given currency that should be insured for the
            shipment.
          example: 1000
          type: number
        currency_code:
          description: Indicates the currency code for the insured value.
          example: DKK
          type: string
      type: object
    PrintJobBatch_print_jobs_inner:
      example:
        label_format: zpl
        printer_name: GK420D
        document_id: 11460
        document_type: shipment
      properties:
        document_id:
          description: Identifier for the provided document_type.
          example: 11460
          type: integer
        document_type:
          description: Type of document that should be printed.
          enum:
          - shipment
          - sales_order
          - fulfillment
          - proforma
          example: shipment
          type: string
        printer_name:
          description: The name of the printer that should be printed on.
          example: GK420D
          type: string
        label_format:
          description: The given format of the print job.
          example: zpl
          type: string
      required:
      - document_id
      - document_type
      - label_format
      - printer_name
      type: object
    ShipmentTemplate_sender:
      example:
        country_code: DK
      properties:
        country_code:
          description: Country code of the sender country.
          example: DK
          type: string
      type: object
    ShipmentTemplate_receiver:
      example:
        country_code: DK
      properties:
        country_code:
          description: Country code for the receiver country.
          example: DK
          type: string
      type: object
    CreateShipmentQuoteResponse_carrier_price:
      description: "Quoted price from carrier, if shipment is on own agreement and\
        \ carrier quote is supported."
      example:
        price: 142.27
        currency_code: NOK
      properties:
        price:
          description: "Quoted price, excluding VAT."
          example: 142.27
          type: number
        currency_code:
          description: "Currency code of the quoted price, as returned by the carrier."
          example: NOK
          type: string
      type: object
    CreateFulfillmentRequest_fulfillment_lines_inner:
      example:
        shipped_quantity: "1.0"
        order_line_id: 45891
      properties:
        order_line_id:
          description: The id of the order_line you wish to fulfill. It has to be
            associated with the sales_order.
          example: 45891
          type: integer
        shipped_quantity:
          description: The quantity of items you wish to ship. Total shipped quantity
            must not be higher than the quantity of items for the order line.
          example: "1.0"
          type: string
      required:
      - order_line_id
      - shipped_quantity
      type: object
    FulfillmentCreated_fulfillment_lines_inner:
      example:
        quantity: "2.0"
        item_id: 1150
        item_sku: shirt_white
        amount_including_vat: "200.0"
        item_name: t-shirt
        currency_code: DKK
        shipped_quantity: 0
        unit_price_including_vat: "100.0"
        vat_amount: "2.0"
        vat_percent: "0.25"
        order_line_id: 45891
        id: 11120
        item_variant_code: white
        unit_price_excluding_vat: "80.0"
        amount_excluding_vat: "160.0"
      properties:
        id:
          description: Unique identifier of the fulfillment_line.
          example: 11120
          type: integer
        item_id:
          description: Unique identifier of the item.
          example: 1150
          type: integer
        item_variant_code:
          description: The varient for the item
          example: white
          type: string
        item_sku:
          description: The sku of the item
          example: shirt_white
          type: string
        item_name:
          description: The name of the item
          example: t-shirt
          type: string
        shipped_quantity:
          description: The quantity of items you wanted to ship
          type: integer
        quantity:
          description: The quantity of the item in the sales order
          example: "2.0"
          type: string
        unit_price_excluding_vat:
          description: "The price of each item, without tax"
          example: "80.0"
          type: string
        unit_price_including_vat:
          description: "The price of each item, with tax"
          example: "100.0"
          type: string
        amount_excluding_vat:
          description: Total price excluding taxes for the order line
          example: "160.0"
          type: string
        amount_including_vat:
          description: Total price including taxes for the order line
          example: "200.0"
          type: string
        vat_amount:
          description: Total tax amount for the fulfillment line
          example: "2.0"
          type: string
        vat_percent:
          description: Average tax percentage.
          example: "0.25"
          type: string
        currency_code:
          description: ISO 4217 currency code of the order total.
          example: DKK
          type: string
        order_line_id:
          description: The ID of the related order_line
          example: 45891
          type: integer
      type: object
    Fulfillment_fulfillment_lines_inner:
      example:
        shipped_quantity: "1.0"
        order_line_id: 45891
        id: 3242
      properties:
        id:
          description: Unique identifier of the object.
          example: 3242
          type: integer
        order_line_id:
          description: The id of the fulfilled order_line.
          example: 45891
          type: integer
        shipped_quantity:
          description: The quantity of items fulfilled.
          example: "1.0"
          type: string
      type: object
    Waybill_sender:
      description: Information regarding the sender on the waybill.
      example:
        zipcode: "5240"
        country_code: DK
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        name: Min Virksomhed ApS
      properties:
        name:
          example: Min Virksomhed ApS
          type: string
        address1:
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5240"
          type: string
        city:
          example: Odense NØ
          type: string
        country_code:
          example: DK
          type: string
      type: object
    Waybill_receiver:
      description: Information regarding the receiver on the waybill.
      example:
        zipcode: "0273"
        country_code: "NO"
        address2: address2
        city: Oslo
        address1: Olav Kyrres gate 7
        name: Lene Hansen
      properties:
        name:
          example: Lene Hansen
          type: string
        address1:
          example: Olav Kyrres gate 7
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "0273"
          type: string
        city:
          example: Oslo
          type: string
        country_code:
          example: "NO"
          type: string
      type: object
    Waybill_loading:
      description: Information regarding the loading place on the waybill.
      example:
        zipcode: "5000"
        date: 2019-01-30T13:54:29Z
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        name: Lene Hansen
      properties:
        name:
          example: Lene Hansen
          type: string
        address1:
          example: Skibhusvej 52
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5000"
          type: string
        city:
          example: Odense C
          type: string
        country_code:
          example: DK
          type: string
        date:
          example: 2019-01-30T13:54:29Z
          format: date-time
          type: string
      type: object
    Waybill_delivery:
      description: Information regarding the delivery place on the waybill.
      example:
        zipcode: "0273"
        country_code: "NO"
        address2: address2
        city: Oslo
        address1: Olav Kyrres gate 7
        name: Lene Hansen
      properties:
        name:
          example: Lene Hansen
          type: string
        address1:
          example: Olav Kyrres gate 7
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "0273"
          type: string
        city:
          example: Oslo
          type: string
        country_code:
          example: "NO"
          type: string
      type: object
    Waybill_shipment:
      description: Shipment that contains the routing labels.
      example:
        label_base64: '...'
        id: 123456
      properties:
        id:
          example: 123456
          type: integer
        label_base64:
          description: Base64-encoded string of the routing labels as PDF.
          example: '...'
          type: string
      type: object
    WaybillNoBase64_sender:
      example:
        zipcode: "5240"
        country_code: DK
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        name: Min Virksomhed ApS
      properties:
        name:
          example: Min Virksomhed ApS
          type: string
        address1:
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5240"
          type: string
        city:
          example: Odense NØ
          type: string
        country_code:
          example: DK
          type: string
      type: object
    WaybillNoBase64_receiver:
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        name: Lene Hansen
      properties:
        name:
          example: Lene Hansen
          type: string
        address1:
          example: Skibhusvej 52
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5000"
          type: string
        city:
          example: Odense C
          type: string
        country_code:
          example: DK
          type: string
      type: object
    WaybillNoBase64_loading:
      example:
        zipcode: "5000"
        date: 2019-01-30T13:54:29Z
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        name: Lene Hansen
      properties:
        name:
          example: Lene Hansen
          type: string
        address1:
          example: Skibhusvej 52
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5000"
          type: string
        city:
          example: Odense C
          type: string
        country_code:
          example: DK
          type: string
        date:
          example: 2019-01-30T13:54:29Z
          format: date-time
          type: string
      type: object
    WaybillNoBase64_shipment:
      example:
        id: 123456
      properties:
        id:
          example: 123456
          type: integer
      type: object
    CreateWaybillRequest_sender:
      description: Required
      example:
        zipcode: "5240"
        country_code: DK
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        name: Min Virksomhed ApS
      properties:
        name:
          example: Min Virksomhed ApS
          type: string
        address1:
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5240"
          type: string
        city:
          example: Odense NØ
          type: string
        country_code:
          example: DK
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    CreateWaybillRequest_receiver:
      description: Required
      example:
        zipcode: "5000"
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        name: Lene Hansen
      properties:
        name:
          example: Lene Hansen
          type: string
        address1:
          example: Skibhusvej 52
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5000"
          type: string
        city:
          example: Odense C
          type: string
        country_code:
          example: DK
          type: string
      required:
      - address1
      - city
      - country_code
      - name
      - zipcode
      type: object
    CreateWaybillRequest_loading:
      description: "Optional, except date if carrier is Bring. If no fields are included\
        \ receiver is copied"
      example:
        zipcode: "5000"
        date: 2019-01-30T13:54:29Z
        country_code: DK
        address2: address2
        city: Odense C
        address1: Skibhusvej 52
        name: Lene Hansen
      properties:
        name:
          example: Lene Hansen
          type: string
        address1:
          example: Skibhusvej 52
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5000"
          type: string
        city:
          example: Odense C
          type: string
        country_code:
          example: DK
          type: string
        date:
          example: 2019-01-30T13:54:29Z
          format: date-time
          type: string
      type: object
    CreateWaybillRequest_delivery:
      description: |-
        Optional. If all fields are not included sender is copied to
        these fields
      example:
        zipcode: "5240"
        country_code: DK
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        name: Min Virksomhed ApS
      properties:
        name:
          example: Min Virksomhed ApS
          type: string
        address1:
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5240"
          type: string
        city:
          example: Odense NØ
          type: string
        country_code:
          example: DK
          type: string
      type: object
    CreateWaybillRequest_packages_inner:
      example:
        amount: 3
        weight: 1000
        product_code: BRI_PPB
        package_type: PARCEL
      properties:
        product_code:
          description: "Product code of the parcels that the pallet contains. If pallets\
            \ contain multiple products, the codes must be comma-separated, e.g.,\
            \ \"PDK_M,PDK_BP\"."
          enum:
          - BRI_PPB
          - BRI_BPB
          - PDK_BP
          - PDK_M
          - PDK_TB
          - PDK_PL
          example: BRI_PPB
          type: string
        package_type:
          description: Type of pallet. Determines whether it is a pallet for individual
            parcel shipments or the shipment is the pallet itself.
          enum:
          - PARCEL
          - PALLET
          example: PARCEL
          type: string
        amount:
          description: "PARCEL: The amount of parcels in the pallet. PALLET: x amount\
            \ of pallets. This is be split into x routing labels."
          example: 3
          type: integer
        weight:
          description: Total weight of the pallet/parcels in grams
          example: 1000
          type: integer
      type: object
    PickupRequest_pickup_address:
      description: Address where the shipments will be picked up from.
      example:
        zipcode: "5240"
        country_code: DK
        contact_name: Hans Hansen
        contact_phone: "70400407"
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        company_name: Min Virksomhed ApS
      properties:
        company_name:
          example: Min Virksomhed ApS
          type: string
        address1:
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5240"
          type: string
        city:
          example: Odense NØ
          type: string
        country_code:
          example: DK
          type: string
        contact_name:
          description: Name of the person that the carrier will contact about the
            pickup.
          example: Hans Hansen
          type: string
        contact_phone:
          description: Phone number of the person that the carrier will contact about
            the pickup.
          example: "70400407"
          type: string
      type: object
    PickupRequest_shipments_inner:
      example:
        id: 12515122
      properties:
        id:
          example: 12515122
          type: integer
      type: object
    CreatePickupRequestRequest_pickup_address:
      description: Address where the shipments should be picked up from.
      example:
        zipcode: "5240"
        country_code: DK
        contact_name: Hans Hansen
        contact_phone: "70400407"
        address2: address2
        city: Odense NØ
        address1: Strandvejen 6B
        company_name: Min Virksomhed ApS
      properties:
        company_name:
          example: Min Virksomhed ApS
          type: string
        address1:
          example: Strandvejen 6B
          type: string
        address2:
          type: string
          example: null
        zipcode:
          example: "5240"
          type: string
        city:
          example: Odense NØ
          type: string
        country_code:
          example: DK
          type: string
        contact_name:
          description: Name of the person that the carrier should contact about the
            pickup.
          example: Hans Hansen
          type: string
        contact_phone:
          description: Phone number of the person that the carrier should contact
            about the pickup.
          example: "70400407"
          type: string
      required:
      - address1
      - city
      - company_name
      - contact_name
      - contact_phone
      - country_code
      - zipcode
      type: object
  securitySchemes:
    basicAuth:
      description: "\n      The API credential must be passed through every request\
        \ by using [HTTP Basic Authentication technique](https://en.wikipedia.org/wiki/Basic_access_authentication#Client_side).\
        \ The credential consists of an API username and API key. You can achieved\
        \ them through a Shipmondo account, under [Settings > API](https://app.shipmondo.com/main/app/#/setting/api).\n\
        \n\n\n      For example, if you have Aladdin as the username and OpenSesame\
        \ as the password, then the field's value is the base64-encoding of *Aladdin:OpenSesame*,\
        \ or *QWxhZGRpbjpPcGVuU2VzYW1l*. Then the Authorization header will appear\
        \ as *Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l*\n\n\n\n      Your API\
        \ credentials usually look like this:\n\n\n\n      Username (API User): *d8fb61fe-0a4f-4e11-81f8-6efd3513bd43*\n\
        \      Password (API Key): *976ff6f2-3528-4f4f-9e7d-007e9a074037*\n      "
      scheme: basic
      type: http

