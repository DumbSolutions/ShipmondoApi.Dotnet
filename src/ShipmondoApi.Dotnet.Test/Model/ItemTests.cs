/*
 * Shipmondo API
 *
 * A unofficial thirdparty library for shipmondo api for dotnet
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ShipmondoApi.Dotnet.Model;
using ShipmondoApi.Dotnet.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ShipmondoApi.Dotnet.Test.Model
{
    /// <summary>
    ///  Class for testing Item
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ItemTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Item
        //private Item instance;

        public ItemTests()
        {
            // TODO uncomment below to create an instance of Item
            //instance = new Item();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Item
        /// </summary>
        [Fact]
        public void ItemInstanceTest()
        {
            // TODO uncomment below to test "IsType" Item
            //Assert.IsType<Item>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Sku'
        /// </summary>
        [Fact]
        public void SkuTest()
        {
            // TODO unit test for the property 'Sku'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'VariantCode'
        /// </summary>
        [Fact]
        public void VariantCodeTest()
        {
            // TODO unit test for the property 'VariantCode'
        }
        /// <summary>
        /// Test the property 'Barcode'
        /// </summary>
        [Fact]
        public void BarcodeTest()
        {
            // TODO unit test for the property 'Barcode'
        }
        /// <summary>
        /// Test the property 'Bin'
        /// </summary>
        [Fact]
        public void BinTest()
        {
            // TODO unit test for the property 'Bin'
        }
        /// <summary>
        /// Test the property 'Weight'
        /// </summary>
        [Fact]
        public void WeightTest()
        {
            // TODO unit test for the property 'Weight'
        }
        /// <summary>
        /// Test the property 'ImageUrl'
        /// </summary>
        [Fact]
        public void ImageUrlTest()
        {
            // TODO unit test for the property 'ImageUrl'
        }
        /// <summary>
        /// Test the property 'CountryCodeOfOrigin'
        /// </summary>
        [Fact]
        public void CountryCodeOfOriginTest()
        {
            // TODO unit test for the property 'CountryCodeOfOrigin'
        }
        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
        /// <summary>
        /// Test the property 'CustomsCommodityCode'
        /// </summary>
        [Fact]
        public void CustomsCommodityCodeTest()
        {
            // TODO unit test for the property 'CustomsCommodityCode'
        }
        /// <summary>
        /// Test the property 'CustomsDescription'
        /// </summary>
        [Fact]
        public void CustomsDescriptionTest()
        {
            // TODO unit test for the property 'CustomsDescription'
        }
        /// <summary>
        /// Test the property 'Shop'
        /// </summary>
        [Fact]
        public void ShopTest()
        {
            // TODO unit test for the property 'Shop'
        }
        /// <summary>
        /// Test the property 'Virtual'
        /// </summary>
        [Fact]
        public void VirtualTest()
        {
            // TODO unit test for the property 'Virtual'
        }

    }

}
