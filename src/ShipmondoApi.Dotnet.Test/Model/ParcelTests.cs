/*
 * Shipmondo API
 *
 * A unofficial thirdparty library for shipmondo api for dotnet
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ShipmondoApi.Dotnet.Model;
using ShipmondoApi.Dotnet.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ShipmondoApi.Dotnet.Test.Model
{
    /// <summary>
    ///  Class for testing Parcel
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ParcelTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Parcel
        //private Parcel instance;

        public ParcelTests()
        {
            // TODO uncomment below to create an instance of Parcel
            //instance = new Parcel();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Parcel
        /// </summary>
        [Fact]
        public void ParcelInstanceTest()
        {
            // TODO uncomment below to test "IsType" Parcel
            //Assert.IsType<Parcel>(instance);
        }


        /// <summary>
        /// Test the property 'Quantity'
        /// </summary>
        [Fact]
        public void QuantityTest()
        {
            // TODO unit test for the property 'Quantity'
        }
        /// <summary>
        /// Test the property 'Weight'
        /// </summary>
        [Fact]
        public void WeightTest()
        {
            // TODO unit test for the property 'Weight'
        }
        /// <summary>
        /// Test the property 'PkgNo'
        /// </summary>
        [Fact]
        public void PkgNoTest()
        {
            // TODO unit test for the property 'PkgNo'
        }
        /// <summary>
        /// Test the property 'PkgNos'
        /// </summary>
        [Fact]
        public void PkgNosTest()
        {
            // TODO unit test for the property 'PkgNos'
        }
        /// <summary>
        /// Test the property 'Length'
        /// </summary>
        [Fact]
        public void LengthTest()
        {
            // TODO unit test for the property 'Length'
        }
        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Fact]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }
        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Fact]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }
        /// <summary>
        /// Test the property 'Volume'
        /// </summary>
        [Fact]
        public void VolumeTest()
        {
            // TODO unit test for the property 'Volume'
        }
        /// <summary>
        /// Test the property 'RunningMetre'
        /// </summary>
        [Fact]
        public void RunningMetreTest()
        {
            // TODO unit test for the property 'RunningMetre'
        }
        /// <summary>
        /// Test the property 'Content'
        /// </summary>
        [Fact]
        public void ContentTest()
        {
            // TODO unit test for the property 'Content'
        }
        /// <summary>
        /// Test the property 'Packaging'
        /// </summary>
        [Fact]
        public void PackagingTest()
        {
            // TODO unit test for the property 'Packaging'
        }
        /// <summary>
        /// Test the property 'DangerousGoods'
        /// </summary>
        [Fact]
        public void DangerousGoodsTest()
        {
            // TODO unit test for the property 'DangerousGoods'
        }
        /// <summary>
        /// Test the property 'DeclaredValue'
        /// </summary>
        [Fact]
        public void DeclaredValueTest()
        {
            // TODO unit test for the property 'DeclaredValue'
        }

    }

}
