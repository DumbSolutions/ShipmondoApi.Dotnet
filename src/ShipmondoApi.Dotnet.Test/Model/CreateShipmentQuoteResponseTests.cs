/*
 * Shipmondo API
 *
 * A unofficial thirdparty library for shipmondo api for dotnet
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ShipmondoApi.Dotnet.Model;
using ShipmondoApi.Dotnet.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ShipmondoApi.Dotnet.Test.Model
{
    /// <summary>
    ///  Class for testing CreateShipmentQuoteResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreateShipmentQuoteResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CreateShipmentQuoteResponse
        //private CreateShipmentQuoteResponse instance;

        public CreateShipmentQuoteResponseTests()
        {
            // TODO uncomment below to create an instance of CreateShipmentQuoteResponse
            //instance = new CreateShipmentQuoteResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateShipmentQuoteResponse
        /// </summary>
        [Fact]
        public void CreateShipmentQuoteResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" CreateShipmentQuoteResponse
            //Assert.IsType<CreateShipmentQuoteResponse>(instance);
        }


        /// <summary>
        /// Test the property 'CarrierCode'
        /// </summary>
        [Fact]
        public void CarrierCodeTest()
        {
            // TODO unit test for the property 'CarrierCode'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'ProductCode'
        /// </summary>
        [Fact]
        public void ProductCodeTest()
        {
            // TODO unit test for the property 'ProductCode'
        }
        /// <summary>
        /// Test the property 'ServiceCodes'
        /// </summary>
        [Fact]
        public void ServiceCodesTest()
        {
            // TODO unit test for the property 'ServiceCodes'
        }
        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Fact]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }
        /// <summary>
        /// Test the property 'PriceBeforeVat'
        /// </summary>
        [Fact]
        public void PriceBeforeVatTest()
        {
            // TODO unit test for the property 'PriceBeforeVat'
        }
        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }
        /// <summary>
        /// Test the property 'CarrierPrice'
        /// </summary>
        [Fact]
        public void CarrierPriceTest()
        {
            // TODO unit test for the property 'CarrierPrice'
        }

    }

}
