/*
 * Shipmondo API
 *
 * A unofficial thirdparty library for shipmondo api for dotnet
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Reflection;
using NSubstitute;
using NSubstitute.Extensions;
using RestSharp;
using Xunit;

using ShipmondoApi.Dotnet.Client;
using ShipmondoApi.Dotnet.Api;
using ShipmondoApi.Dotnet.Model;

// uncomment below to import models
//using ShipmondoApi.Dotnet.Model;

namespace ShipmondoApi.Dotnet.Test.Api
{
    /// <summary>
    ///  Class for testing ShipmentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ShipmentsApiTests : IDisposable
    {
        private ShipmentsApi instance;

        public ShipmentsApiTests()
        {
            instance = new ShipmentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShipmentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ShipmentsApi
            //Assert.IsType<ShipmentsApi>(instance);
        }

        /// <summary>
        /// Test ProformaInvoicesGet
        /// </summary>
        [Fact]
        public void ProformaInvoicesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.ProformaInvoicesGet(id);
            //Assert.IsType<List<ProformaInvoice>>(response);
        }

        /// <summary>
        /// Test ShipmentCancelAtCarrier
        /// </summary>
        [Fact]
        public void ShipmentCancelAtCarrierTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.ShipmentCancelAtCarrier(id);
            //Assert.IsType<ShipmentCancelled>(response);
        }

        /// <summary>
        /// Test ShipmentGet
        /// </summary>
        [Fact]
        public void ShipmentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.ShipmentGet(id);
            //Assert.IsType<Shipment>(response);
        }

        /// <summary>
        /// Test ShipmentWaybillGet
        /// </summary>
        [Fact]
        public void ShipmentWaybillGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.ShipmentWaybillGet(id);
            //Assert.IsType<List<Document>>(response);
        }

        /// <summary>
        /// Test ShipmentsGet
        /// </summary>
        [Fact]
        public void ShipmentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string orderId = null;
            //string packageNumber = null;
            //string carrierCode = null;
            //string senderCountry = null;
            //string receiverCountry = null;
            //string waybillReference = null;
            //DateTime? createdAtMin = null;
            //DateTime? createdAtMax = null;
            //int? perPage = null;
            //int? page = null;
            //var response = instance.ShipmentsGet(id, orderId, packageNumber, carrierCode, senderCountry, receiverCountry, waybillReference, createdAtMin, createdAtMax, perPage, page);
            //Assert.IsType<List<Shipment>>(response);
        }

        /// <summary>
        /// Test ShipmentsPost
        /// </summary>
        [Fact]
        public void ShipmentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            var senderRequest = new SenderRequest(name: Faker.Name.FullName(), address1: Faker.Address.StreetAddress(),
                zipcode: Faker.Address.ZipCode(), city: Faker.Address.City(),
                countryCode: Faker.Country.TwoLetterCode());
            var receiverRequest = new ReceiverRequest(name: Faker.Name.FullName(),
                address1: Faker.Address.StreetAddress(), zipcode: Faker.Address.ZipCode(), city: Faker.Address.City(),
                countryCode: Faker.Country.TwoLetterCode(), mobile: Faker.Phone.Number());
            CreateShipmentRequest body = new CreateShipmentRequest(productCode: "something", serviceCodes: "something",
                sender: senderRequest, receiver: receiverRequest,
                parcels: new List<ParcelAdvanced>() { new ParcelAdvanced(weight: 1000) });
            instance.Client = Substitute.For<ISynchronousClient>();
            instance.Client.Configure().Post<Shipment>(Arg.Any<string>(), Arg.Any<RequestOptions>(), Arg.Any<IReadableConfiguration>())
                .Returns((ci) =>
                {
                    var data = new Shipment();
                    return new ApiResponse<Shipment>(HttpStatusCode.OK, data);
                });
            var response = instance.ShipmentsPost(body);
            Assert.NotNull(response);
            Assert.IsType<Shipment>(response);
            
        }

        /// <summary>
        /// Test ShipmentsQrCodeGet
        /// </summary>
        [Fact]
        public void ShipmentsQrCodeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string fileFormat = null;
            //var response = instance.ShipmentsQrCodeGet(id, fileFormat);
            //Assert.IsType<QrCode>(response);
        }

        /// <summary>
        /// Test ShipmentsQuotePost
        /// </summary>
        [Fact]
        public void ShipmentsQuotePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateShipmentRequest body = null;
            //var response = instance.ShipmentsQuotePost(body);
            //Assert.IsType<CreateShipmentQuoteResponse>(response);
        }
    }
}
