/*
 * Shipmondo API
 *
 * A unofficial thirdparty library for shipmondo api for dotnet
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ShipmondoApi.Dotnet.Client;
using ShipmondoApi.Dotnet.Api;
// uncomment below to import models
//using ShipmondoApi.Dotnet.Model;

namespace ShipmondoApi.Dotnet.Test.Api
{
    /// <summary>
    ///  Class for testing SalesOrdersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SalesOrdersApiTests : IDisposable
    {
        private SalesOrdersApi instance;

        public SalesOrdersApiTests()
        {
            instance = new SalesOrdersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SalesOrdersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SalesOrdersApi
            //Assert.IsType<SalesOrdersApi>(instance);
        }

        /// <summary>
        /// Test FulfillmentGet
        /// </summary>
        [Fact]
        public void FulfillmentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.FulfillmentGet(id);
            //Assert.IsType<FulfillmentCreated>(response);
        }

        /// <summary>
        /// Test FulfillmentPost
        /// </summary>
        [Fact]
        public void FulfillmentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //CreateFulfillmentRequest body = null;
            //var response = instance.FulfillmentPost(id, body);
            //Assert.IsType<FulfillmentCreated>(response);
        }

        /// <summary>
        /// Test PackingSlipGet
        /// </summary>
        [Fact]
        public void PackingSlipGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> ids = null;
            //string outputFormat = null;
            //var response = instance.PackingSlipGet(ids, outputFormat);
            //Assert.IsType<List<PackingSlip>>(response);
        }

        /// <summary>
        /// Test PickListGet
        /// </summary>
        [Fact]
        public void PickListGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> ids = null;
            //string outputFormat = null;
            //var response = instance.PickListGet(ids, outputFormat);
            //Assert.IsType<List<PickList>>(response);
        }

        /// <summary>
        /// Test SalesOrderBarcode
        /// </summary>
        [Fact]
        public void SalesOrderBarcodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProcessSalesOrderBarcode body = null;
            //var response = instance.SalesOrderBarcode(body);
            //Assert.IsType<SalesOrder>(response);
        }

        /// <summary>
        /// Test SalesOrderCapture
        /// </summary>
        [Fact]
        public void SalesOrderCaptureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.SalesOrderCapture(id);
            //Assert.IsType<SalesOrder>(response);
        }

        /// <summary>
        /// Test SalesOrderCreateShipment
        /// </summary>
        [Fact]
        public void SalesOrderCreateShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.SalesOrderCreateShipment(id);
            //Assert.IsType<SalesOrder>(response);
        }

        /// <summary>
        /// Test SalesOrderFulfillmentsGet
        /// </summary>
        [Fact]
        public void SalesOrderFulfillmentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.SalesOrderFulfillmentsGet(id);
            //Assert.IsType<FulfillmentCreated>(response);
        }

        /// <summary>
        /// Test SalesOrderGet
        /// </summary>
        [Fact]
        public void SalesOrderGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.SalesOrderGet(id);
            //Assert.IsType<SalesOrder>(response);
        }

        /// <summary>
        /// Test SalesOrderPackagingGet
        /// </summary>
        [Fact]
        public void SalesOrderPackagingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //var response = instance.SalesOrderPackagingGet(id);
            //Assert.IsType<SalesOrderPackaging>(response);
        }

        /// <summary>
        /// Test SalesOrderPackagingsGet
        /// </summary>
        [Fact]
        public void SalesOrderPackagingsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //int? perPage = null;
            //int? page = null;
            //var response = instance.SalesOrderPackagingsGet(id, perPage, page);
            //Assert.IsType<List<SalesOrderPackaging>>(response);
        }

        /// <summary>
        /// Test SalesOrderPackingSlips
        /// </summary>
        [Fact]
        public void SalesOrderPackingSlipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string format = null;
            //var response = instance.SalesOrderPackingSlips(id, format);
            //Assert.IsType<PackingSlip>(response);
        }

        /// <summary>
        /// Test SalesOrderPickList
        /// </summary>
        [Fact]
        public void SalesOrderPickListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string format = null;
            //var response = instance.SalesOrderPickList(id, format);
            //Assert.IsType<List<PickListData>>(response);
        }

        /// <summary>
        /// Test SalesOrderPut
        /// </summary>
        [Fact]
        public void SalesOrderPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //UpdateSalesOrderRequest body = null;
            //var response = instance.SalesOrderPut(id, body);
            //Assert.IsType<SalesOrder>(response);
        }

        /// <summary>
        /// Test SalesOrderUpdateNote
        /// </summary>
        [Fact]
        public void SalesOrderUpdateNoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //UpdateSalesOrderNote body = null;
            //var response = instance.SalesOrderUpdateNote(id, body);
            //Assert.IsType<SalesOrder>(response);
        }

        /// <summary>
        /// Test SalesOrdersGet
        /// </summary>
        [Fact]
        public void SalesOrdersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string orderId = null;
            //string reference = null;
            //string billToEmail = null;
            //string billToMobile = null;
            //string shipToEmail = null;
            //string shipToMobile = null;
            //bool? archived = null;
            //DateTime? createdAtMin = null;
            //DateTime? createdAtMax = null;
            //DateTime? updatedAtMin = null;
            //DateTime? updatedAtMax = null;
            //int? perPage = null;
            //int? page = null;
            //var response = instance.SalesOrdersGet(id, orderId, reference, billToEmail, billToMobile, shipToEmail, shipToMobile, archived, createdAtMin, createdAtMax, updatedAtMin, updatedAtMax, perPage, page);
            //Assert.IsType<List<SalesOrder>>(response);
        }

        /// <summary>
        /// Test SalesOrdersPost
        /// </summary>
        [Fact]
        public void SalesOrdersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSalesOrderRequest body = null;
            //var response = instance.SalesOrdersPost(body);
            //Assert.IsType<SalesOrder>(response);
        }
    }
}
